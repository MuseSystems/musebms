name: MSBMS Application CI

on:
  push:
    branches: [ next_version, versions ]
  pull_request:
    branches: [ next_version, versions ]

env:
  MIX_ENV: test

jobs:
  mscmp-syst-error:
    name: mscmp-syst-error-${{ matrix.otp }}-${{ matrix.elixir }}
    runs-on: ubuntu-latest
    env:
      MSBMS_PRJDIR: ./app_server/components/system/mscmp_syst_error
    strategy:
      matrix:
        otp: ['26.1.2']
        elixir: ['1.15.7']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v3

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{ matrix.otp }}
            elixir-version: ${{ matrix.elixir }}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ${{ env.MSBMS_PRJDIR  }}

        - name: Run Tests
          run: mix test
          working-directory: ${{ env.MSBMS_PRJDIR  }}

        - name: Run Credo
          run: mix credo
          working-directory: ${{ env.MSBMS_PRJDIR  }}

        - name: Restore PLT cache
          id: plt_cache
          uses: actions/cache/restore@v3
          with:
            key: |
              plt-${{ job.name }}
            restore-keys: |
              plt-${{ job.name }}
            path: |
              priv/plts

        - name: Create PLTs
          if: steps.plt_cache.outputs.cache-hit != 'true'
          run: |
            mkdir -p priv/plts
            mix dialyzer --plt
          working-directory: ${{ env.MSBMS_PRJDIR  }}

        - name: Save PLT cache
          id: plt_cache_save
          uses: actions/cache/save@v3
          if: steps.plt_cache.outputs.cache-hit != 'true'
          with:
            key: |
              plt-${{ job.name }}
            path: |
              priv/plts

        - name: Run Dialyzer
          run: mix dialyzer --format github
          working-directory: ${{ env.MSBMS_PRJDIR  }}

  # mscmp-syst-utils:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystUtils (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_utils

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_utils

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_utils

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_utils

  # mscmp-syst-network:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystNetwork (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_network

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_network

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_network

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_network

  # mscmp-syst-options:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystOptions (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_options

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_options

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_options

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_options

  # mscmp-syst-limiter:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystLimiter (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_limiter

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_limiter

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/components/system/mscmp_syst_limiter

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_limiter

  #        - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_limiter

  # mscmp-syst_db:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystDb (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_db

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_db

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_db

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_db

  # mscmp-syst-settings:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystSettings (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_settings

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_settings

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_settings

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_settings

  # mscmp-syst-enums:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystEnums (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_enums

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_enums

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_enums

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_enums

  # mscmp-syst-instance:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystInstance (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_instance

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_instance

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/components/system/mscmp_syst_instance

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_instance

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_instance

  # mscmp-syst-authn:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystAuthn (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_authn

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_authn

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/components/system/mscmp_syst_authn

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_authn

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_authn

  # mscmp-syst-perms:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystPerms (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_perms

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_perms

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/components/system/mscmp_syst_perms

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_perms

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_perms

  # mscmp-syst-mcp-perms:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystMcpPerms (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

  # mscmp-syst-session:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystSession (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_session

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_session

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/components/system/mscmp_syst_session

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_session

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_session

  # mscmp-syst-forms:
  #   runs-on: ubuntu-latest
  #   name: MscmpSystForms (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/components/system/mscmp_syst_forms

  #       - name: Run Tests
  #         run: mix test
  #         working-directory: ./app_server/components/system/mscmp_syst_forms

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/components/system/mscmp_syst_forms

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/components/system/mscmp_syst_forms

  # mssub-mcp:
  #   runs-on: ubuntu-latest
  #   name: MssubMcp (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}) CI
  #   strategy:
  #     matrix:
  #       otp: ['26.1.2']
  #       elixir: ['1.15.7']
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: testing_dba
  #         POSTGRES_PASSWORD: testing-dba-password
  #         POSTGRES_PORT: 5432
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #       - name: Checkout repository code
  #         uses: actions/checkout@v3

  #       - name: Install Elixir
  #         uses: erlef/setup-beam@v1
  #         with:
  #           otp-version: ${{ matrix.otp }}
  #           elixir-version: ${{ matrix.elixir }}

  #       - name: Initialize Database
  #         run: psql -f tools/database_scripts/bootstrap_database.psql --set dbadmin_password='muse.syst.dba.testing.password' postgresql://testing_dba:testing-dba-password@localhost:5432/postgres

  #       - name: Build Mix Dependencies
  #         run: mix deps.get
  #         working-directory: ./app_server/subsystems/mssub_mcp

  #       - name: Run Unit Tests
  #         run: mix test
  #         working-directory: ./app_server/subsystems/mssub_mcp

  #       - name: Run Integration Tests
  #         run: mix test --only integration
  #         working-directory: ./app_server/subsystems/mssub_mcp

  #       - name: Run Credo
  #         run: mix credo
  #         working-directory: ./app_server/subsystems/mssub_mcp

  #       - name: Run Dialyzer
  #         run: mix dialyzer --format github
  #         working-directory: ./app_server/subsystems/mssub_mcp
