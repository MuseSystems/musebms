name: MSBMS Application CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  msbms-syst-error:
    runs-on: ubuntu-latest
    name: MuseSystError (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['24.2']
        elixir: ['1.13.2']

  steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Build Mix Dependencies
        run: mix deps.get
        working-directory: ./components/system/msbms_syst_error

      - name: Run Tests
        run: mix test
        working-directory: ./components/system/msbms_syst_error

      - name: Run Credo
        run: mix credo --strict
        working-directory: ./components/system/msbms_syst_error

  msbms-syst-options:
    runs-on: ubuntu-latest
    name: MuseSystOptions (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['24.2']
        elixir: ['1.13.2']

  steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Build Mix Dependencies
        run: mix deps.get
        working-directory: ./components/system/msbms_syst_options

      - name: Run Tests
        run: mix test
        working-directory: ./components/system/msbms_syst_options

      - name: Run Credo
        run: mix credo --strict
        working-directory: ./components/system/msbms_syst_options

  msbms-syst-datastore:
    runs-on: ubuntu-latest
    name: MuseSystDatastore (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['24.2']
        elixir: ['1.13.2']

  steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_USER: msbms_installer
              POSTGRES_PASSWORD: msbms_pass
              POSTGRES_PORT: 5432
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

      - name: Build Mix Dependencies
        run: mix deps.get
        working-directory: ./components/system/msbms_syst_datastore

      - name: Run Tests
        run: mix test
        working-directory: ./components/system/msbms_syst_datastore

      - name: Run Credo
        run: mix credo --strict
        working-directory: ./components/system/msbms_syst_datastore

  msbms-application:
    runs-on: ubuntu-latest
    name: Muse BMS (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['24.2']
        elixir: ['1.13.2']

  steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_USER: msbms_installer
              POSTGRES_PASSWORD: msbms_pass
              POSTGRES_PORT: 5432
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

      - name: Build Mix Dependencies
        run: mix deps.get
        working-directory: ./application/msbms

      - name: Run Tests
        run: mix test
        working-directory: ./application/msbms

      - name: Run Credo
        run: mix credo --strict
        working-directory: ./application/msbms

