name: MSBMS Application CI

on:
  push:
    branches: [ next_version, versions ]
  pull_request:
    branches: [ next_version, versions ]

jobs:
  msbms-syst-error:
    runs-on: ubuntu-latest
    name: MsbmsSystError (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_error

        - name: Run Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_error

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_error

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_error

  msbms-syst-options:
    runs-on: ubuntu-latest
    name: MsbmsSystOptions (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_options

        - name: Run Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_options

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_options

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_options

  msbms-syst-rate-limiter:
    runs-on: ubuntu-latest
    name: MsbmsSystRateLimiter (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_rate_limiter

        - name: Run Unit Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_rate_limiter

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./components/system/msbms_syst_rate_limiter

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_rate_limiter

  msbms-syst-datastore:
    runs-on: ubuntu-latest
    name: MsbmsSystDatastore (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: muse_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database/utility/bootstrap_database.psql postgresql://muse_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./components/system/msbms_syst_datastore

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_datastore

        - name: Run Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_datastore

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_datastore

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_datastore

  msbms-syst-settings:
    runs-on: ubuntu-latest
    name: MsbmsSystSettings (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: muse_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://muse_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./components/system/msbms_syst_settings

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_settings

        - name: Run Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_settings

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_settings

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_settings

  msbms-syst-enums:
    runs-on: ubuntu-latest
    name: MsbmsSystEnums (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: muse_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://muse_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./components/system/msbms_syst_enums

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_enums

        - name: Run Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_enums

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_enums

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_enums

  msbms-syst-instance-mgr:
    runs-on: ubuntu-latest
    name: MsbmsSystInstanceMgr (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: muse_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://muse_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./components/system/msbms_syst_instance_mgr

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_instance_mgr

        - name: Run Unit Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_instance_mgr

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./components/system/msbms_syst_instance_mgr

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_instance_mgr

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_instance_mgr

  msbms-syst-authentication:
    runs-on: ubuntu-latest
    name: MsbmsSystAuthentication (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: muse_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://muse_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./components/system/msbms_syst_authentication

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./components/system/msbms_syst_authentication

        - name: Run Unit Tests
          run: mix test
          working-directory: ./components/system/msbms_syst_authentication

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./components/system/msbms_syst_authentication

        - name: Run Credo
          run: mix credo
          working-directory: ./components/system/msbms_syst_authentication

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./components/system/msbms_syst_authentication

  msbms-application:
    runs-on: ubuntu-latest
    name: Muse BMS (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: muse_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://muse_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./application/msbms

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./application/msbms

        - name: Run Tests
          run: mix test
          working-directory: ./application/msbms

        - name: Run Credo
          run: mix credo
          working-directory: ./application/msbms

        # - name: Run Dialyzer
        #   run: mix dialyzer
        #   working-directory: ./application/msbms

