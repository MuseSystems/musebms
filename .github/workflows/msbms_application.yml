name: MSBMS Application CI

on:
  push:
    branches: [ next_version, versions ]
  pull_request:
    branches: [ next_version, versions ]

jobs:
  mscmp-syst-error:
    runs-on: ubuntu-latest
    name: MscmpSystError (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_error

        - name: Run Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_error

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_error

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_error

  mscmp-syst-options:
    runs-on: ubuntu-latest
    name: MscmpSystOptions (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_options

        - name: Run Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_options

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_options

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_options

  mscmp-syst-limiter:
    runs-on: ubuntu-latest
    name: MscmpSystLimiter (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_limiter

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_limiter

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/components/system/mscmp_syst_limiter

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_limiter

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_limiter

  mscmp-syst_db:
    runs-on: ubuntu-latest
    name: MscmpSystDb (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database/utility/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_db

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_db

        - name: Run Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_db

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_db

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_db

  mscmp-syst-settings:
    runs-on: ubuntu-latest
    name: MscmpSystSettings (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_settings

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_settings

        - name: Run Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_settings

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_settings

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_settings

  mscmp-syst-enums:
    runs-on: ubuntu-latest
    name: MscmpSystEnums (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_enums

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_enums

        - name: Run Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_enums

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_enums

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_enums

  mscmp-syst-instance:
    runs-on: ubuntu-latest
    name: MscmpSystInstance (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_instance

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_instance

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_instance

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/components/system/mscmp_syst_instance

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_instance

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_instance

  mscmp-syst-authn:
    runs-on: ubuntu-latest
    name: MscmpSystAuthn (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_authn

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_authn

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_authn

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/components/system/mscmp_syst_authn

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_authn

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_authn

  mscmp-syst-perms:
    runs-on: ubuntu-latest
    name: MscmpSystAuthn (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_perms

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_perms

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_perms

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/components/system/mscmp_syst_perms

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_perms

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_perms

 mscmp-syst-mcp-perms:
    runs-on: ubuntu-latest
    name: MscmpSystAuthn (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/components/system/mscmp_syst_mcp_perms

  mssub-mcp:
    runs-on: ubuntu-latest
    name: MssubMcp (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/subsystems/mssub_mcp

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/subsystems/mssub_mcp

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/subsystems/mssub_mcp

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/subsystems/mssub_mcp

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/subsystems/mssub_mcp

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/subsystems/mssub_mcp

  mssub-bms:
    runs-on: ubuntu-latest
    name: MssubBms (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/subsystems/mssub_bms

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/subsystems/mssub_bms

        - name: Run Unit Tests
          run: mix test
          working-directory: ./app_server/subsystems/mssub_bms

        - name: Run Integration Tests
          run: mix test --only integration
          working-directory: ./app_server/subsystems/mssub_bms

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/subsystems/mssub_bms

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/subsystems/mssub_bms

  msapp-platform:
    runs-on: ubuntu-latest
    name: MsappPlatform (OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}) CI
    strategy:
      matrix:
        otp: ['25.1.2']
        elixir: ['1.14.2']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ms_syst_dba
          POSTGRES_PASSWORD: muse.syst.dba.testing.password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        - name: Checkout repository code
          uses: actions/checkout@v2

        - name: Install Elixir
          uses: erlef/setup-beam@v1
          with:
            otp-version: ${{matrix.otp}}
            elixir-version: ${{matrix.elixir}}

        - name: Initialize Database
          run: psql -f database_utils/bootstrap_database.psql postgresql://ms_syst_dba:muse.syst.dba.testing.password@localhost:5432/postgres
          working-directory: ./app_server/platform/msapp_platform

        - name: Build Mix Dependencies
          run: mix deps.get
          working-directory: ./app_server/platform/msapp_platform

        - name: Run Tests
          run: mix test
          working-directory: ./app_server/platform/msapp_platform

        - name: Run Credo
          run: mix credo
          working-directory: ./app_server/platform/msapp_platform

        - name: Run Dialyzer
          run: mix dialyzer
          working-directory: ./app_server/platform/msapp_platform

