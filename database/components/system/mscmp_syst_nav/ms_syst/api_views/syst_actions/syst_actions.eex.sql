-- File:        syst_actions.eex.sql
-- Location:    musebms/database/components/system/mscmp_syst_nav/ms_syst/api_views/syst_actions/syst_actions.eex.sql
-- Project:     Muse Systems Business Management System
--
-- Copyright Â© Lima Buttgereit Holdings LLC d/b/a Muse Systems
-- This file may include content copyrighted and licensed from third parties.
--
-- See the LICENSE file in the project root for license terms and conditions.
-- See the NOTICE file in the project root for copyright ownership information.
--
-- muse.information@musesystems.com :: https://muse.systems

CREATE VIEW ms_syst.syst_actions AS
SELECT
    id
  , internal_name
  , display_name
  , external_name
  , action_group_id
  , command
  , command_config
  , command_aliases
  , command_search
  , syst_description
  , user_description
  , diag_timestamp_created
  , diag_role_created
  , diag_timestamp_modified
  , diag_wallclock_modified
  , diag_role_modified
  , diag_row_version
  , diag_update_count
FROM ms_syst_data.syst_actions;

ALTER VIEW ms_syst.syst_actions OWNER TO <%= ms_owner %>;

REVOKE ALL ON TABLE ms_syst.syst_actions FROM PUBLIC;

-- CREATE TRIGGER a50_trig_i_i_syst_actions
--     INSTEAD OF INSERT ON ms_syst.syst_actions
--     FOR EACH ROW EXECUTE PROCEDURE ms_syst.trig_i_i_syst_actions();
--
-- CREATE TRIGGER a50_trig_i_u_syst_actions
--     INSTEAD OF UPDATE ON ms_syst.syst_actions
--     FOR EACH ROW EXECUTE PROCEDURE ms_syst.trig_i_u_syst_actions();
--
-- CREATE TRIGGER a50_trig_i_d_syst_actions
--     INSTEAD OF DELETE ON ms_syst.syst_actions
--     FOR EACH ROW EXECUTE PROCEDURE ms_syst.trig_i_d_syst_actions();

DO
$DOCUMENTATION$
DECLARE
    -- View
    var_view_config ms_syst_priv.comments_config_apiview;

    -- View Columns
    var_action_group_id ms_syst_priv.comments_config_apiview_column;
    var_command         ms_syst_priv.comments_config_apiview_column;
    var_command_config  ms_syst_priv.comments_config_apiview_column;
    var_command_aliases ms_syst_priv.comments_config_apiview_column;
    var_command_search  ms_syst_priv.comments_config_apiview_column;

BEGIN

    --
    -- API View Config
    --

    var_view_config.table_schema := 'ms_syst_data';
    var_view_config.table_name   := 'syst_actions';
    var_view_config.view_schema  := 'ms_syst';
    var_view_config.view_name    := 'syst_actions';
    var_view_config.syst_records := TRUE;
    var_view_config.syst_update  := TRUE;

    --
    -- Column Configs
    --

    var_action_group_id.column_name  := 'action_group_id';
    var_action_group_id.required     := TRUE;
    var_action_group_id.user_update  := FALSE;
    var_action_group_id.supplemental :=
$DOC$This column is part of a composite key.  The combined values of
`action_group_id` and `command` must be unique.  The `command` column may be
`NULL` which excludes the record from this uniqueness check (`NULL` values are
distinct).$DOC$;

    var_command.column_name  := 'command';
    var_command.supplemental :=
$DOC$This column is part of a composite key.  The combined values of
`action_group_id` and `command` must be unique.  The `command` column may be
`NULL` which excludes the record from this uniqueness check (`NULL` values are
distinct).$DOC$;
    
    var_command_config.column_name      := 'command_config';
    
    var_command_aliases.column_name      := 'command_aliases';
    var_command_aliases.syst_update_mode := 'maint';

    var_command_search.column_name      := 'command_search';
    var_command_search.default_value    := 'Autogenerated';
    var_command_search.user_insert      := FALSE;
    var_command_search.user_update      := FALSE;

    var_view_config.columns :=
        ARRAY [
              var_action_group_id
            , var_command
            , var_command_config
            , var_command_aliases
            , var_command_search
            ]::ms_syst_priv.comments_config_apiview_column[];

    PERFORM ms_syst_priv.generate_comments_apiview( var_view_config );

END;
$DOCUMENTATION$;
