searchData={"items":[{"type":"module","title":"MscmpSystAuthn","doc":"API for the management of user authentication.\n\nThis Component provides a global method of authentication for users wishing to\nuse the system.  General features supported by this Component include:\n\n  * The ability to host user accounts that are managed by specific tenants\n\n  * The ability to host user accounts that are independent of any specific\n  tenant (e.g. freelance bookkeepers)\n\n  * Authentication rights for users to specific Application Instances\n\n  * Use of a single user account to authenticate to Application Instances\n  owned by different tenants.\n\n  * Individual tenant controls over certain authentication controls such as\n  Password Credential complexity or requiring Multi-Factor Authentication\n\n  * The ability to establish \"Network Rules\" which act as a sort of firewall\n  allowing or denying certain origin host IP addresses or networks the right\n  to attempt authentication\n\n  * Rate limiting of authentication attempts enforced, independently, by\n  identifier and by originating host IP address\n\nNote that this Component doesn't provide a substantial authorization\ncapability.  Authorization needs are left for higher level, Application\nInstance functionality to fulfill.","ref":"MscmpSystAuthn.html"},{"type":"module","title":"Concepts - MscmpSystAuthn","doc":"Below are listed the conceptual ideas that need to be understood to use this\ncomponent effectively.  Concepts in this Component depend heavily on a number\nof concepts derived from the `MscmpSystInstance` Component so familiarity\nwith that Component will be helpful in understanding the ideas and functioning\nof this authentication component.\n\n##","ref":"MscmpSystAuthn.html#module-concepts"},{"type":"module","title":"Access Accounts - MscmpSystAuthn","doc":"An Access Account is the record type which defines a user of the system for\nthe purposes of authentication.  Ideally, a single Access Account is defined\nfor any single person in the world that will use the system.  The information\nthat an Access Account captures about a user is limited to only that essential\nto the authentication process; this Component does not provide general\ninformation management for the user as a person.\n\nAccess Accounts may be Owned Access Accounts or Unowned Access Accounts.\nOwned Access Accounts are the more common kind of account and they are\ndirectly managed by tenants (Owners).  Owned Access Accounts are the kinds of\naccounts which are created by an employer to provide their employees access to\nthe system. Unowned Access Accounts are created directly by a user of the\nsystem and exist independent of any Owner.  Unowned Access Accounts facilitate\nindependent contractors or freelancers which may need access a variety of\nApplication Instances owned by different Owners.\n\n##","ref":"MscmpSystAuthn.html#module-access-accounts"},{"type":"module","title":"Identities - MscmpSystAuthn","doc":"An Identity is the means by which we can identify a specific Access Account\nusing an identifier known to the Access Account holder.  There are different\nidentifiers and methods of identification depending on the specific\nauthentication use case being supported.\n\nIdentifiers of the same Identifier Type are unique to the Owner/Access Account\ncombination.  All Unowned Access Accounts are considered as being in the same\nOwner group for this purpose.  This means that the Owner of an Access Account\nmust be known at authentication time since an identifier may be duplicated\nbetween different Owners.\n\nThe supported basic Identity Types used for regular authentication are:\n\n  * __Email__ - a typical interactive identification method where a user\n  provides an email address as the means of identification.  An Access Account\n  may define multiple Email Identities; for example, this can happen when a\n  user changes email addresses and the old email address must remain valid\n  prior to the new email address being validated by the Access Account holder.\n  Email Identities may require validation by the Access Account holder prior\n  to the email address being usable for identification purposes.  Unowned\n  Access Accounts typically require validation and Owned Access Accounts\n  typically will not.  All valid Email Identities use a common Password\n  Credential for authenticating the identification.\n\n  * __API Token__ - provides an identification mechanism for other programs to\n  access the system on behalf of the Access Account holder.  An Access Account\n  holder may define an arbitrary number of API Token Identities and typically\n  should have one API Token Identity for each different program that will\n  access the system.  API Token Identities require that a specific API Token\n  Credential be provided at authentication time.  API Token Identity\n  identifiers are usually randomly generated strings of characters.\n\nIn addition to the basic Identity Types, there are a number of special purpose\nIdentity Types:\n\n  * __Account Code__ - provides a simple to use identifier which can be\n  provided to third party Owners by an Access Account holder.  The use case\n  here is an Access Account holder wants to access an Application Instance\n  owned by a different organization than that to which the Access Account\n  holder belongs.  The third party Owner must invite the Access Account holder\n  to their instance and they issue the invitation to the Access Account\n  identified by the provided Account Code.  This allows third party\n  identification with necessarily disclosing information such as email\n  addresses.  Note that there is no authentication process and no Credential\n  for this Identity Type; this Identity Type exists purely for Access Account\n  identification.\n\n  * __Validation Token__ - a single use identifier which is created for the\n  purpose of validating an Email Identity.  Only one Validation Token may\n  exist for any one Email Identity at a time and the Email Identity may not\n  already be validated.  The Validation Token Identity also requires a\n  specific Validation Token Credential be provided at authentication time.\n  Once a Validation Token Identity is successfully authenticated the\n  associated Email Identity is immediately usable and the Validation Token\n  Identity/Credential pair is deleted from the system.  Validation Token\n  Identities are typically created with an expiration timestamp after which\n  the Validation Token Identity may no longer be used.\n\n  * __Recovery Token__ - a single use identifier which is created for the\n  purpose of initiating Password Credential recovery.  Only a single Recovery\n  Token Identity may exist for any Access Account at a time and that Access\n  Account must have an existing Password Credential record which can be\n  recovered.  The Recovery Token Identity must be authenticated with a\n  specific Recovery Token Credential.  On successful authentication of a\n  Recovery Token Identity, the Recovery Token Identity/Credential pair is\n  immediately deleted from the system.  Recovery Token Identities are\n  typically created with an expiration timestamp after which it may not longer\n  be used.  Finally note that the existence of a Recovery Token in no way\n  prevents the Password Credential from being used in authentication; it is\n  expected if a recovery process is started accidentally or in attempt at a\n  malicious recovery of the Password Credential, that the Recovery Identity/\n  Credential will simply be ignored by the Access Account holder and allowed\n  to expire.\n\n##","ref":"MscmpSystAuthn.html#module-identities"},{"type":"module","title":"Credentials - MscmpSystAuthn","doc":"Credentials provide the means for an Access Account holder to prove that they\nhave correctly identified themselves: that they are who they say they are.\nCredentials are the secrets which only the Access Account holder should know\nor have the ability to use.\n\nThere are a variety of different Credential Types which are typically\nassociated with a corresponding Identity Type:\n\n  * __Password__ - defines a password for Access Account holders to use during\n  interactive authentication attempts.  Typically Password Credentials are\n  used in association with Email Identities.  Only a single Password\n  Credential may exist for any single Access Account at a time.  Password\n  Credentials are subject to Password Rules which are described later.\n  Passwords are stored in the system using salted hashes and are not directly\n  recoverable; forgotten passwords must be reset through a recovery process.\n\n  * __API Token__ - used to authenticate API Token Identities.  Each API Token\n  Credential is associated with a specific API Token Identity and may only\n  authenticate that Identity.  API Token Credentials are usually a system\n  generated string of random characters.  API Token Credentials are stored in\n  the system using salted hashes.  At Credential create time, the creating\n  process is provided with the plaintext credential so that it may be\n  communicated to the Access Account holder, but is thereafter unrecoverable.\n\n  * __Validation Token__ - behaves in most ways the same as the API Token\n  Credential.  They key differences are that each Validation Token Credential\n  is associated with a specific Validation Token Identity and that\n  authentication using the Credential is a one time event; after a successful\n  authentication the Validation Token is deleted from the system.\n\n  * __Recovery Token__ - has all of the same behavioral characteristics of the\n  Validation Token Credential except its context of usage is in Password\n  Credential Recovery.\n\n>##","ref":"MscmpSystAuthn.html#module-credentials"},{"type":"module","title":"Note {: .neutral} - MscmpSystAuthn","doc":">\n> When looking at Credential related code, initialization data, tests, and\n> even in other documentation, you will find references to Multi-Factor\n> Authentication (MFA) functionality.  There are plans to include MFA\n> functionality and some work towards this goal, but that work is currently\n> incomplete and deferred until much more of the product is built out.\n\n##","ref":"MscmpSystAuthn.html#module-note-neutral"},{"type":"module","title":"Authenticators - MscmpSystAuthn","doc":"An Authenticator is simply the combination of related Identities and\nCredentials.  So, for example, an Access Account holder presenting an\nEmail/Password combination for authentication is presenting an Email/Password\nAuthenticator.  The concept isn't terribly important to this Component, but\nthe term does appear elsewhere in the documentation and so deserves definition.\n\n##","ref":"MscmpSystAuthn.html#module-authenticators"},{"type":"module","title":"Access Account/Instance Associations - MscmpSystAuthn","doc":"While most authorization activities are outside of the scope of this\nComponent, one authorization exists that must be granted to an Access Account\nprior to its being able to successfully authenticate.   All authentications\nare performed in the context of authenticating for access to a specific\nApplication Instance.  Owners of that Instance must authorize an Access\nAccount to authenticate to their Instance prior to the authentication process\nsucceeding (see `MscmpSystInstance` for more on Owners and Instances).\n\nOwned Access Accounts are typically granted access to all or specific\nInstances of the Owner which owns the Access Account.  Unowned Access Accounts\nare typically invited by an Owner to access a specific Instance and the\nUnowned Access Account holder must first accept the invitation to access the\nInstance prior to using it; the Access Account holder may also explicitly\ndecline such an invitation if they so choose.\n\nBoth the invitations to access and the permission to access an Instance are\nknown as Access Account/Instance Associations.  The various attributes of the\nAssociation record determine if an invitation is outstanding, declined, or if\naccess has been granted.\n\n##","ref":"MscmpSystAuthn.html#module-access-account-instance-associations"},{"type":"module","title":"Network Rules - MscmpSystAuthn","doc":"Network Rules are a simple whitelist/blacklist mechanism which evaluates the\napparent origin IP address of an inbound authentication attempt and determines\nif that host is allowed to attempt an authentication. Network Rules may be\ndefined established at the Global level (applicable to all Owners and\nInstances), the Owner level, or the Application Instance level.  Each Rule\ncan be designated to apply to a single host, an IP network, or a simple range\nof IP addresses.  When a host is seen for which no Network Rule has been\ndefined, a system default rule is applied which implicitly allows the\nauthentication attempt.\n\nA special type of Network Rule called a Disallowed Host also exists.  A\nDisallowed Host is exactly as it sounds: a specific originating IP address\nwhich is not allowed to authenticate users to the system.  Disallowed Hosts\nare checked on a Global basis and the purpose of the list is to stop hosts\ndetermined to be behaving suspiciously from attempting authentications.\nSuspicious behavior is determined using a set of (currently naive) heuristics\nwhich are only evaluated for hosts attempting authentications under the system\ndefault implied Network Rule.\n\n##","ref":"MscmpSystAuthn.html#module-network-rules"},{"type":"module","title":"Password Rules - MscmpSystAuthn","doc":"Password Rules define the standards that constitute acceptable passwords for\nuse as Credentials during interactive authentication processes.  A Global\nPassword Rule exists which sets the minimum requirements that all passwords in\nthe system must meet before being accept for use.  Owners may each establish\nOwner Password Rules which govern the Access Accounts that they own.  Owner\nPassword Rules may not reduce the stringency demanded of the Global Password\nRules, they can only increase the required stringency for their owned Access\nAccounts.  If an Owner defined Password Rule does define a less stringent\nstandard than demanded by the Global Password Rules, the Global Password Rule\ncontinue to be the one applied.  This evaluation is made rule by rule such\nthat the effective Password Rules that an Access Account holder sees may be a\nmix of the more stringent combination of both the Owner and Global Password\nRules.\n\n>##","ref":"MscmpSystAuthn.html#module-password-rules"},{"type":"module","title":"Note {: .neutral} - MscmpSystAuthn","doc":">\n> The term \"stringency\", or \"weakening\" which appears elsewhere in some\n> documentation, must not be understood to necessarily mean a strengthening or\n> weakening in security.  For example, an Owner may elect to set password\n> rules which require that a password contain at least one each of lower,\n> upper, number, and symbol characters.  Such a rule would be more stringent\n> than the Global Password Rules default settings which have no such\n> complexity requirements but would not be more secure than those default\n> rules according to studies on the matter. In fact, defining rules with\n> greater stringency may well result in less security than that offered by the\n> default Global Password Rules.\n>\n> Studies which provide further insight:\n>\n> [Human Generated Passwords – The Impacts of Password Requirements and Presentation Styles (2015)](https://link.springer.com/chapter/10.1007/978-3-319-20376-8_8)\n>\n> [Practical Recommendations for Stronger, More Usable Passwords Combining Minimum-strength, Minimum-length, and Blocklist Requirements (2020)](https://www.andrew.cmu.edu/user/nicolasc/publications/Tan-CCS20.pdf)\n\nThe default Global Password Rules are largely compatible with \"Authenticator\nAssurance Level 1\" as defined by the National Institute of Standards and\nTechnology's [Special Publication 800-63B](https://pages.nist.gov/800-63-3/sp800-63b.html#sec4).\nFor guidelines on the specific rules that may be configured, see\n`t:MscmpSystAuthn.Types.password_rule_params/0`.  Note that\n\"Authenticator\" in the NIST document context is not the same as we've defined\nabove.\n\nA special additional type of Global Password Rule exists referred to as the\nDisallowed Password list.  This is a list of passwords that are well known or\nare known to be compromised and that, because of this, are disallowed from\nusage so long as the \"Disallow Compromised\" rule is in effect.  Disallowed\nPasswords are stored as SHA-1 hashes of the password for reasonable\nobfuscation of the passwords and for compatibility with services such as those\nthat are available from services such as \"[Have I Been Pwned?](https://haveibeenpwned.com/)\".\n\n##","ref":"MscmpSystAuthn.html#module-note-neutral"},{"type":"module","title":"Rate Limits - MscmpSystAuthn","doc":"The system attempts to dissuade brute force hacking efforts by implementing\nlimits on the number of failed authentication attempts which are allowed.\nThere are currently two Rate Limits implemented.\n\nThe first enforces that an identifier may not be used in any more than five\nconsecutive failed authentication attempts in any 30 minute period.  After the\nfifth failure, the identifier will immediately be prevented from participating\nin any further authentication attempts for the remainder of the 30 minute\nwindow.\n\nThe second Rate Limit is host IP based.  Any host IP address seen to have 30\nconsecutive authentication failures over the course of two hours is\nautomatically added to the Disallowed Hosts list and prevented from further\nattempts to authenticate until an administrator removes the host from the\nlist.  This Rate Limit is only applied to host IP addresses which are only\nallowed access due to the implied default Network Rule; any explicitly allowed\nhost IP address is exempted from this Rate Limit.\n\nAny successful authentication event will reset the counters enforcing either\nof the Rate Limits.","ref":"MscmpSystAuthn.html#module-rate-limits"},{"type":"function","title":"MscmpSystAuthn.accept_instance_invite/1","doc":"Accepts the invitation made to an Access Account to access an Instance.\n\nThis process is only needed in the case where a\n`syst_access_account_instance_assocs` invitation may be accepted or declined\nby the Access Account holder.  To be accepted in this process the invitation\nrecord must have been previously created (see `invite_to_instance/3`), must\nnot be expired, previously declined, or previously accepted; trying to accept\na record in such a state will result in an error tuple being returned.\n\nNaturally, the Access Account holder may choose to never accept or decline the\ninvitation and may simply allow the invitation to expire.","ref":"MscmpSystAuthn.html#accept_instance_invite/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.accept_instance_invite/1","doc":"* `access_account_instance_assoc` - this value may be either the populated\n  `Msdata.SystAccessAccountInstanceAssocs` struct to\n  accept or the record ID of the record to accept.","ref":"MscmpSystAuthn.html#accept_instance_invite/1-parameters"},{"type":"function","title":"MscmpSystAuthn.accept_instance_invite/2","doc":"Accepts the invitation made to an Access Account to access an Instance,\nreferencing the record by its composite key values.\n\nThis function performs the same process as `accept_instance_invite/1`, but\nwill look up the record to accept using the Access Account, Instance, and\nCredential Type record ID values.","ref":"MscmpSystAuthn.html#accept_instance_invite/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.accept_instance_invite/2","doc":"* `access_account_id` - the record ID of the Access Account accepting the\n  invitation to the Instance.\n\n  * `instance_id` - the Instance record ID to which the Access Account has\n  been invited.","ref":"MscmpSystAuthn.html#accept_instance_invite/2-parameters"},{"type":"function","title":"MscmpSystAuthn.access_account_credential_recoverable!/1","doc":"Indicates if an Access Account's Password Credential is recoverable or not.\n\nAccess Account Password Credentials are only recoverable when they: 1) exist,\nand 2) are not already awaiting recovery.  When the Password Credential is\nrecoverable this function will return a simple `:ok` value.  If the Access\nAccount's Password Credential already has an issued recovery underway, the\nvalue `:existing_recovery` is returned.  If the Access Account lacks a\nPassword Credential record to recover, the value `:not_found` is returned. Any\nerrors encountered cause the function to raise an exception.","ref":"MscmpSystAuthn.html#access_account_credential_recoverable!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.access_account_credential_recoverable!/1","doc":"* `access_account_id` - the record ID of the Access Account which owns the\n  Password Credential to test for recoverability.","ref":"MscmpSystAuthn.html#access_account_credential_recoverable!/1-parameters"},{"type":"function","title":"MscmpSystAuthn.access_account_exists?/1","doc":"Tests to see if a specific Access Account, or any Access Account, record\nexists in the database.\n\nThe functions provides an optional test on either an Access Account record's\nInternal Name or record ID value.  If no selectivity option is made, the test\nchecks if any Access Account records exist in the database at all.\n\nIf an appropriate Access Account record is found, the function returns true,\notherwise false.  Any other condition is considered an error and will\nresult in an error tuple being returned indicating the cause of the error.","ref":"MscmpSystAuthn.html#access_account_exists?/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.access_account_exists?/1","doc":"* `opts` - an optional Keyword List of optional parameters which can\n  influence the result of calling the function.  The available options are:\n\n    * `access_account_id` - tests if a specific Access Account record exists\n    as referenced by its record ID value.\n\n    * `access_account_name` - tests if a specific Access Account record exists\n    as referenced by its Internal Name.","ref":"MscmpSystAuthn.html#access_account_exists?/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.access_account_exists?/1","doc":"Check if any Access Account record exists.\n\n    iex> MscmpSystAuthn.access_account_exists?()\n    true\n\nCheck if a specific Access Account record exists.\n\n    iex> MscmpSystAuthn.access_account_exists?(access_account_name: \"example_accnt\")\n    true\n\nIf a non-existent Access Account is requested, the function indicates the record was\nnot found.\n\n    iex> MscmpSystAuthn.access_account_exists?(access_account_name: \"nonexistent_access_account\")\n    false","ref":"MscmpSystAuthn.html#access_account_exists?/1-examples"},{"type":"function","title":"MscmpSystAuthn.authenticate_api_token/5","doc":"Identities and authenticates an Access Account using an API Token\nAuthenticator.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the API Token Authenticator was successfully authenticated.  The value\nelement of the success tuple, the Authentication State, carries information\nabout the actual outcome of the authentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nThe authentication process executed by this function is not interruptible.\nThe initial call to this function must contain all parameter values required\nto fully complete the authentication process.  Any missing information will\ncause the authentication attempt to be rejected.","ref":"MscmpSystAuthn.html#authenticate_api_token/5"},{"type":"function","title":"Parameters - MscmpSystAuthn.authenticate_api_token/5","doc":"* `identifier` - the identifier defined by the API Token identifier.\n  Typically this would have been a system generated random string of\n  characters available at API Token Authenticator creation time.\n\n  * `plaintext_token` - the plaintext API Token credential.  Typically this\n  would have been a system generated random string of characters available at\n  API Token Authenticator creation time.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function or are optionally required.  The available\n  options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `instance_id` - the record ID of the Application Instance to which the\n    Access Account holder wishes to authenticate.  This value is required must\n    be provided at function call time or the Authentication State will be\n    returned in a `:rejected` status.  In special cases where the\n    authentication attempt is outside of the context of a specific Instance,\n    the special value `:bypass` may be used for this option indicating that\n    the authentication attempt may skip the permitted Instance check. There is\n    no default value (default `nil`).\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction if the authenticator allows for an interruptable\n    authentication process.  The default deadline allows for 5 minutes to\n    complete the authentication process.","ref":"MscmpSystAuthn.html#authenticate_api_token/5-parameters"},{"type":"function","title":"MscmpSystAuthn.authenticate_email_password/2","doc":"Identifies and authenticates an Access Account on the basis of a starting\nAuthentication State value constructed for Email/Password authentication.\n\nThis function works the same as `authenticate_email_password/4` except that it\nexpects an existing Authentication State value to contain the basic\ninformation to process the authentication, with other parameters provided via\nthe `opts` parameter.  This function is typically used to continue a\npreviously interrupted call to `authenticate_email_password/4` and supplying\nit the necessary additional information to continue processing the\nauthentication to completion.\n\nThe options available for use here are the same as for\n`authenticate_email_password/4`.  However the options specified here are only\nvalid if they are applied to authentication process operations that are still\npending when this function is called.  Options influencing operations\npreviously processed, such as `owning_owner_id` as used in Access Account\nidentification will simply be ignored if they are different in the resumption\nof the process than they were in the initiating call.\n\nSee `authenticate_email_password/4` for a discussion of the possible return\nvalues.","ref":"MscmpSystAuthn.html#authenticate_email_password/2"},{"type":"function","title":"MscmpSystAuthn.authenticate_email_password/4","doc":"Identities and authenticates an Access Account using an Email/Password\nAuthenticator.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the authentication was successful.  The value element of the success\ntuple, the Authentication State, carries information about the outcome of the\nauthentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nEmail/Password authentication is an interruptible process, meaning that this\nfunction may return prior to the authentication having been fully processed to\na final result.  The two most common examples of when this partial processing\nmay happen are:\n\n1. The Application Instance was not initially identified.\n2. Further authentication is required such as when Multi-Factor Authentication\nis required.\n\nIn these cases the returned Authentication State is resubmitted\nfor processing via `authenticate_email_password/2` along with the updated\ninformation which allows authentication processing to complete.","ref":"MscmpSystAuthn.html#authenticate_email_password/4"},{"type":"function","title":"Parameters - MscmpSystAuthn.authenticate_email_password/4","doc":"* `email_address` - this is the username in the form of an email address\n  used to identify the correct Email Identity record which in turn identifies\n  a specific Access Account.\n\n  * `plaintext_pwd` - the Access Account holder's password as submitted in\n  plaintext.  This is the credential that will be authenticated using the\n  Password Credential record belonging to the identified Access Account.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function, are optionally required, or are required on a\n  deferred basis (eventually required).  The available options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `instance_id` - the record ID of the Application Instance to which the\n    Access Account holder wishes to authenticate.  A final value for\n    instance_id is not required when the Email/Password authentication process\n    is initiated but is required for it to complete.  If this value is not\n    initially provided, the function will be `interrupted` returning an\n    Authentication State status value of `:pending`.  Deferral may be\n    appropriate if, for example, we want to allow the Access Account holder to\n    select the specific Instance they wish to access from a list of their\n    permitted Instances.  Final resolution of the value must reference an\n    Instance for which the Access Account permitted authentication attempts or\n    must be set `:bypass` if the authentication attempt is a special case\n    where a specific Instance is not relevant.  The default value of this\n    option is `nil`.\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction, such as selecting an Instance or providing an MFA credential.\n    The default value is 5 minutes from the time the authentication process is\n    started.","ref":"MscmpSystAuthn.html#authenticate_email_password/4-parameters"},{"type":"function","title":"MscmpSystAuthn.authenticate_recovery_token/4","doc":"Confirms an Access Account's password Recovery Token Authenticator.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the Recovery Token Authenticator was successfully authenticated.  The\nvalue element of the success tuple, the Authentication State, carries\ninformation about the actual outcome of the authentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nIf the Authentication State's status is returned as `:authenticated`, the\nprocess of Password Credential recovery may be undertaken.  On success the\nRecovery Token Authenticator is deleted from the system, but no further action\nis taken by this function.  The actual process of recovering a password is\nexternal to this function.\n\nThe authentication process executed by this function is not interruptible.\nThe initial call to this function must contain all parameter values required\nto fully complete the authentication process.  Any missing information will\ncause the authentication attempt to be rejected.","ref":"MscmpSystAuthn.html#authenticate_recovery_token/4"},{"type":"function","title":"Parameters - MscmpSystAuthn.authenticate_recovery_token/4","doc":"* `identifier` - the identifier defined by the Recovery Token identifier.\n  Typically this would have been a system generated random string of\n  characters available at Recovery Token Authenticator creation time.\n\n  * `plaintext_token` - the plaintext Recovery Token credential.  Typically\n  this would have been a system generated random string of characters\n  available at Recovery Token Authenticator creation time.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function or are optionally required.  The available\n  options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction if the authenticator allows for an interruptable\n    authentication process.  The default deadline allows for 5 minutes to\n    complete the authentication process.","ref":"MscmpSystAuthn.html#authenticate_recovery_token/4-parameters"},{"type":"function","title":"MscmpSystAuthn.authenticate_validation_token/4","doc":"Confirms a specific Access Account Identity record as being valid for use.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the validation was successful.  The value element of the success\ntuple, the Authentication State, carries information about the actual outcome\nof the authentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nIf the Authentication State's status is returned as `:authenticated`, the\nvalidation process succeeded.  On success the target Identity record has its\n`validated` field set to the current date/time and the Validation\nAuthenticator is deleted from the system.\n\nThe authentication process executed by this function is not interruptible.\nThe initial call to this function must contain all parameter values required\nto fully complete the authentication process.  Any missing information will\ncause the authentication attempt to be rejected.","ref":"MscmpSystAuthn.html#authenticate_validation_token/4"},{"type":"function","title":"Parameters - MscmpSystAuthn.authenticate_validation_token/4","doc":"* `identifier` - the identifier defined by the Validation Token identifier.\n  Typically this would have been a system generated random string of\n  characters available at Validation Token Authenticator creation time.\n\n  * `plaintext_token` - the plaintext Validation Token credential.  Typically\n  this would have been a system generated random string of characters\n  available at Validation Token Authenticator creation time.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function or are optionally required.  The available\n  options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction if the authenticator allows for an interruptable\n    authentication process.  The default deadline allows for 5 minutes to\n    complete the authentication process.","ref":"MscmpSystAuthn.html#authenticate_validation_token/4-parameters"},{"type":"function","title":"MscmpSystAuthn.create_access_account/1","doc":"Create a new Access Account.","ref":"MscmpSystAuthn.html#create_access_account/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_access_account/1","doc":"* `access_account_params` - a map of required and optional parameters which\n  define the new Access Account record.  Required attributes in this map are:\n  `internal_name`, `external_name`, `access_account_state_id`, and\n  `allow_global_logins`.","ref":"MscmpSystAuthn.html#create_access_account/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.create_access_account/1","doc":"iex> state = MscmpSystEnums.get_default_enum_item(\"access_account_states\")\n    iex> {:ok, %Msdata.SystAccessAccounts{}} =\n    ...>   MscmpSystAuthn.create_access_account(\n    ...>     %{\n    ...>       internal_name: \"example_create_accnt\",\n    ...>       external_name: \"Create Access Account Example\",\n    ...>       access_account_state_id: state.id,\n    ...>       allow_global_logins: true\n    ...>      }\n    ...>    )","ref":"MscmpSystAuthn.html#create_access_account/1-example"},{"type":"function","title":"MscmpSystAuthn.create_authenticator_api_token/2","doc":"Creates an API Token Authenticator for the requested Access Account.\n\nOn successful API Token Authenticator creation, a success tuple is returned\nwhere the value element is an Authenticator Result in the form of:\n\n    { :ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"EQH2jj38ha4qnYWAC8VZ\",\n        credential: \"8N5Tp81aeOCrYW9PECANrcwKCroSet3MlMp5BbKb\"\n    }}\n\nIt is important to note that this result value is the only time that the API\nToken Credential plaintext is available.  After the function result is\ndiscarded the credential is no longer obtainable in plaintext form.","ref":"MscmpSystAuthn.html#create_authenticator_api_token/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_authenticator_api_token/2","doc":"* `access_account_id` - the record ID of the Access Account for which to\n  create the API Token Authenticator.\n\n  * `opts` - a Keyword List of optional values which changes the default\n  behavior of the Authenticator creation process.  Available options are:\n\n    * `identity_token_length` - this option overrides the default number of\n    random characters to generate for the API Token Identity identifier. The\n    default number of characters generated is 20.\n\n    * `identity_tokens` - overrides the default character set to use in the\n    generation of the API Token Identity identifier.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `external_name` - API Token Identities permit Access Account holder\n    naming of the Identity as it may be common for an one Access Account to\n    require multiple API Token Authenticators for different purposes.  This\n    option allows that name to be set at Identity creation time.  The default\n    value is `nil`.\n\n    * `credential_token_length` - this option overrides the default number of\n    random characters to generate for the API Token Credential. The default\n    number of characters generated is 40.\n\n    * `credential_tokens` - overrides the default character set to use in the\n    generation of the API Token Credential.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token` - overrides the system generated API Token Credential\n    with the value of this option.  The default is to allow the system to\n    automatically generate the credential.","ref":"MscmpSystAuthn.html#create_authenticator_api_token/2-parameters"},{"type":"function","title":"MscmpSystAuthn.create_authenticator_email_password/4","doc":"Creates an Email/Password Authenticator for an Access Account.\n\nThis function creates an Email Identity, Password Credential, and optionally\nan Identity Validation Authenticator (created by default).  This function is\ntypically used on adding a new Access Account to the system.  The process is\nwrapped in a database transaction so if any one part of the Authenticator\ncreation process fails, all parts should fail.\n\nThis function will fail if you attempt to create an Authenticator of this\ntype for an Access Account which already has one.  In the case of Email\nIdentity replacement, use the specific Identity process to create a new Email\nIdentity instead of this more expansive process.\n\nOn successful save of the Authenticator records, a success tuple is returned\nwhere the value element of the tuple will include basic data that might be\nrequired for later processing.\n\nIf Email/Password Authenticator was created requiring validation (the\ndefault), the success tuple's value element will include data required to\nprocess the Validation Authenticator:\n\n\n    {:ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"SomeEmail@somedomain.com\",\n        validation_credential: \"Uo0kPoCOZd004g4X7IFWg3iJ7pz7XiBRBDkBGGiu\",\n        validation_identifier: \"5D7i6XmmH0HpYL72tePlEdSUMVL9ygMrEsDSGoTE\"\n    }}\n\n\nNote that this is the only time the Validation Authenticator is provided and\nthe Validation Credential plaintext is not recoverable after this return value\nis provided.\n\nWhen a Validation Authenticator is not created, no validation data will be\nincluded in the result:\n\n\n    {:ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"SomeEmail@somedomain.com\"\n    }}","ref":"MscmpSystAuthn.html#create_authenticator_email_password/4"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_authenticator_email_password/4","doc":"* `access_account_id` - the Access Account for whom the Email/Password\n  Authenticator is being created.\n\n  * `email_address` - the email address which will identify the Access\n  Account.\n\n  * `plaintext_pwd` - the candidate password for use a the Credential in\n  Email/Password authentication processes.","ref":"MscmpSystAuthn.html#create_authenticator_email_password/4-parameters"},{"type":"function","title":"MscmpSystAuthn.create_disallowed_host/1","doc":"Adds a host IP address to the global disallowed hosts list.\n\nDisallowed hosts are IP addresses which are prevented from authenticating\nusers with the system, and by extension prevents host access to application\nfunctions generally.  Hosts are disallowed on a global basis and may be added\nto the list based on system heuristics which detect suspicious activity.\n\nSuccessfully adding a host to the list returns a success tuple and a struct\nrepresenting the record just created.  Attempting to add a host which is\nalready part of the list will also result in a success tuple, but no record is\nreturned.","ref":"MscmpSystAuthn.html#create_disallowed_host/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_disallowed_host/1","doc":"* `host_address` - the IP address of the host to disallow.","ref":"MscmpSystAuthn.html#create_disallowed_host/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.create_disallowed_host/1","doc":"Adding a new host to the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, false} = MscmpSystAuthn.host_disallowed(~i\"10.123.123.20\")\n    iex> {:ok, %Msdata.SystDisallowedHosts{}} =\n    ...>   MscmpSystAuthn.create_disallowed_host(~i\"10.123.123.20\")\n\n  Attempting to add a host already on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, true} = MscmpSystAuthn.host_disallowed(~i\"10.123.123.3\")\n    iex> {:ok, nil} =\n    ...>   MscmpSystAuthn.create_disallowed_host(~i\"10.123.123.3\")","ref":"MscmpSystAuthn.html#create_disallowed_host/1-examples"},{"type":"function","title":"MscmpSystAuthn.create_disallowed_password/1","doc":"Adds a new password to the Disallowed Passwords list.\n\nDisallowed passwords are passwords that are commonly known, are known to have\nbeen revealed in a successful hacking attack, or are otherwise not available\nfor users to choose for their authentication credential.  Enforcing that these\npasswords are not available for use depends upon the effective\n`disallow_compromised` Password Rule for the Access Account attempting\nauthentication.\n\nAn attempt to add a password which is already on the list will succeed as\nthough the password were not already part of the list.","ref":"MscmpSystAuthn.html#create_disallowed_password/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_disallowed_password/1","doc":"* `password` - The plaintext password to add to the list of disallowed\n  passwords.","ref":"MscmpSystAuthn.html#create_disallowed_password/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.create_disallowed_password/1","doc":"Adding a password successfully will simply return `:ok`.\n\n    iex> MscmpSystAuthn.create_disallowed_password(\"Example Disallowed Password\")\n    :ok\n\nAny subsequent attempt to add the same password to the list again will appear\nto succeed while silently doing nothing.\n\n    iex> MscmpSystAuthn.create_disallowed_password(\"Example Disallowed Password\")\n    :ok","ref":"MscmpSystAuthn.html#create_disallowed_password/1-examples"},{"type":"function","title":"MscmpSystAuthn.create_global_network_rule/1","doc":"Creates a new Global Network Rule using the provided parameters.\n\nGlobal Network Rules are checked prior to all attempted user authentication\nevents and have precedence over Owner and Instance Network Rules, though they\nare secondary to the Disallowed Hosts list.\n\nOn successful creation, a result tuple in the form `{:ok,  }` is\nreturned where the   is the fully populated Data struct of the\nrecord just created.  If an exception is raised this function will return a\nfailure tuple in the form of `{:error,  }`.","ref":"MscmpSystAuthn.html#create_global_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_global_network_rule/1","doc":"* `insert_params` - a map representing the values to use when creating the\n  new Global Network Rule.  See\n  `t:MscmpSystAuthn.Types.global_network_rule_params/0` for the\n  available attributes.","ref":"MscmpSystAuthn.html#create_global_network_rule/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.create_global_network_rule/1","doc":"Adding a new \"Allow\" Global Network Rule for a CIDR network.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> new_global_rule = %{\n    ...>   ordering: 20,\n    ...>   functional_type: :allow,\n    ...>   ip_host_or_network: ~i\"10.100.150.0/24\"\n    ...> }\n    iex> {:ok, %Msdata.SystGlobalNetworkRules{}} =\n    ...>   MscmpSystAuthn.create_global_network_rule(new_global_rule)\n\n  Adding a new \"Deny\" Global Network Rule for an IP Address range.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> new_global_rule = %{\n    ...>   ordering: 21,\n    ...>   functional_type: :deny,\n    ...>   ip_host_or_network: nil,\n    ...>   ip_host_range_lower: ~i\"10.100.151.1\",\n    ...>   ip_host_range_upper: ~i\"10.100.152.254\"\n    ...> }\n    iex> {:ok, %Msdata.SystGlobalNetworkRules{}} =\n    ...>   MscmpSystAuthn.create_global_network_rule(new_global_rule)","ref":"MscmpSystAuthn.html#create_global_network_rule/1-example"},{"type":"function","title":"MscmpSystAuthn.create_instance_network_rule/2","doc":"Creates a new Instance Network Rule using the provided parameters.\n\nInstance Network Rules the checked after the Disallowed Hosts list, the Global\nNetwork Rules, and the Instance Network Rules and apply to all Instances owned\nby the specified Instance, unless a higher precedence rule already applies to the\nhost.\n\nOn successful creation, a result tuple in the form `{:ok,  }` is\nreturned where the   is the fully populated Data struct of the\nrecord just created.  If an exception is raised this function will return a\nfailure tuple in the form of `{:error,  }`.","ref":"MscmpSystAuthn.html#create_instance_network_rule/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_instance_network_rule/2","doc":"* `instance_id` - the record ID of the Instance for whom the Instance Network Rule is\n  being created.\n\n  * `insert_params` - a map representing the values to use when creating the\n  new Instance Network Rule.  See\n  `t:MscmpSystAuthn.Types.instance_network_rule_params/0` for the\n  available attributes.","ref":"MscmpSystAuthn.html#create_instance_network_rule/2-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.create_instance_network_rule/2","doc":"Adding a new \"Allow\" Instance Network Rule for a CIDR network.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, instance_id} =\n    ...>   MscmpSystInstance.get_instance_id_by_name(\"app1_owner1_instance_types_std\")\n    iex> new_instance_rule = %{\n    ...>   ordering: 1,\n    ...>   functional_type: :allow,\n    ...>   ip_host_or_network: ~i\"10.100.170.0/24\"\n    ...> }\n    iex> {:ok, %Msdata.SystInstanceNetworkRules{}} =\n    ...>   MscmpSystAuthn.create_instance_network_rule(instance_id, new_instance_rule)\n\n  Adding a new \"Deny\" Instance Network Rule for an IP Address range.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, instance_id} =\n    ...>   MscmpSystInstance.get_instance_id_by_name(\"app1_owner1_instance_types_std\")\n    iex> new_instance_rule = %{\n    ...>   ordering: 2,\n    ...>   functional_type: :deny,\n    ...>   ip_host_or_network: nil,\n    ...>   ip_host_range_lower: ~i\"10.100.171.1\",\n    ...>   ip_host_range_upper: ~i\"10.100.172.254\"\n    ...> }\n    iex> {:ok, %Msdata.SystInstanceNetworkRules{}} =\n    ...>   MscmpSystAuthn.create_instance_network_rule(instance_id, new_instance_rule)","ref":"MscmpSystAuthn.html#create_instance_network_rule/2-example"},{"type":"function","title":"MscmpSystAuthn.create_or_reset_account_code/2","doc":"Creates a new Account Code for an Access Account or resets the Account Code if\nis already exists.\n\nOn successful Account Code Identity creation or reset, an Authenticator Result\nvalue is returned via a success tuple (`{:ok,  }`).  The expected form\nof the result for a new Account Code is:\n\n    %{\n      access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n      account_identifier: \"QY7QJTWH7MSK\"\n    }\n\nThere is no associated Credential or Validator for this Identity Type.","ref":"MscmpSystAuthn.html#create_or_reset_account_code/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_or_reset_account_code/2","doc":"* `access_account_id` - the record ID of the Access Account that will be\n  identified by the Account Code Identity.\n\n  * `opts` - a Keyword list of optional settings which can influence the\n  behavior of the function call.  Available options are:\n\n    * `account_code` - this option overrides the randomly generated Account\n    Code with the value of this option.  By default the system randomly\n    generates the Account Code.\n\n    * `identity_token_length` - overrides the number of characters to randomly\n    generate for use as the Account Code Identifier.  The default value is 12.\n\n    * `identity_tokens` - overrides the character set used to create the\n    randomly generated Account Code Identifier.  The default value is `:b32c`.\n    See the `MscmpSystUtils.get_random_string/2` documentation for the\n    `tokens` parameter which receives this option for more information\n    regarding valid values for this setting.","ref":"MscmpSystAuthn.html#create_or_reset_account_code/2-parameters"},{"type":"function","title":"MscmpSystAuthn.create_owner_network_rule/2","doc":"Creates a new Owner Network Rule using the provided parameters.\n\nOwner Network Rules the checked after the Disallowed Hosts list, the Global\nNetwork Rules, and the Instance Network Rules and apply to all Instances owned\nby the specified Owner, unless a higher precedence rule already applies to the\nhost.\n\nOn successful creation, a result tuple in the form `{:ok,  }` is\nreturned where the   is the fully populated Data struct of the\nrecord just created.  If an exception is raised this function will return a\nfailure tuple in the form of `{:error,  }`.","ref":"MscmpSystAuthn.html#create_owner_network_rule/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_owner_network_rule/2","doc":"* `owner_id` - the record ID of the Owner for whom the Owner Network Rule is\n  being created.\n\n  * `insert_params` - a map representing the values to use when creating the\n  new Owner Network Rule.  See\n  `t:MscmpSystAuthn.Types.owner_network_rule_params/0` for the\n  available attributes.","ref":"MscmpSystAuthn.html#create_owner_network_rule/2-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.create_owner_network_rule/2","doc":"Adding a new \"Allow\" Owner Network Rule for a CIDR network.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, owner_id} = MscmpSystInstance.get_owner_id_by_name(\"owner1\")\n    iex> new_owner_rule = %{\n    ...>   ordering: 1,\n    ...>   functional_type: :allow,\n    ...>   ip_host_or_network: ~i\"10.100.160.0/24\"\n    ...> }\n    iex> {:ok, %Msdata.SystOwnerNetworkRules{}} =\n    ...>   MscmpSystAuthn.create_owner_network_rule(owner_id, new_owner_rule)\n\n  Adding a new \"Deny\" Owner Network Rule for an IP Address range.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, owner_id} = MscmpSystInstance.get_owner_id_by_name(\"owner1\")\n    iex> new_owner_rule = %{\n    ...>   ordering: 2,\n    ...>   functional_type: :deny,\n    ...>   ip_host_or_network: nil,\n    ...>   ip_host_range_lower: ~i\"10.100.161.1\",\n    ...>   ip_host_range_upper: ~i\"10.100.162.254\"\n    ...> }\n    iex> {:ok, %Msdata.SystOwnerNetworkRules{}} =\n    ...>   MscmpSystAuthn.create_owner_network_rule(owner_id, new_owner_rule)","ref":"MscmpSystAuthn.html#create_owner_network_rule/2-example"},{"type":"function","title":"MscmpSystAuthn.create_owner_password_rules/2","doc":"Creates Owner Password Rules for the requested Owner.\n\nOwners may optionally define their own Password Rules for their users so long\nas their desired rules are of equal or greater stringency than the Global\nPassword Rules.  If the new Owner Password Rules are defined to be less\nstringent than the current Global Password Rules, the Owner Password Rules\nwill be saved as requested, but ignored when applied in favor of the more\nstringent rule.","ref":"MscmpSystAuthn.html#create_owner_password_rules/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.create_owner_password_rules/2","doc":"* `owner_id` - the record ID of the Owner for whom the Password Rules are\n  being created.\n\n  * `insert_params` - a map of the values to use when creating the new record.\n  See `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MscmpSystAuthn.html#create_owner_password_rules/2-parameters"},{"type":"function","title":"MscmpSystAuthn.decline_instance_invite/1","doc":"Declines an unaccepted/unexpired invitation made to an Access Account to\naccess an Instance.\n\nThis process is only needed in the case where a\n`syst_access_account_instance_assocs` invitation may be accepted or declined\nby the Access Account holder.  To be declined in this process the invitation\nrecord must have been previously created (see `invite_to_instance/3`), must\nnot be expired, previously declined, or previously accepted; trying to decline\na record in such a state will result in an error tuple being returned.\n\nNaturally, the Access Account holder may choose to never accept or decline the\ninvitation and may simply allow the invitation to expire.","ref":"MscmpSystAuthn.html#decline_instance_invite/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.decline_instance_invite/1","doc":"* `access_account_instance_assoc` - this value may be either the populated\n  `Msdata.SystAccessAccountInstanceAssocs` struct to\n  decline or the record ID of the record to decline.","ref":"MscmpSystAuthn.html#decline_instance_invite/1-parameters"},{"type":"function","title":"MscmpSystAuthn.decline_instance_invite/2","doc":"Declines an unaccepted/unexpired invitation made to an Access Account to\naccess an Instance, referencing the record by its composite key values.\n\nThis function performs the same process as `decline_instance_invite/1`, but\nwill look up the record to decline using the Access Account, Instance, and\nCredential Type record ID values.","ref":"MscmpSystAuthn.html#decline_instance_invite/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.decline_instance_invite/2","doc":"* `access_account_id` - the record ID of the Access Account declining the\n  invitation to the Instance.\n\n  * `instance_id` - the Instance record ID to which the Access Account has\n  been invited.","ref":"MscmpSystAuthn.html#decline_instance_invite/2-parameters"},{"type":"function","title":"MscmpSystAuthn.delete_disallowed_host/1","doc":"Deletes a host IP address from the Disallowed Hosts list based on either a\n`Msdata.SystDisallowedHosts` record or the ID of such a\nrecord.\n\nIf the record is found and deleted a success tuple in the form `{:ok, :deleted}`\nis returned.  If the record is not found the success tuple `{:ok, :not_found}`\nis returned.\n\nOnce a host is removed from the Disallowed Hosts list, users are allowed to\nauthenticate from the host, so long as no other effective Network Rule\nprevents the action.","ref":"MscmpSystAuthn.html#delete_disallowed_host/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_disallowed_host/1","doc":"* `disallowed_host` - either the fully populated\n  `Msdata.SystDisallowedHosts` data struct for the\n  record to delete or the ID of the record.  Note that when the data struct\n  is provided Ecto optimistic locking is applied to the the delete operation.","ref":"MscmpSystAuthn.html#delete_disallowed_host/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.delete_disallowed_host/1","doc":"Deleting a host by record ID.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, target_host_record} =\n    ...>   MscmpSystAuthn.get_disallowed_host_record_by_host(~i\"10.10.250.4\")\n    iex> MscmpSystAuthn.delete_disallowed_host(target_host_record.id)\n    {:ok, :deleted}\n\n  Deleting a host by record struct.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, target_host_record} =\n    ...>   MscmpSystAuthn.get_disallowed_host_record_by_host(~i\"10.10.250.5\")\n    iex> MscmpSystAuthn.delete_disallowed_host(target_host_record)\n    {:ok, :deleted}\n\n  Deleting a struct for a no longer existent record.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, target_host_record} =\n    ...>   MscmpSystAuthn.get_disallowed_host_record_by_host(~i\"10.10.250.6\")\n    iex> MscmpSystAuthn.delete_disallowed_host(target_host_record)\n    {:ok, :deleted}\n    iex> MscmpSystAuthn.delete_disallowed_host(target_host_record)\n    {:ok, :not_found}","ref":"MscmpSystAuthn.html#delete_disallowed_host/1-examples"},{"type":"function","title":"MscmpSystAuthn.delete_disallowed_host_addr/1","doc":"Deletes a host IP address from the Disallowed Hosts list as looked up by the\nhost IP address.\n\nIf the record is found and deleted a success tuple in the form `{:ok, :deleted}`\nis returned.  If the record is not found the success tuple `{:ok, :not_found}`\nis returned.  Any other condition would cause an error tuple to be returned.\n\nOnce a host is removed from the Disallowed Hosts list, users are allowed to\nauthenticate from the host, so long as no other effective Network Rule\nprevents the action.","ref":"MscmpSystAuthn.html#delete_disallowed_host_addr/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_disallowed_host_addr/1","doc":"* `host_addr` - the IP address of the host that is no longer to be\n  disallowed.","ref":"MscmpSystAuthn.html#delete_disallowed_host_addr/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.delete_disallowed_host_addr/1","doc":"Deleting a host that does exist in the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, true} = MscmpSystAuthn.host_disallowed(~i\"10.10.251.1\")\n    iex> {:ok, :deleted} =\n    ...>   MscmpSystAuthn.delete_disallowed_host_addr(~i\"10.10.251.1\")\n    iex> {:ok, false} = MscmpSystAuthn.host_disallowed(~i\"10.10.251.1\")\n\n  Attempting to delete a host not already on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, false} = MscmpSystAuthn.host_disallowed(~i\"10.10.251.10\")\n    iex> {:ok, :not_found} =\n    ...>   MscmpSystAuthn.delete_disallowed_host_addr(~i\"10.10.251.10\")","ref":"MscmpSystAuthn.html#delete_disallowed_host_addr/1-examples"},{"type":"function","title":"MscmpSystAuthn.delete_disallowed_password/1","doc":"Removes a password from the disallowed passwords list.\n\nOn success, this function will return a success tuple indicating if the\nrequested password was deleted from the disallowed passwords list\n(`{:ok, :deleted}`) or if the password simply wasn't found in the list\n(`{:ok, :not_found}`).","ref":"MscmpSystAuthn.html#delete_disallowed_password/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_disallowed_password/1","doc":"* `password` - the plaintext password to delete from the disallowed\n  passwords list.","ref":"MscmpSystAuthn.html#delete_disallowed_password/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.delete_disallowed_password/1","doc":"Result when deleting a record from the list.\n\n    iex> MscmpSystAuthn.delete_disallowed_password(\"No Longer Disallowed\")\n    {:ok, :deleted}\n\n  Result when trying to delete a record not already on the list.\n\n    iex> MscmpSystAuthn.delete_disallowed_password(\"Not on List\")\n    {:ok, :not_found}","ref":"MscmpSystAuthn.html#delete_disallowed_password/1-examples"},{"type":"function","title":"MscmpSystAuthn.delete_global_network_rule/1","doc":"Deletes an existing Global Network Rule record as referenced by the record ID.\n\nOn successful deletion, a simple result of `:ok` is returned.  On error, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MscmpSystAuthn.html#delete_global_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_global_network_rule/1","doc":"* `global_network_rule_id` - The record ID of the Global Network Rule record\n  to delete.","ref":"MscmpSystAuthn.html#delete_global_network_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.delete_instance_network_rule/1","doc":"Deletes an existing Instance Network Rule record as referenced by the record\nID.\n\nOn successful deletion, a simple result of `:ok` is returned.  On error, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MscmpSystAuthn.html#delete_instance_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_instance_network_rule/1","doc":"* `instance_network_rule_id` - The record ID of the Instance Network Rule\n  record to delete.","ref":"MscmpSystAuthn.html#delete_instance_network_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.delete_owner_network_rule/1","doc":"Deletes an existing Owner Network Rule record as referenced by the record ID.\n\nOn successful deletion, a simple result of `:ok` is returned.  On error, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MscmpSystAuthn.html#delete_owner_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_owner_network_rule/1","doc":"* `owner_network_rule_id` - The record ID of the Owner Network Rule record\n  to delete.","ref":"MscmpSystAuthn.html#delete_owner_network_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.delete_owner_password_rules/1","doc":"Deletes an Owner Password Rules record from the system.","ref":"MscmpSystAuthn.html#delete_owner_password_rules/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.delete_owner_password_rules/1","doc":"* `owner_id` - the Owner record ID whose Password Rules are to be deleted.","ref":"MscmpSystAuthn.html#delete_owner_password_rules/1-parameters"},{"type":"function","title":"MscmpSystAuthn.disallowed_passwords_populated?/0","doc":"Tests if the Disallowed Password List has any entries or not.\n\nReturns a simple boolean value.  If true, there are existing entries in the\nDisallowed Passwords Lists; otherwise false is returned.","ref":"MscmpSystAuthn.html#disallowed_passwords_populated?/0"},{"type":"function","title":"Examples - MscmpSystAuthn.disallowed_passwords_populated?/0","doc":"iex> MscmpSystAuthn.disallowed_passwords_populated?()\n    true","ref":"MscmpSystAuthn.html#disallowed_passwords_populated?/0-examples"},{"type":"function","title":"MscmpSystAuthn.get_access_account_by_name/1","doc":"Retrieves a fully populated Access Account record as found by internal name.\n\n'Fully populated' in this context means that the related Account Account State\nand related functional type data is also retrieved along with the actual\nAccess Account data.","ref":"MscmpSystAuthn.html#get_access_account_by_name/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_access_account_by_name/1","doc":"* `access_account_name` - the internal name of the Access Account record to\n  retrieve.","ref":"MscmpSystAuthn.html#get_access_account_by_name/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.get_access_account_by_name/1","doc":"iex> {\n    ...>   :ok,\n    ...>   %Msdata.SystAccessAccounts{internal_name: \"example_accnt\"}\n    ...> } =\n    ...>   MscmpSystAuthn.get_access_account_by_name(\"example_accnt\")","ref":"MscmpSystAuthn.html#get_access_account_by_name/1-example"},{"type":"function","title":"MscmpSystAuthn.get_access_account_id_by_name/1","doc":"Looks up an Access Account record ID by its internal name.","ref":"MscmpSystAuthn.html#get_access_account_id_by_name/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_access_account_id_by_name/1","doc":"* `access_account_name` - the internal name of the record for which to\n  retrieve the record ID.","ref":"MscmpSystAuthn.html#get_access_account_id_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_access_account_id_by_name/1","doc":"iex> {:ok, access_account_id}  =\n    ...>   MscmpSystAuthn.get_access_account_id_by_name(\"example_accnt\")\n    iex> is_binary(access_account_id)\n    true","ref":"MscmpSystAuthn.html#get_access_account_id_by_name/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_access_account_password_rule/1","doc":"Retrieves the Password Rules to apply for a requested Access Account as\nidentified by its record ID.\n\nWhen evaluating the validity of candidate passwords for a user the system\nretrieves the Global Password Rules and then the Access Account Owner Password\nRules, if such Rules have been defined.  The system will compare each of the\nRules in the Global and Owner Password Rules with each other and select the\nrule which demands the greatest stringency.  This process results in a\ncomposite Password Rule which can then be applied to test any candidate\npassword for validity. This calculated composite Password Rule is what is\nreturned by this function.\n\nThe return value is wrapped in a result tuple, `{:ok,  }` on success and\n`{:error,  }` in cases of failure.","ref":"MscmpSystAuthn.html#get_access_account_password_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_access_account_password_rule/1","doc":"* `access_account_id` - the Access Account record ID of the user.","ref":"MscmpSystAuthn.html#get_access_account_password_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_access_account_password_rule!/1","doc":"Retrieves the Password Rules to apply for a requested Access Account as\nidentified by its record ID, raising on error.\n\nThis function works the same as `get_access_account_password_rule/1` except\nthat any errors cause an exception to be raised.","ref":"MscmpSystAuthn.html#get_access_account_password_rule!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_access_account_password_rule!/1","doc":"* `access_account_id` - the Access Account record ID of the user.","ref":"MscmpSystAuthn.html#get_access_account_password_rule!/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_access_account_state_by_name/1","doc":"Returns the Access Account State record for the given Internal Name; raises on\nerror.\n\nOn successful execution either the requested Access Account State Enumeration\nrecord is returned or `nil` if the record does not exist.","ref":"MscmpSystAuthn.html#get_access_account_state_by_name/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_access_account_state_by_name/1","doc":"* `access_account_state_name` - the Internal Name of the desire Access Account\n  State record to return.","ref":"MscmpSystAuthn.html#get_access_account_state_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_access_account_state_by_name/1","doc":"Finding a Access Account State record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MscmpSystAuthn.get_access_account_state_by_name(\"access_account_states_sysdef_active\")\n\nLooking for a non-existent record.\n\n    iex> MscmpSystAuthn.get_access_account_state_by_name(\"nonexistent_type\")\n    nil","ref":"MscmpSystAuthn.html#get_access_account_state_by_name/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_access_account_state_default/1","doc":"Returns the Access Account State Enumeration record which is configured as\nbeing default.\n\nIf no Access Account State record is configured as default, then `nil` is\nreturned.","ref":"MscmpSystAuthn.html#get_access_account_state_default/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_access_account_state_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Access Account State record configured for\n  the requested functional type rather than the system default Access Account\n  State.  The default for this parameter is to treat the parameter as not\n  provided (`nil`).","ref":"MscmpSystAuthn.html#get_access_account_state_default/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_access_account_state_default/1","doc":"Requesting the system default Access Account State.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"access_account_states_sysdef_pending\"} =\n    ...>   MscmpSystAuthn.get_access_account_state_default()\n\nRequesting the default Access Account State for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"access_account_states_sysdef_inactive\"} =\n    ...>   MscmpSystAuthn.get_access_account_state_default(:access_account_states_inactive)","ref":"MscmpSystAuthn.html#get_access_account_state_default/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_account_code_by_access_account_id/1","doc":"Retrieves the Account Code Identity record defined for the requested Access\nAccount if one exists.\n\nIf no Account Code Identity exists for the requested Access Account a tuple in\nthe form of `{:ok, :not_found}` is returned.","ref":"MscmpSystAuthn.html#get_account_code_by_access_account_id/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_account_code_by_access_account_id/1","doc":"* `access_account_id` - the Access Account record ID for which to retrieve\n  the Account Code Identity.","ref":"MscmpSystAuthn.html#get_account_code_by_access_account_id/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_applied_network_rule/3","doc":"Returns the Network Rule which should be applied for the given Host IP Address.\n\nThis function compares the provided Host IP Address against the applicable\nNetwork Rules which apply to it and return the specific rule which should be\napplied during the authentication process.","ref":"MscmpSystAuthn.html#get_applied_network_rule/3"},{"type":"function","title":"Network Rule Precedence - MscmpSystAuthn.get_applied_network_rule/3","doc":"The specific rules to check for applicability depends on the other provided\nparameters.  The available Network Rule sets in order of precedence are:\n\n  1. __Disallowed Hosts__: Globally disallowed hosts are always checked first and\n  no later rule can override the denial.  Only removing the host from the\n  Disallowed Hosts List can reverse this denial.\n\n  2. __Global Network Rules__: These are rules applied to all presented Host IP\n  Addresses.\n\n  3. __Instance Network Rules__: Rules defined by Instance Owners and are the\n  most granular rule level available.  These Network Rules are only evaluated\n  if the `instance_id` parameter is provided.\n\n  4. __Owner Network Rules__: Network Rules which are applicable to all\n  Instances of a given Owner, provided no superseding Instance Network Rule\n  was found.  This rule set is included if either the `instance_id` or\n  `owner_id` parameter is provided.\n\n  5. __Default Network Rule__: When no explicitly defined Network Rule has\n  been found for a host, this rule will apply implicitly.  The current rule\n  grants access from any host.","ref":"MscmpSystAuthn.html#get_applied_network_rule/3-network-rule-precedence"},{"type":"function","title":"Return Value - MscmpSystAuthn.get_applied_network_rule/3","doc":"This function returns a result tuple.  The value element of the result tuple\n  is a map of type `t:MscmpSystAuthn.Types.AppliedNetworkRule.t/0`.\n  The map indicates which precedence group the rule came from, the ID of the\n  Network Rule record if the rule was derived from the various Network Rule\n  data tables, and the Functional Type of the rule: `:allow` meaning the\n  rule explicitly allows the host to attempt an authentication, or `:deny`\n  indicating that the host is not allowed to attempt authentication.","ref":"MscmpSystAuthn.html#get_applied_network_rule/3-return-value"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_applied_network_rule/3","doc":"* `host_address` - the Host IP Address which the user wishes to authenticate\n  from.\n\n  * `instance_id` - the record ID of an Instance to which the user wants to\n  gain access.  This parameter is optional, though excluding this parameter\n  will leave the Instance Network Rules might properly apply unevaluated.  If\n  this parameter is provided, the Owner of the Instance is implied and there\n  is no need to also supply the `owner_id` parameter.\n\n  * `owner_id` - the record ID of an Owner which owns the candidate Instances\n  to which the user wishes to authenticate.  This parameter is not required if\n  the `instance_id` parameter has been provided.  Otherwise, this parameter is\n  optional, though if the Owner has not been resolved through this parameter\n  or via the `instance_id`, the Owner Network Rules that might apply to the\n  authentication attempt will not be applied.","ref":"MscmpSystAuthn.html#get_applied_network_rule/3-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_applied_network_rule/3","doc":"When the host is a member of the Disallowed Hosts lists.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok,\n    ...>   %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>     functional_type: :deny, network_rule_id: id, precedence: :disallowed\n    ...>   }\n    ...>  } =  MscmpSystAuthn.get_applied_network_rule(~i\"10.123.123.3\")\n    iex> is_binary(id)\n    true\n\n  When the Host IP Address does not match any explicitly defined rule and the\n  implicit rule applies.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.get_applied_network_rule(~i\"10.124.124.3\")\n    {:ok,\n      %MscmpSystAuthn.Types.AppliedNetworkRule{\n        functional_type: :allow, network_rule_id: nil, precedence: :implied\n      }\n    }\n\n  When a Global Network Rule explicitly allows the Host IP Address to attempt\n  authentication.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok,\n    ...>   %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>     functional_type: :allow, network_rule_id: id, precedence: :global\n    ...>   }\n    ...> } = MscmpSystAuthn.get_applied_network_rule(~i\"10.125.125.3\")\n    iex> is_binary(id)\n    true\n\n  Note that while the examples did not include Instance or Owner IDs, the\n  examples are none-the-less representative of cases where they are included.","ref":"MscmpSystAuthn.html#get_applied_network_rule/3-examples"},{"type":"function","title":"MscmpSystAuthn.get_applied_network_rule!/3","doc":"Returns the Network Rule which should be applied for the given Host IP\nAddress, raising on error.\n\nThis function works the same as `get_applied_network_rule/3` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered an exception is raised.","ref":"MscmpSystAuthn.html#get_applied_network_rule!/3"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_applied_network_rule!/3","doc":"* `host_address` - the Host IP Address which the user wishes to authenticate\n  from.\n\n  * `instance_id` - the record ID of an Instance to which the user wants to\n  gain access.  This parameter is optional, though excluding this parameter\n  will leave the Instance Network Rules might properly apply unevaluated.  If\n  this parameter is provided, the Owner of the Instance is implied and there\n  is no need to also supply the `owner_id` parameter.\n\n  * `owner_id` - the record ID of an Owner which owns the candidate Instances\n  to which the user wishes to authenticate.  This parameter is not required if\n  the `instance_id` parameter has been provided.  Otherwise, this parameter is\n  optional, though if the Owner has not been resolved through this parameter\n  or via the `instance_id`, the Owner Network Rules that might apply to the\n  authentication attempt will not be applied.","ref":"MscmpSystAuthn.html#get_applied_network_rule!/3-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_applied_network_rule!/3","doc":"When the host is a member of the Disallowed Hosts lists.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>   functional_type: :deny, network_rule_id: id, precedence: :disallowed\n    ...> } = MscmpSystAuthn.get_applied_network_rule!(~i\"10.123.123.3\")\n    iex> is_binary(id)\n    true\n\n  When the Host IP Address does not match any explicitly defined rule and the\n  implicit rule applies.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.get_applied_network_rule!(~i\"10.124.124.3\")\n    %MscmpSystAuthn.Types.AppliedNetworkRule{\n      functional_type: :allow, network_rule_id: nil, precedence: :implied\n    }\n\n  When a Global Network Rule explicitly allows the Host IP Address to attempt\n  authentication.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>   functional_type: :allow, network_rule_id: id, precedence: :global\n    ...> } = MscmpSystAuthn.get_applied_network_rule!(~i\"10.125.125.3\")\n    iex> is_binary(id)\n    true\n\n  Note that while the examples did not include Instance or Owner IDs, the\n  examples are none-the-less representative of cases where they are included.","ref":"MscmpSystAuthn.html#get_applied_network_rule!/3-examples"},{"type":"function","title":"MscmpSystAuthn.get_credential_type_by_name/1","doc":"Returns the Credential Type record for the given Internal Name; raises on error.\n\nOn successful execution either the requested Credential Type Enumeration record\nis returned or `nil` if the record does not exist.","ref":"MscmpSystAuthn.html#get_credential_type_by_name/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_credential_type_by_name/1","doc":"* `credential_type_name` - the Internal Name of the desire Credential Type\n  record to return.","ref":"MscmpSystAuthn.html#get_credential_type_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_credential_type_by_name/1","doc":"Finding a Credential Type record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MscmpSystAuthn.get_credential_type_by_name(\"credential_types_sysdef_token_api\")\n\nLooking for a non-existent record.\n\n    iex> MscmpSystAuthn.get_credential_type_by_name(\"nonexistent_type\")\n    nil","ref":"MscmpSystAuthn.html#get_credential_type_by_name/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_credential_type_default/1","doc":"Returns the Credential Type Enumeration record which is configured as being\ndefault.\n\nIf no Credential Type record is configured as default, then `nil` is returned.","ref":"MscmpSystAuthn.html#get_credential_type_default/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_credential_type_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Credential Type record configured for the\n  requested functional type rather than the system default Credential Type.\n  The default for this parameter is to treat the parameter as not provided\n  (`nil`).","ref":"MscmpSystAuthn.html#get_credential_type_default/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_credential_type_default/1","doc":"Requesting the system default Credential Type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"credential_types_sysdef_password\"} =\n    ...>   MscmpSystAuthn.get_credential_type_default()\n\nRequesting the default Credential Type for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"credential_types_sysdef_mfa_totp\"} =\n    ...>   MscmpSystAuthn.get_credential_type_default(:credential_types_mfa_totp)","ref":"MscmpSystAuthn.html#get_credential_type_default/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_disallowed_host_record_by_host/1","doc":"Retrieves a Disallowed Host record from the database as identified by its host\naddress.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_host/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_disallowed_host_record_by_host/1","doc":"* `host_address` - the IP address of the disallowed host record to retrieve.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_host/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.get_disallowed_host_record_by_host/1","doc":"Retrieving a Disallowed Host record by IP address.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, %Msdata.SystDisallowedHosts{}} =\n    ...>   MscmpSystAuthn.get_disallowed_host_record_by_host(~i\"10.123.123.4\")\n\n  Attempting to retrieve a record for a host not on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.get_disallowed_host_record_by_host(~i\"10.125.120.20\")\n    {:ok, nil}","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_host/1-example"},{"type":"function","title":"MscmpSystAuthn.get_disallowed_host_record_by_host!/1","doc":"Retrieves a Disallowed Host record from the database as identified by its host\naddress, raising on error.\n\nThis function works the same as `get_disallowed_host_record_by_host/1` except\nthis function returns its result without wrapping it in a result tuple.  If an\nerror is encountered an exception is raised.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_host!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_disallowed_host_record_by_host!/1","doc":"* `host_address` - the IP address of the disallowed host record to retrieve.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_host!/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.get_disallowed_host_record_by_host!/1","doc":"Retrieving a Disallowed Host record by IP address.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> %Msdata.SystDisallowedHosts{} =\n    ...>   MscmpSystAuthn.get_disallowed_host_record_by_host!(~i\"10.123.123.4\")\n\n  Attempting to retrieve a record for a host not on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.get_disallowed_host_record_by_host!(~i\"10.125.120.20\")\n    nil","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_host!/1-example"},{"type":"function","title":"MscmpSystAuthn.get_disallowed_host_record_by_id/1","doc":"Retrieves a Disallowed Host record by the record ID.\n\nThis function assumes the record exists.  If the record does not exist an\nerror tuple will be returned.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_id/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_disallowed_host_record_by_id/1","doc":"* `disallowed_host_id` - the record ID of the Disallowed Host record to retrieve.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_id/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.get_disallowed_host_record_by_id/1","doc":"Retrieving a Disallowed Host record by record ID.\n\n  ```elixir\n  {:ok, %Msdata.SystDisallowedHosts{}} =\n    MscmpSystAuthn.get_disallowed_host_record_by_id(\n      \"ad7f2030-5895-11ed-a888-0f8a20e745a9\")\n  ```","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_id/1-example"},{"type":"function","title":"MscmpSystAuthn.get_disallowed_host_record_by_id!/1","doc":"Retrieves a Disallowed Host record by the record ID, raising on error.\n\nThis function works the same as `get_disallowed_host_record_by_id/1` except\nthis function returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_id!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_disallowed_host_record_by_id!/1","doc":"* `disallowed_host_id` - the record ID of the Disallowed Host record to retrieve.","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_id!/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.get_disallowed_host_record_by_id!/1","doc":"Retrieving a Disallowed Host record by record ID.\n\n  ```elixir\n  %Msdata.SystDisallowedHosts{} =\n    MscmpSystAuthn.get_disallowed_host_record_by_id!(\n      \"ad7f2030-5895-11ed-a888-0f8a20e745a9\")\n  ```","ref":"MscmpSystAuthn.html#get_disallowed_host_record_by_id!/1-example"},{"type":"function","title":"MscmpSystAuthn.get_generic_password_rules/2","doc":"Converts a Global or Owner Password Rule struct into the generic map based\nPassword Rule required by some functions.\n\n`Msdata.SystGlobalPasswordRules` and `Msdata.SystOwnerPasswordRules` both\ndefine a standard set of known password rules, but do so as different data\ntypes.  While this works well for database record management features, testing\nand validating actual password rules do not benefit from the distinction.\nIn these evaluation scenarios it's better to treat the password rule without\nconsideration of its source.  This function returns the generic representation\nthat certain evaluation features such as `test_credential/2` are expecting.","ref":"MscmpSystAuthn.html#get_generic_password_rules/2"},{"type":"function","title":"MscmpSystAuthn.get_global_network_rule/1","doc":"Retrieves a Global Network Rule record based on its record ID.\n\nFor a given Global Network Rule record ID this function will return a result\ntuple in the form of `{:ok,  }` where ` ` is the fully\npopulated `Msdata.SystGlobalNetworkRules`.  If the\nrecord does not exist, then `{:ok, :not_found}` is returned.  Otherwise, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MscmpSystAuthn.html#get_global_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_global_network_rule/1","doc":"* `global_network_rule_id` - the record ID of the desired Global Network Rule\nrecord.","ref":"MscmpSystAuthn.html#get_global_network_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_global_network_rule!/1","doc":"Retrieves a Global Network Rule record based on its record ID, raising on\nerror.\n\nThis function works the same as `get_global_network_rule/1` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MscmpSystAuthn.html#get_global_network_rule!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_global_network_rule!/1","doc":"* `global_network_rule_id` - the record ID of the desired Global Network Rule\nrecord.","ref":"MscmpSystAuthn.html#get_global_network_rule!/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_global_password_rules/0","doc":"Retrieves the currently active Global Password Rules.\n\nOn successful retrieval a success tuple in the form of `{:ok,  }` is\nreturned where record is a `Msdata.SystGlobalPasswordRules`\nstruct.  Any exceptions are returned via an error tuple.","ref":"MscmpSystAuthn.html#get_global_password_rules/0"},{"type":"function","title":"MscmpSystAuthn.get_global_password_rules!/0","doc":"Retrieves the currently active Global Password Rules, raising on error.\n\nThis function works the same as `get_global_password_rules/0` except that\nany errors cause an exception to be raised.","ref":"MscmpSystAuthn.html#get_global_password_rules!/0"},{"type":"function","title":"MscmpSystAuthn.get_identity_type_by_name/1","doc":"Returns the Identity Type record for the given Internal Name; raises on error.\n\nOn successful execution either the requested Identity Type Enumeration record\nis returned or `nil` if the record does not exist.","ref":"MscmpSystAuthn.html#get_identity_type_by_name/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_identity_type_by_name/1","doc":"* `identity_type_name` - the Internal Name of the desire Identity Type\n  record to return.","ref":"MscmpSystAuthn.html#get_identity_type_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_identity_type_by_name/1","doc":"Finding a Identity Type record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MscmpSystAuthn.get_identity_type_by_name(\"identity_types_sysdef_account\")\n\nLooking for a non-existent record.\n\n    iex> MscmpSystAuthn.get_identity_type_by_name(\"nonexistent_type\")\n    nil","ref":"MscmpSystAuthn.html#get_identity_type_by_name/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_identity_type_default/1","doc":"Returns the Identity Type Enumeration record which is configured as being\ndefault.\n\nIf no Identity Type record is configured as default, then `nil` is returned.","ref":"MscmpSystAuthn.html#get_identity_type_default/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_identity_type_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Identity Type record configured for the\n  requested functional type rather than the system default Identity Type.\n  The default for this parameter is to treat the parameter as not provided\n  (`nil`).","ref":"MscmpSystAuthn.html#get_identity_type_default/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.get_identity_type_default/1","doc":"Requesting the system default Identity Type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"identity_types_sysdef_email\"} =\n    ...>   MscmpSystAuthn.get_identity_type_default()\n\nRequesting the default Identity Type for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"identity_types_sysdef_api\"} =\n    ...>   MscmpSystAuthn.get_identity_type_default(:identity_types_api)","ref":"MscmpSystAuthn.html#get_identity_type_default/1-examples"},{"type":"function","title":"MscmpSystAuthn.get_instance_network_rule/1","doc":"Retrieves a Instance Network Rule record based on its record ID.\n\nFor a given Instance Network Rule record ID this function will return a result\ntuple in the form of `{:ok,  }` where ` ` is the fully\npopulated `Msdata.SystInstanceNetworkRules`.  If the\nrecord does not exist, then `{:ok, :not_found}` is returned.  Otherwise, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MscmpSystAuthn.html#get_instance_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_instance_network_rule/1","doc":"* `instance_network_rule_id` - the record ID of the desired Instance Network\nRule record.","ref":"MscmpSystAuthn.html#get_instance_network_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_instance_network_rule!/1","doc":"Retrieves a Instance Network Rule record based on its record ID, raising on\nerror.\n\nThis function works the same as `get_instance_network_rule/1` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MscmpSystAuthn.html#get_instance_network_rule!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_instance_network_rule!/1","doc":"* `instance_network_rule_id` - the record ID of the desired Instance Network\nRule record.","ref":"MscmpSystAuthn.html#get_instance_network_rule!/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_owner_network_rule/1","doc":"Retrieves a Owner Network Rule record based on its record ID.\n\nFor a given Owner Network Rule record ID this function will return a result\ntuple in the form of `{:ok,  }` where ` ` is the fully\npopulated `Msdata.SystOwnerNetworkRules`.  If the\nrecord does not exist, then `{:ok, :not_found}` is returned.  Otherwise, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MscmpSystAuthn.html#get_owner_network_rule/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_owner_network_rule/1","doc":"* `owner_network_rule_id` - the record ID of the desired Owner Network Rule\nrecord.","ref":"MscmpSystAuthn.html#get_owner_network_rule/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_owner_network_rule!/1","doc":"Retrieves a Owner Network Rule record based on its record ID, raising on\nerror.\n\nThis function works the same as `get_owner_network_rule/1` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MscmpSystAuthn.html#get_owner_network_rule!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_owner_network_rule!/1","doc":"* `owner_network_rule_id` - the record ID of the desired Owner Network Rule\nrecord.","ref":"MscmpSystAuthn.html#get_owner_network_rule!/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_owner_password_rules/1","doc":"Retrieves the currently active Owner Password Rules for the requested Owner.\n\nOn successful retrieval a success tuple in the form of `{:ok,  }` is\nreturned where ` ` is a populated\n`Msdata.SystownerPasswordRules` struct if Password Rules\nfor the requested Owner was found or `nil` otherwise.  Any exceptions are\nreturned via an error tuple.","ref":"MscmpSystAuthn.html#get_owner_password_rules/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_owner_password_rules/1","doc":"* `owner_id` - the Owner record ID for whom to retrieve Password Rules.","ref":"MscmpSystAuthn.html#get_owner_password_rules/1-parameters"},{"type":"function","title":"MscmpSystAuthn.get_owner_password_rules!/1","doc":"Retrieves the currently active Owner Password Rules for the requested Owner,\nraising on error.\n\nThis function works the same as `get_owner_password_rules/1` except that\nany errors cause an exception to be raised.","ref":"MscmpSystAuthn.html#get_owner_password_rules!/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.get_owner_password_rules!/1","doc":"* `owner_id` - the Owner record ID for whom to retrieve Password Rules.","ref":"MscmpSystAuthn.html#get_owner_password_rules!/1-parameters"},{"type":"function","title":"MscmpSystAuthn.host_disallowed/1","doc":"Indicates whether the provided host IP address is to be denied access to the\nsystem.\n\nThis function returns a tuple in the form of `{:ok,  }` where the\n`disallowed` value is either `true` meaning that the requested host is\ndisallowed from authenticating with the system or `false` if the host is\npermitted to attempt an authentication.","ref":"MscmpSystAuthn.html#host_disallowed/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.host_disallowed/1","doc":"* `host_address` - the host IP address to test.  Typically this will be the\n  host address of a user wishing to authenticate with the system.","ref":"MscmpSystAuthn.html#host_disallowed/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.host_disallowed/1","doc":"An allowed host will return a `false` result tuple.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.host_disallowed(~i\"10.150.150.10\")\n    {:ok, false}\n\n  A disallowed host returns a `true` result tuple.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.host_disallowed(~i\"10.123.123.5\")\n    {:ok, true}","ref":"MscmpSystAuthn.html#host_disallowed/1-examples"},{"type":"function","title":"MscmpSystAuthn.host_disallowed?/1","doc":"Indicates whether the provided host IP address is to be denied access to the\nsystem, raising on error.\n\nThis function works the same as `host_disallowed/1` except this function\nreturns its result without wrapping it in a result tuple.  If an error is\nencountered an exception is raised.","ref":"MscmpSystAuthn.html#host_disallowed?/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.host_disallowed?/1","doc":"* `host_address` - the host IP address to test.  Typically this will be the\n  host address of a user wishing to authenticate with the system.","ref":"MscmpSystAuthn.html#host_disallowed?/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.host_disallowed?/1","doc":"An allowed host will return a `false` value.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.host_disallowed?(~i\"10.150.150.10\")\n    false\n\n  A disallowed host returns a `true` value.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MscmpSystAuthn.host_disallowed?(~i\"10.123.123.5\")\n    true","ref":"MscmpSystAuthn.html#host_disallowed?/1-examples"},{"type":"function","title":"MscmpSystAuthn.identify_access_account_by_code/2","doc":"Identifies an Access Account by its Account Code identifier.\n\nOn successful identification, the Account Code Identity record which was found\nbased on the supplied parameters is returned via a success tuple.  If the\nfunction completes successfully but no Identity record is found for the\nIdentifier a value of `{:ok, :not_found}` is returned.","ref":"MscmpSystAuthn.html#identify_access_account_by_code/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.identify_access_account_by_code/2","doc":"* `account_code` - the Account Code identifier which will identify the\n  Access Account\n\n  * `owner_id` - if the expected Access Account is an Owned Access Account,\n  the Owner must be identified.  If the Access Account is Unowned, this\n  parameter should be `nil`.","ref":"MscmpSystAuthn.html#identify_access_account_by_code/2-parameters"},{"type":"function","title":"MscmpSystAuthn.invite_to_instance/3","doc":"Invites or re-invites an Access Account to establish access rights to a\nspecific Instance.\n\nThe invitation process creates a `syst_access_account_instance_assocs` record\nfor the requested Access Account and Instance and sets the `invitation_issued`\nfield to the current date/time.  Re-invitation will update an existing\n`syst_access_account_instance_assocs` record resetting invite data such as the\ninvitation expiration date or resetting the declined state if the record was\npreviously declined by the Access Account holder. Once a\n`syst_access_account_instance_assocs` record is accepted, it may not be re-\ninvited again using this process until the record is revoked (deleted).\n\n`syst_access_account_instance_assocs` are unique to the Access Account and\nInstance combination and only one such record may exist for that combination\nat any one time.","ref":"MscmpSystAuthn.html#invite_to_instance/3"},{"type":"function","title":"Parameters - MscmpSystAuthn.invite_to_instance/3","doc":"* `access_account_id` - the record ID of the Access Account to invite to the\n  Instance.\n\n  * `instance_id` - the Instance record ID to which the Access Account is\n  being invited.\n\n  * `opts` - a keyword list of optional parameters used to set record values\n  and behaviors.  Available options are:\n\n    * `create_accepted` - will create a `syst_access_account_instance_assocs`\n    record which is already accepted when set `true`.  The default value is\n    `false`.\n\n    * `expiration_days` - for records that are not created as accepted and act\n    as true invitations, this option sets the number of days in which an\n    Access Account holder may accept the invitation.  After this time the\n    invitation is considered expired and must be re-invited before it can be\n    used to grant access again.  The default value for this option is 30 days.","ref":"MscmpSystAuthn.html#invite_to_instance/3-parameters"},{"type":"function","title":"MscmpSystAuthn.load_disallowed_passwords/2","doc":"Bulk loads a list of passwords into the Disallowed Passwords database table.\n\nTypically this function will be used to receive a stream of passwords which\nshould be added to the system Disallowed Passwords list.  The passwords\npassed to this function are streamed into the PostgreSQL database via a\n`COPY ms_syst.syst_disallowed_passwords FROM` command.\n\nThe system Disallowed Password List is stored using SHA-1 hashes of the\ndisallowed passwords to prevent the casual disclosure of possibly sensitive\ninformation including so called \"Personally Identifiable Information\" (PII).\nIf passwords to this function are provided via plain text this function will\nconvert them to the expected SHA-1 representation.","ref":"MscmpSystAuthn.html#load_disallowed_passwords/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.load_disallowed_passwords/2","doc":"* `password_list` - A required Enumerable of passwords to disallow. The\n  passwords in this list are accepted in one of two possible formats: simple\n  plain text passwords or as sha1 hashes represented using PostgreSQL's `bytea`\n  textual export format (e.g. \"example_pg_disallowed\" =\n  \"\\\\x32dc749fd3ef7bcf79d125a3f9146c0f122f8763\").  Which is expected depends\n  on the `pg_format` option described below.\n\n  > ##","ref":"MscmpSystAuthn.html#load_disallowed_passwords/2-parameters"},{"type":"function","title":"Plain Text Processing Tip {: .tip} - MscmpSystAuthn.load_disallowed_passwords/2","doc":">\n  > If the `password_list` is using the plain text representation, some\n  > sources, such as `File.stream!/3` may add an extraneous newline (or\n  > similar) to the password which must be stripped prior to passing to this\n  > function.  Failing to do so will result in incorrect hashing and the\n  > requested passwords will not be effectively disallowed.\n\n  * `options` - An optional Keyword List of settings with which the caller can\n  influence the behavior of this function.  The available options are:\n\n    * `pg_format` - a boolean value which indicates the format that the source\n    passwords are being provided in.  If true, the passwords to disallow are\n    expected to be already be SHA-1 hashed and represented using PostgreSQL's\n    `bytea` textual representation; if false, the passwords are assumed to be\n    represented using simple plain text which will be transformed as needed by\n    this function.  The default value of this parameter is `false` for plain\n    text processing.\n\n    * `timeout` - an integer representing the number of milliseconds that the\n    database transaction processing the load operation will wait prior to\n    timing out with an error.  Bulk loading is assumed to be used in cases\n    where a substantial amount of data might be processed; certainly enough\n    data to possibly exceed the system default database transaction timeout.\n    As such it is recommend to be sure the timeout here is fit for the data\n    requirements expected for any given call.  The default value is 300,000\n    milliseconds (5 minutes).","ref":"MscmpSystAuthn.html#load_disallowed_passwords/2-plain-text-processing-tip-tip"},{"type":"function","title":"Examples - MscmpSystAuthn.load_disallowed_passwords/2","doc":"Loading the Disallowed Passwords List using a file listing plain text\npasswords.\n\n    iex> MscmpSystAuthn.password_disallowed?(\"example_plain_disallowed\")\n    false\n    iex> Path.join([\"database\", \"example_plain_disallowed_passwords.txt\"])\n    ...>   |> File.stream!()\n    ...>   |> Stream.map(&String.trim_trailing(&1, \"\\n\"))\n    ...>   |> MscmpSystAuthn.load_disallowed_passwords()\n    :ok\n    iex> MscmpSystAuthn.password_disallowed?(\"example_plain_disallowed\")\n    true\n\nLoading the Disallowed Passwords List using a file already formatted for\ndirect loading into PostgreSQL.\n\n    iex> MscmpSystAuthn.password_disallowed?(\"example_pg_disallowed\")\n    false\n    iex> Path.join([\"database\", \"example_pg_disallowed_passwords.txt\"])\n    ...>   |> File.stream!()\n    ...>   |> MscmpSystAuthn.load_disallowed_passwords(pg_format: true)\n    :ok\n    iex> MscmpSystAuthn.password_disallowed?(\"example_pg_disallowed\")\n    true","ref":"MscmpSystAuthn.html#load_disallowed_passwords/2-examples"},{"type":"function","title":"MscmpSystAuthn.password_disallowed/1","doc":"Indicates whether the requested password is disallowed.\n\nThis function returns a tuple in the form of `{:ok,  }` where the\n`disallowed` value is either `true` meaning that the requested password is\ndisallowed or `false` if the password is available for use.\n\nRegardless of the return of this function, disallowed passwords are only\nprevented for use if the effective `disallow_compromised` Password Rule for\nthe Access Account attempting authentication is set.","ref":"MscmpSystAuthn.html#password_disallowed/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.password_disallowed/1","doc":"* `password` - the plaintext password to test for disallowed status.","ref":"MscmpSystAuthn.html#password_disallowed/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.password_disallowed/1","doc":"When a password has been previously disallowed and cannot be used as a\n  user credential.\n\n    iex> MscmpSystAuthn.password_disallowed(\"Is Disallowed\")\n    {:ok, true}\n\n  When a password has not been previously disallowed.\n\n    iex> MscmpSystAuthn.password_disallowed(\"Is Not Disallowed\")\n    {:ok, false}","ref":"MscmpSystAuthn.html#password_disallowed/1-examples"},{"type":"function","title":"MscmpSystAuthn.password_disallowed?/1","doc":"Indicates whether the requested password is disallowed, raising on error.\n\nThis function works the same as `disallowed_password/1` except this function\nreturns a simple `boolean` value rather than a result tuple.  If an error is\nencountered an exception is raised.","ref":"MscmpSystAuthn.html#password_disallowed?/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.password_disallowed?/1","doc":"* `password` - the plaintext password to test for disallowed status.","ref":"MscmpSystAuthn.html#password_disallowed?/1-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.password_disallowed?/1","doc":"When a password has been previously disallowed and cannot be used as a\n  user credential.\n\n    iex> MscmpSystAuthn.password_disallowed?(\"Is Disallowed\")\n    true\n\n  When a password has not been previously disallowed.\n\n    iex> MscmpSystAuthn.password_disallowed?(\"Is Not Disallowed\")\n    false","ref":"MscmpSystAuthn.html#password_disallowed?/1-examples"},{"type":"function","title":"MscmpSystAuthn.purge_access_account/1","doc":"Purges the requested Access Account if the Access Account State is of\na purge eligible functional type.","ref":"MscmpSystAuthn.html#purge_access_account/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.purge_access_account/1","doc":"* `access_account` - is either the record ID of the Access Account to purge\n  or the populated `Msdata.SystAccessAccounts` struct\n  representing the record to purge.","ref":"MscmpSystAuthn.html#purge_access_account/1-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.purge_access_account/1","doc":"iex> {:ok, target_access_account} =\n    ...>   MscmpSystAuthn.get_access_account_by_name(\"example_purge_accnt\")\n    iex> MscmpSystAuthn.purge_access_account(target_access_account)\n    :ok","ref":"MscmpSystAuthn.html#purge_access_account/1-example"},{"type":"function","title":"MscmpSystAuthn.request_identity_validation/2","doc":"Requests the creation of a Validation Token Authenticator for the specified\nIdentity.\n\nOn successful creation of the requested Validation Token Authenticator, an\nAuthenticator Result will be returned as the value element of a success tuple:\n\n    { :ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        validation_identifier: \"psYFOfuULJPTbs5MUvOYTyt71fAbQCj7XcmerRlQ\",\n        validation_credential: \"zz29w7l5Ev7vuRlGFHcPPjLTXjepdbYlyQwbBjDe\"\n    }}\n\nImportantly, the system generated Validation Token identifier and plaintext\ncredential are returned to the caller.  This is the only opportunity to obtain\nthe plaintext credential; after the return value of the function is disposed\nof there is no way to once again retrieve the plaintext of the Validation\nToken Credential.\n\nOnce the Validation Token Authenticator has been successfully created, the\ntarget Identity (typically an Email Identity) may not be used for\nauthentication until the Validation Token itself has been successfully\nauthenticated via the `authenticate_validation_token/4` function.\n\nThe created Validation Token Authenticator will expire after a time.  After\nexpiration the the Authenticator will no longer be to be authenticated by\n`authenticate_validation_token/4`.  The only way to validate the target\nIdentity at that point is to create a new Validation Token Authenticator for\nthe Identity using this function.","ref":"MscmpSystAuthn.html#request_identity_validation/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.request_identity_validation/2","doc":"* `target_identity` - either the record ID or the\n  `Msdata.SystIdentities` struct of the Identity record\n  to validate.  Typically this Identity will be an Email Identity.\n\n  * `opts` - a Keyword List of options which can change the behavior to the\n  Identity validation request.  The available options are:\n\n    * `expiration_hours` - overrides the default number of hours after which\n    to consider the Validation Authenticator expired.  By default the\n    Validation Authenticator expires 24 hours after creation.\n\n    * `identity_token_length` - this option overrides the default number of\n    random characters to generate for the Validation Token Identity\n    identifier.  The default number of characters generated is 40.\n\n    * `identity_tokens` - overrides the default character set to use in the\n    generation of the Validation Token Identity identifier.  The default value\n    is `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token_length` - this option overrides the default number of\n    random characters to generate for the Validation Token Credential. The\n    default number of characters generated is 40.\n\n    * `credential_tokens` - overrides the default character set to use in the\n    generation of the Validation Token Credential.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token` - overrides the system generated Validation\n    Credential with the value of this option.  The default is to allow the\n    system to automatically generate the credential.","ref":"MscmpSystAuthn.html#request_identity_validation/2-parameters"},{"type":"function","title":"MscmpSystAuthn.request_password_recovery/2","doc":"Requests to start a Password Credential recovery process for the specified\nAccess Account.\n\nAssuming that the Access Account's Password Credential exists and isn't\nalready being recovered, this function will create a new Recovery Token\nAuthenticator for the Access Account's Password Credential.\n\nOn successful creation of the requested Recovery Token Authenticator, an\nAuthenticator Result will be returned as the value element of a success tuple:\n\n    { :ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"acdyItesdmUvUoM7mKwPKd3mrBBnH87L2WA1DPip\",\n        credential: \"WYbFG2vkJOLD5ITX9tSE5OTZ9JlHdJE8BQ8Ukiiq\"\n    }}\n\nImportantly, the system generated Recovery Token account identifier and\nplaintext credential are returned to the caller.  This is the only opportunity\nto obtain the plaintext credential; after the return value of the function is\ndisposed of there is no way to once again retrieve the plaintext of the\nRecovery Token Credential.\n\nThe existence of a Recovery Token Authenticator for a Password Credential does\nnot prevent that Password Credential from continuing to be used in the\nauthentication process.\n\nA Recovery Token Authenticator will expire after a time.  After expiration the\nRecovery Token will no longer be able to be authenticated with\n`authenticate_recovery_token/4`.  Any further recovery of the Password\nCredential will require a new Recovery Token be created.","ref":"MscmpSystAuthn.html#request_password_recovery/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.request_password_recovery/2","doc":"* `access_account_id` - the record ID of the Access Account to which the\n  Password Credential needing recovering belongs.\n\n  * `opts` - a Keyword List of options which can change the behavior to the\n  password recovery request.  The available options are:\n\n    * `expiration_hours` - overrides the default number of hours after which\n    to consider the Recovery Authenticator expired.  By default the Recovery\n    Authenticator expires 24 hours after creation.\n\n    * `identity_token_length` - this option overrides the default number of\n    random characters to generate for the Recovery Token Identity identifier.\n    The default number of characters generated is 40.\n\n    * `identity_tokens` - overrides the default character set to use in the\n    generation of the Recovery Token Identity identifier.  The default value\n    is `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token_length` - this option overrides the default number of\n    random characters to generate for the Recovery Token Credential. The\n    default number of characters generated is 40.\n\n    * `credential_tokens` - overrides the default character set to use in the\n    generation of the Recovery Token Credential.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token` - overrides the system generated Recovery Credential\n    with the value of this option.  The default is to allow the system to\n    automatically generate the credential.","ref":"MscmpSystAuthn.html#request_password_recovery/2-parameters"},{"type":"function","title":"MscmpSystAuthn.reset_password_credential/2","doc":"Allows for an existing password to be changed to a new password.\n\nThe assumption is that a Password Credential already exists and that only the\npassword itself is being changed from an old value to a new value.\n\nThis function ensures that the new password meets all applicable Password \nRules prior to completing the change.  This function will not allow you to set\nthe password to an invalid value.\n\nFinally, in the case of a user initiated password change, it is traditional \nthat the user has to re-authenticate or provide their current password to \nverify they are, in fact, the person initiating the change.  This function \ndoes not try to achieve this goal.  The scope of this function assumes that \nany such confirmation of identity has been completed satisfactorily elsewhere. \n\nOn successful Password Credential reset this function will return `:ok`.  If\nthe new credential fails to meet the Password Rule criteria that applies to \nit, the function will return a failure tuple of type \n`t:MscmpSystAuthn.Types.credential_set_failures/0`.  All other return \nconditions are errors and result in an error tuple.","ref":"MscmpSystAuthn.html#reset_password_credential/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.reset_password_credential/2","doc":"* `access_account_id` - the Access Account for whom the Password is being\n  changed.\n\n  * `new_credential` - the new Password which will become the credential on\n  the successful completion of the function.","ref":"MscmpSystAuthn.html#reset_password_credential/2-parameters"},{"type":"function","title":"MscmpSystAuthn.revoke_account_code/1","doc":"Revokes a previously create Account Code Identity from an Access Account,\ndeleting it from the system.\n\nOn successful deletion a success tuple in the form `{:ok, :deleted}` is\nreturned.  If no existing Account Code Identity is found a tuple in this form\n`{:ok, :not_found}` is returned.  All other outcomes are error conditions\nresulting in the return of an error tuple.","ref":"MscmpSystAuthn.html#revoke_account_code/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.revoke_account_code/1","doc":"* `access_account_id` - the Access Account record ID from which to revoke\n  the Account Code Identity.","ref":"MscmpSystAuthn.html#revoke_account_code/1-parameters"},{"type":"function","title":"MscmpSystAuthn.revoke_api_token/1","doc":"Revokes the request API Token Authenticator by deleting it from the system.\n\nAPI Token Authenticators will regularly need to be decommissioned from the\nsystem by the Access Account holders they represent.  By revoking an API\nToken it is deleted from system.\n\nA successful deletion will return a success tuple if the form\n`{:ok, :deleted}`.  If the API Token Identity is not found this function will\nreturn a success tuple of `{:ok, :not_found}`.  Any other outcome is an error\nand results in an error tuple being returned.","ref":"MscmpSystAuthn.html#revoke_api_token/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.revoke_api_token/1","doc":"* `identity` - either the record ID of the API Token Identity to revoke or\n  the current-state `Msdata.SystIdentities` struct of\n  that record.","ref":"MscmpSystAuthn.html#revoke_api_token/1-parameters"},{"type":"function","title":"MscmpSystAuthn.revoke_instance_access/1","doc":"Revokes the access or invitation to access an Instance from the given Access\nAccount.\n\nSimply put, Access Accounts are both invited and granted access to Instances\nvia Access Account Instance Association records (see:\n`Msdata.SystAccessAccountInstanceAssocs`) and this\nfunction deletes those records.  This has the effect of revoking the\ninvitation to access an Instance from the Access Account/Credential Type\ncombination.\n\nRecords in any state of invited, accepted, or declined may be revoked/deleted\nusing this function.","ref":"MscmpSystAuthn.html#revoke_instance_access/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.revoke_instance_access/1","doc":"* `access_account_instance_assoc` - this value may be either the populated\n  `Msdata.SystAccessAccountInstanceAssocs` struct to\n  revoke or the record ID of the record to revoke.","ref":"MscmpSystAuthn.html#revoke_instance_access/1-parameters"},{"type":"function","title":"MscmpSystAuthn.revoke_instance_access/2","doc":"Revokes the access or invitation to access an Instance from the given Access\nAccount/Credential Type combination, referencing the record by its composite\nkey values.\n\nThis function performs the same action as `revoke_instance_access/1` but\nidentified the record being revoked (deleted) using its composite/candidate\nkey values.","ref":"MscmpSystAuthn.html#revoke_instance_access/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.revoke_instance_access/2","doc":"* `access_account_id` - the record ID of the Access Account from which the\n  invitation to access is being revoked.\n\n  * `instance_id` - the Instance record ID from which the Access Account had\n  previously been invited to access.","ref":"MscmpSystAuthn.html#revoke_instance_access/2-parameters"},{"type":"function","title":"MscmpSystAuthn.revoke_password_recovery/1","doc":"Revokes the Recovery Token Authenticator for a previously initiated Password\nCredential recovery.\n\nWhile Recovery Token Authenticators expire of their own accord after a time,\nthey may also explicitly be revoked.  In reality this means simply deleting\nthe Recovery Token Authenticator from the system.\n\nThe return value of this function on successful execution will be the success\ntuple `{:ok, :deleted}`.  If a recovery is not already underway for the\nrequested Access Account, the function will return successfully but will\nindicate that no action took place with a return of `{:ok, :not_found}`.  Any\nother condition is an error condition and the return value will be an error\ntuple indicating the nature of the issue.","ref":"MscmpSystAuthn.html#revoke_password_recovery/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.revoke_password_recovery/1","doc":"* `access_account_id` - identifies the Access Account for whom the Recovery\n  Token Authenticator should be revoked.  The expected value is the record ID\n  of the Access Account.","ref":"MscmpSystAuthn.html#revoke_password_recovery/1-parameters"},{"type":"function","title":"MscmpSystAuthn.revoke_validator_for_identity_id/1","doc":"Revokes a Validation Authenticator (\"Validator\") issued for the requested\nIdentity.\n\nWhile Validators will expire on their own if not confirmed first, there are\ncases where Validators should be revoked prior to that time, such as if the\nValidator communication to the user has been lost and a new Validator needs to\nbe generated.\n\nThe return value is a result tuple which indicates whether or not the\nrevocation happened (`{:ok, :deleted}`), if the Validator was not found\n(`{:ok, :not_found}`), or an error tuple in any other circumstance.","ref":"MscmpSystAuthn.html#revoke_validator_for_identity_id/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.revoke_validator_for_identity_id/1","doc":"* `target_identity_id` - the record ID of the Identity record which the\n  Validator was meant to validate.  So if the Validator to revoke was for an\n  Email Identity, this value would be the ID of the Email Identity and not the\n  Validation Identity.","ref":"MscmpSystAuthn.html#revoke_validator_for_identity_id/1-parameters"},{"type":"function","title":"MscmpSystAuthn.test_credential/2","doc":"Tests a candidate password against the effective Password Rules for a given\nAccess Account.\n\nPrior to attempting to save a Password Credential, it should be tested for\ncompliance with the Global Password Rules and any Owner Password Rules that\nexist for the Owner of the Access Account.  This function performs that test\nand will return all of the violations detected.  If no issues are detected,\na success tuple with a value of empty list will be returned (`{:ok, []}`).\n\nNote that this function is recommended to run prior to attempting to save a\nPassword Credential, but is not required.  Any function which can save a new\npassword to the database will independently test the candidate password\nagainst the effective Password Rules prior to saving the Credential, erroring\non any invalid password.","ref":"MscmpSystAuthn.html#test_credential/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.test_credential/2","doc":"* `access_account_id` - the record ID of the Access Account for whom to\n  perform the test.  The applicable Password Rules may derive from the\n  Access Account Owner if the Access Account is in fact owned.\n\n  * `plaintext_pwd` - the candidate Password to test against the rules.","ref":"MscmpSystAuthn.html#test_credential/2-parameters"},{"type":"function","title":"Examples - MscmpSystAuthn.test_credential/2","doc":"A successful password test.\n\n    iex> {:ok, access_account_id} =\n    ...>   MscmpSystAuthn.get_access_account_id_by_name(\"example_accnt\")\n    iex> MscmpSystAuthn.test_credential(access_account_id, \"A Passing Password.\")\n    {:ok, []}\n\n  An invalid password test.\n\n    iex> {:ok, access_account_id} =\n    ...>   MscmpSystAuthn.get_access_account_id_by_name(\"example_accnt\")\n    iex> MscmpSystAuthn.test_credential(access_account_id, \"short\")\n    {:ok, [password_rule_length_min: 8]}","ref":"MscmpSystAuthn.html#test_credential/2-examples"},{"type":"function","title":"MscmpSystAuthn.update_access_account/2","doc":"Updates the maintainable fields of a given Access Account record.","ref":"MscmpSystAuthn.html#update_access_account/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_access_account/2","doc":"* `access_account` - either the record ID value of the Access Account to\n  update or is the complete `Msdata.SystAccessAccounts`\n  struct representing the before-update state of the Access Account record.\n\n  * `access_account_params` - a map containing those attributes to be changed\n  along with their new values.","ref":"MscmpSystAuthn.html#update_access_account/2-parameters"},{"type":"function","title":"Example - MscmpSystAuthn.update_access_account/2","doc":"iex> {:ok, target_access_account} =\n    ...>   MscmpSystAuthn.get_access_account_by_name(\"example_accnt\")\n    iex> {:ok, updated_access_account} =\n    ...>   MscmpSystAuthn.update_access_account(\n    ...>     target_access_account,\n    ...>     %{external_name: \"Updated Example Account Name\"}\n    ...>   )\n    iex> %Msdata.SystAccessAccounts{\n    ...>   external_name: \"Updated Example Account Name\"\n    ...> } = updated_access_account","ref":"MscmpSystAuthn.html#update_access_account/2-example"},{"type":"function","title":"MscmpSystAuthn.update_api_token_external_name/2","doc":"Updates the External Name value of an existing API Token Identity.\n\nAPI Token Identities permit Access Account holder naming of the Identity as it\nmay be common for an one Access Account to require multiple API Token\nAuthenticators for different purposes.\n\nOn success this function returns a success tuple where the value element of\nthe tuple is the updated `Msdata.SystIdentities` struct.\nOn error, an error tuple is returned.","ref":"MscmpSystAuthn.html#update_api_token_external_name/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_api_token_external_name/2","doc":"* `identity` - either the record ID of the API Token Identity to update or\n  the current-state `Msdata.SystIdentities` struct of\n  that record.\n\n  * `external_name` - the text of the updated External Name value or `nil` to\n  remove the text of an existing non-nil value.","ref":"MscmpSystAuthn.html#update_api_token_external_name/2-parameters"},{"type":"function","title":"MscmpSystAuthn.update_global_network_rule/2","doc":"Updates an existing Global Network Rule with new values.\n\nThis function works similar to `create_global_network_rule/1` but updates an\nexisting Global Network Rule record rather than creating a new one.\n\nOn successful update, a result tuple in the form `{:ok,  }` is returned\nwhere the   is the fully populated Data struct of the record just\nupdated.  If an exception is raised this function will return a failure tuple\nin the form of `{:error,  }`.","ref":"MscmpSystAuthn.html#update_global_network_rule/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_global_network_rule/2","doc":"* `global_network_rule` - this value is either a fully populated\n  `Msdata.SystGlobalNetworkRules` struct of an existing\n  Global Network Rule record or the ID of such a record.  If the data struct\n  is provided, Ecto optimistic locking is applied to the update operation.\n\n  * `update_params` - a map representing the values to use when updating the\n  Global Network Rule.  All parameters are optional, with omission meaning\n  that the existing value should retain its current value.  See\n  `t:MscmpSystAuthn.Types.global_network_rule_params/0` for the\n  available attributes.","ref":"MscmpSystAuthn.html#update_global_network_rule/2-parameters"},{"type":"function","title":"MscmpSystAuthn.update_global_password_rules/1","doc":"Updates the Global Password Rules with new values.\n\nThe Global Password Rules are created at system installation time with a\ndefault and recommended set of values, but these values may be customized as\ndesired any time after installation.\n\nNote that the original Global Password Rules data will be retrieved for use in\nthe update process and that no Ecto optimistic locking will be employed with\nthis update.","ref":"MscmpSystAuthn.html#update_global_password_rules/1"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_global_password_rules/1","doc":"* `update_params` - a map of the values to use when updating the Global\n  Password Rules record. See\n  `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MscmpSystAuthn.html#update_global_password_rules/1-parameters"},{"type":"function","title":"MscmpSystAuthn.update_global_password_rules/2","doc":"Updates the Global Password Rules with new values using a caller provided\ndata source record.\n\nThis function works the same as described in `create_update_global_password_rules/1`\nexcept that in this version the caller must also provide a source\ndata struct to act as the basis of the update.  Ecto optimistic locking will\nbe applied to the update process.","ref":"MscmpSystAuthn.html#update_global_password_rules/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_global_password_rules/2","doc":"* `global_password_rules` - a fully populated\n  `Msdata.SystGlobalPasswordRules` record representing\n  the state of the Global Password Rules prior to the change.\n\n  * `update_params` - a map of the values to use when updating the Global\n  Password Rules record. See\n  `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MscmpSystAuthn.html#update_global_password_rules/2-parameters"},{"type":"function","title":"MscmpSystAuthn.update_instance_network_rule/2","doc":"Updates an existing Instance Network Rule with new values.\n\nThis function works similar to `create_instance_network_rule/2` but updates an\nexisting Instance Network Rule record rather than creating a new one.\n\nOn successful update, a result tuple in the form `{:ok,  }` is returned\nwhere the   is the fully populated Data struct of the record just\nupdated.  If an exception is raised this function will return a failure tuple\nin the form of `{:error,  }`.","ref":"MscmpSystAuthn.html#update_instance_network_rule/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_instance_network_rule/2","doc":"* `instance_network_rule` - this value is either a fully populated\n  `Msdata.SystInstanceNetworkRules` struct of an\n  existing Instance Network Rule record or the ID of such a record.  If the\n  data struct  is provided, Ecto optimistic locking is applied to the update\n  operation.\n\n  * `update_params` - a map representing the values to use when updating the\n  Instance Network Rule.  All parameters are optional, with omission meaning\n  that the existing value should retain its current value.  See\n  `t:MscmpSystAuthn.Types.instance_network_rule_params/0` for the\n  available attributes.","ref":"MscmpSystAuthn.html#update_instance_network_rule/2-parameters"},{"type":"function","title":"MscmpSystAuthn.update_owner_network_rule/2","doc":"Updates an existing Owner Network Rule with new values.\n\nThis function works similar to `create_owner_network_rule/2` but updates an\nexisting Owner Network Rule record rather than creating a new one.\n\nOn successful update, a result tuple in the form `{:ok,  }` is returned\nwhere the   is the fully populated Data struct of the record just\nupdated.  If an exception is raised this function will return a failure tuple\nin the form of `{:error,  }`.","ref":"MscmpSystAuthn.html#update_owner_network_rule/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_owner_network_rule/2","doc":"* `owner_network_rule` - this value is either a fully populated\n  `Msdata.SystOwnerNetworkRules` struct of an existing\n  Owner Network Rule record or the ID of such a record.  If the data struct\n  is provided, Ecto optimistic locking is applied to the update operation.\n\n  * `update_params` - a map representing the values to use when updating the\n  Owner Network Rule.  All parameters are optional, with omission meaning\n  that the existing value should retain its current value.  See\n  `t:MscmpSystAuthn.Types.owner_network_rule_params/0` for the\n  available attributes.","ref":"MscmpSystAuthn.html#update_owner_network_rule/2-parameters"},{"type":"function","title":"MscmpSystAuthn.update_owner_password_rules/2","doc":"Updates the Owner Password Rules with new values.\n\nAfter creation, Owner Password Rules may be updated with new values as might\nmeet the specific needs of the Owner.","ref":"MscmpSystAuthn.html#update_owner_password_rules/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.update_owner_password_rules/2","doc":"* `owner` - the record ID of the Owner for whom the Password Rules are\n  being updated or the fully populated data struct representing the current\n  Owner Password Rules.  Note that if the data struct is provided Ecto\n  optimistic locking will be in effect.\n\n  * `update_params` - a map of the values to use when updating the Owner\n  Password Rules record. See\n  `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MscmpSystAuthn.html#update_owner_password_rules/2-parameters"},{"type":"function","title":"MscmpSystAuthn.verify_password_rules/2","doc":"Compares a \"Test\" set of Password Rules against a \"Standard\" set of Password\nRules and reports on which of the \"Test\" Rules are considered less stringent\nthan the \"Standard\" Rules.\n\nThe primary use case for this function is to test how Owner Password Rules\n(\"Test\" Rules) compare against the Global Password Rules (\"Standard\" Rules),\nbut the function can compare any two rules.\n\nThe return value of this function is wrapped in a result tuple. A result of\n`{:ok,  }` is returned on success and an error tuple in the\nform of `{:error,  }` is returned on error.  The ` `\nvalue is a Keyword List where each tuple's key represents the rule violated\nand the tuple's value is the required value for that rule; whether the\nrequired value is a minimum or maximum depends on the nature of the specific\nrule being reported.","ref":"MscmpSystAuthn.html#verify_password_rules/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.verify_password_rules/2","doc":"* `test_rules` - a Password Rule which will be tested against the value\n  of the `standard_rules`.  Where the `test_rules` are less stringent than the\n  `standard_rules`, a violation is reported in the result.\n\n  * `standard_rules` - the \"Standard\" against which the `test_rules` are\n  judged.  This parameter is optional and when nil the Global Password\n  Rule is retrieved and used as the default \"Standard\" Rules.  Otherwise\n  either a generic `t:MscmpSystAuthn.Types.PasswordRules.t/0` value\n  or a populated `Msdata.SystGlobalPasswordRules` data\n  struct may be provided.","ref":"MscmpSystAuthn.html#verify_password_rules/2-parameters"},{"type":"function","title":"MscmpSystAuthn.verify_password_rules!/2","doc":"Compares a \"Test\" set of Password Rules against a \"Standard\" set of Password\nRules and reports on which of the \"Test\" Rules are considered less stringent\nthan the \"Standard\" Rules, raising on error.\n\nThis function works the same as `verify_password_rules/2` except that any\nerrors cause an exception to be raised.","ref":"MscmpSystAuthn.html#verify_password_rules!/2"},{"type":"function","title":"Parameters - MscmpSystAuthn.verify_password_rules!/2","doc":"* `test_rules` - a Password Rule which will be tested against the value\n  of the `standard_rules`.  Where the `test_rules` are less stringent than the\n  `standard_rules`, a violation is reported in the result.\n\n  * `standard_rules` - the \"Standard\" against which the `test_rules` are\n  judged.  This parameter is optional and when nil the Global Password\n  Rule is retrieved and used as the default \"Standard\" Rules.  Otherwise\n  either a generic `t:MscmpSystAuthn.Types.PasswordRules.t/0` value\n  or a populated `Msdata.SystGlobalPasswordRules` data\n  struct may be provided.","ref":"MscmpSystAuthn.html#verify_password_rules!/2-parameters"},{"type":"module","title":"Msdata.SystAccessAccountInstanceAssocs","doc":"Associates access accounts with the instances for which they are allowed to\nauthenticate to.\n\nNote that being able to authenticate to an instance is not the same as having\nauthorized rights within the instance; authorization is handled by the\ninstance directly.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystAccessAccountInstanceAssocs.html"},{"type":"function","title":"Msdata.SystAccessAccountInstanceAssocs.insert_changeset/1","doc":"","ref":"Msdata.SystAccessAccountInstanceAssocs.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystAccessAccountInstanceAssocs.update_changeset/2","doc":"","ref":"Msdata.SystAccessAccountInstanceAssocs.html#update_changeset/2"},{"type":"type","title":"Msdata.SystAccessAccountInstanceAssocs.t/0","doc":"","ref":"Msdata.SystAccessAccountInstanceAssocs.html#t:t/0"},{"type":"module","title":"Msdata.SystAccessAccounts","doc":"Contains the known login accounts which are used solely for the purpose of\nauthentication of users.\n\nAuthorization is handled on a per-instance basis within the application.\n\nDefined in `MscmpSystAuthn`","ref":"Msdata.SystAccessAccounts.html"},{"type":"function","title":"Msdata.SystAccessAccounts.insert_changeset/2","doc":"","ref":"Msdata.SystAccessAccounts.html#insert_changeset/2"},{"type":"function","title":"Msdata.SystAccessAccounts.update_changeset/3","doc":"","ref":"Msdata.SystAccessAccounts.html#update_changeset/3"},{"type":"type","title":"Msdata.SystAccessAccounts.t/0","doc":"","ref":"Msdata.SystAccessAccounts.html#t:t/0"},{"type":"module","title":"Msdata.SystCredentials","doc":"Hosts the credentials by which a user or external system will prove its\nidentity.\n\nNote that not all credential types are available for authentication with all\nidentity types.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystCredentials.html"},{"type":"function","title":"Msdata.SystCredentials.insert_changeset/1","doc":"","ref":"Msdata.SystCredentials.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystCredentials.update_changeset/2","doc":"","ref":"Msdata.SystCredentials.html#update_changeset/2"},{"type":"type","title":"Msdata.SystCredentials.t/0","doc":"","ref":"Msdata.SystCredentials.html#t:t/0"},{"type":"module","title":"Msdata.SystDisallowedHosts","doc":"A simple listing of \"banned\" IP address which are not allowed to authenticate\ntheir users to the system.\n\nThis registry differs from the syst_*_network_rules tables in that IP\naddresses here are registered as the result of automatic system heuristics\nwhereas the network rules are direct expressions of system administrator\nintent.  The timing between these two mechanisms is also different in that\nrecords in this table are evaluated prior to an authentication attempt and\nmost network rules are processed in the authentication attempt sequence.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystDisallowedHosts.html"},{"type":"function","title":"Msdata.SystDisallowedHosts.insert_changeset/1","doc":"","ref":"Msdata.SystDisallowedHosts.html#insert_changeset/1"},{"type":"type","title":"Msdata.SystDisallowedHosts.t/0","doc":"","ref":"Msdata.SystDisallowedHosts.html#t:t/0"},{"type":"module","title":"Msdata.SystDisallowedPasswords","doc":"Represents a SHA-1 hashed password which is expected to be listed in\nthe dictionaries used by attackers to compromised online accounts.  Disallowed\npasswords, as the name suggests, are used to prevent users selecting these\nknown compromised passwords when the password rule to disallow known passwords\nis in effect.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystDisallowedPasswords.html"},{"type":"function","title":"Msdata.SystDisallowedPasswords.insert_changeset/1","doc":"","ref":"Msdata.SystDisallowedPasswords.html#insert_changeset/1"},{"type":"type","title":"Msdata.SystDisallowedPasswords.t/0","doc":"","ref":"Msdata.SystDisallowedPasswords.html#t:t/0"},{"type":"module","title":"Msdata.SystGlobalNetworkRules","doc":"Expresses globally applicable rules concerning which hosts, as identified by\nIP address, may or may not attempt to authenticate with the system.\n\nThese are part of a firewall-like set of rules of which those defined in this\n'global' scope are applied prior to any `SystOwnerNetworkRules` and\n`SystInstanceNetworkRules`.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystGlobalNetworkRules.html"},{"type":"function","title":"Msdata.SystGlobalNetworkRules.insert_changeset/1","doc":"","ref":"Msdata.SystGlobalNetworkRules.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystGlobalNetworkRules.update_changeset/2","doc":"","ref":"Msdata.SystGlobalNetworkRules.html#update_changeset/2"},{"type":"type","title":"Msdata.SystGlobalNetworkRules.t/0","doc":"","ref":"Msdata.SystGlobalNetworkRules.html#t:t/0"},{"type":"module","title":"Msdata.SystGlobalPasswordRules","doc":"Establishes rules defining the minimum allowed password complexity\non a global, whole system basis.\n\nRules defined here may be further strengthened by rules defined by\n`SystOwnerPasswordRules`, but may not be weakened by those definitions.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystGlobalPasswordRules.html"},{"type":"function","title":"Msdata.SystGlobalPasswordRules.update_changeset/2","doc":"","ref":"Msdata.SystGlobalPasswordRules.html#update_changeset/2"},{"type":"type","title":"Msdata.SystGlobalPasswordRules.t/0","doc":"","ref":"Msdata.SystGlobalPasswordRules.html#t:t/0"},{"type":"module","title":"Msdata.SystIdentities","doc":"The identities with which access accounts are identified to the system.\n\nThe most common example of an identity would be a user name such as an email\naddress.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystIdentities.html"},{"type":"function","title":"Msdata.SystIdentities.insert_changeset/1","doc":"","ref":"Msdata.SystIdentities.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystIdentities.update_changeset/2","doc":"","ref":"Msdata.SystIdentities.html#update_changeset/2"},{"type":"type","title":"Msdata.SystIdentities.t/0","doc":"","ref":"Msdata.SystIdentities.html#t:t/0"},{"type":"module","title":"Msdata.SystInstanceNetworkRules","doc":"Expresses Instance specific rules concerning which hosts, as identified by\nIP address, may or may not attempt to authenticate with the system.\n\nThese are part of a firewall-like set of rules of which those defined in this\n'instance' scope are evaluated after any `SystGlobalNetworkRules` and\n`SystOwnerNetworkRules` defined rules have been processed.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystInstanceNetworkRules.html"},{"type":"function","title":"Msdata.SystInstanceNetworkRules.insert_changeset/1","doc":"","ref":"Msdata.SystInstanceNetworkRules.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystInstanceNetworkRules.update_changeset/2","doc":"","ref":"Msdata.SystInstanceNetworkRules.html#update_changeset/2"},{"type":"type","title":"Msdata.SystInstanceNetworkRules.t/0","doc":"","ref":"Msdata.SystInstanceNetworkRules.html#t:t/0"},{"type":"module","title":"Msdata.SystOwnerNetworkRules","doc":"Expresses Owner specific rules concerning which hosts, as identified by\nIP address, may or may not attempt to authenticate with the system.\n\nThese are part of a firewall-like set of rules of which those defined in this\n'owner' scope are evaluated after any `SystGlobalNetworkRules` defined rules\nand prior to any `SystInstanceNetworkRules` defined rules.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystOwnerNetworkRules.html"},{"type":"function","title":"Msdata.SystOwnerNetworkRules.insert_changeset/1","doc":"","ref":"Msdata.SystOwnerNetworkRules.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystOwnerNetworkRules.update_changeset/2","doc":"","ref":"Msdata.SystOwnerNetworkRules.html#update_changeset/2"},{"type":"type","title":"Msdata.SystOwnerNetworkRules.t/0","doc":"","ref":"Msdata.SystOwnerNetworkRules.html#t:t/0"},{"type":"module","title":"Msdata.SystOwnerPasswordRules","doc":"Establishes Owner specific rules defining the minimum allowed password\ncomplexity.\n\nRules defined here may further strengthen the rules defined by\n`SystGlobalPasswordRules`, but may not be weaken those definitions.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystOwnerPasswordRules.html"},{"type":"function","title":"Msdata.SystOwnerPasswordRules.insert_changeset/1","doc":"","ref":"Msdata.SystOwnerPasswordRules.html#insert_changeset/1"},{"type":"function","title":"Msdata.SystOwnerPasswordRules.update_changeset/2","doc":"","ref":"Msdata.SystOwnerPasswordRules.html#update_changeset/2"},{"type":"type","title":"Msdata.SystOwnerPasswordRules.t/0","doc":"","ref":"Msdata.SystOwnerPasswordRules.html#t:t/0"},{"type":"module","title":"Msdata.SystPasswordHistory","doc":"A history of previous user passwords credentials kept for the purpose of\nenforcing the reused password exclusion rule.\n\nDefined in `MscmpSystAuthn`.","ref":"Msdata.SystPasswordHistory.html"},{"type":"function","title":"Msdata.SystPasswordHistory.insert_changeset/2","doc":"","ref":"Msdata.SystPasswordHistory.html#insert_changeset/2"},{"type":"type","title":"Msdata.SystPasswordHistory.t/0","doc":"","ref":"Msdata.SystPasswordHistory.html#t:t/0"},{"type":"module","title":"MscmpSystAuthn.Types","doc":"Types used by the Authentication module.","ref":"MscmpSystAuthn.Types.html"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_id/0","doc":"Defines the expected type of Access Account record ID values.","ref":"MscmpSystAuthn.Types.html#t:access_account_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_instance_assoc_id/0","doc":"Defines the expected type of Access Account Instance Association record ID\nvalues.","ref":"MscmpSystAuthn.Types.html#t:access_account_instance_assoc_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_instance_assoc_params/0","doc":"Defines the expected shape and types of Access Account Instance Association\nParameters.\n\nThese parameters are passed to the database Changeset functions for tasks such\nas record creation or updating.","ref":"MscmpSystAuthn.Types.html#t:access_account_instance_assoc_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.access_account_instance_assoc_params/0","doc":"* `access_account_id` - the Access Account record ID which will be\n  associated with the Instance.\n\n  * `access_account_name` - an alternate method of identifying an Access\n  Account record by using its Internal Name value.  This can be used instead\n  of the `access_account_id` attribute.\n\n  * `instance_id` - the record ID of the Instance to which the designated\n  Access Account record will be associated.\n\n  * `instance_name` - an alternate method of identifying the target Instance\n  record by using its Internal Name value.  This can be used instead of the\n  `instance_id` attribute.\n\n  * `access_granted` - when populated the value indicates both that the Access\n  Account has access to the Instance and indicates specifically when that\n  access was granted.  When `nil` this value means that the Access Account has\n  been invited to the access the Instance, but that the Access Account holder\n  (the user) has not yet accepted the invitation.\n\n  * `invitation_issued` - the specific date and time when the Access Account\n  was invited to access the Instance.  When `nil` the invitation has not yet\n  been issued.\n\n  * `invitation_expires` - the date and time by which an invitation for access\n  must be accepted by the Access Account holder.  If the Access Account holder\n  has not accepted the invitation by the value of this attribute, the record\n  is considered invalid and the invitation must be reissued.\n\n  * `invitation_declined` - the date and time at which the Access Account\n  holder declined an invitation to access an Instance.  If this value is `nil`\n  then the Access Account holder has not specifically declined the request.","ref":"MscmpSystAuthn.Types.html#t:access_account_instance_assoc_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_name/0","doc":"Defines the type of Access Account Internal Name values.","ref":"MscmpSystAuthn.Types.html#t:access_account_name/0"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_params/0","doc":"Defines the shape and expected types of Access Account Changeset parameters.","ref":"MscmpSystAuthn.Types.html#t:access_account_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.access_account_params/0","doc":"* `internal_name` - a candidate key for the Access Account record. This\n  value must be unique system wide.\n\n  * `external_name` - an externally/user visible name of the Access Account.\n  This value does not require uniqueness, though care should be exercised in\n  contexts where it may be displayed alongside other Access Accounts to avoid\n  confusion.\n\n  * `owning_owner_id` - the record ID of the Owner which manages the Access\n  Account, if the Access Account is in fact Owner managed.  If the Access '\n  Account is not Owner managed this attribute should be left `nil`.\n\n  * `owning_owner_name` - an alternative means of identifying the Access\n  Account's Owner using the Internal Name of the Owner instead of its ID.\n\n  * `allow_global_logins` - if true, the Access Account can log into the\n  system without specification of an Owner or Instance for context.  Typically\n  this is is used for unowned Access Accounts which may log into a global\n  interface and then select their desired Application Instance from a list of\n  those they have been granted access to.  If false, a specific Owner or\n  Instance context is required.\n\n  * `access_account_state_id` - identifies the current life-cycle state of the\n  Access Account.\n\n  * `access_account_state_name` - an alternative means of identifying the\n  Access Account State using the Internal Name of the State instead of its\n  record ID.","ref":"MscmpSystAuthn.Types.html#t:access_account_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_state_functional_types/0","doc":"Access Account State functional types which are assigned to Access Account\nState records for the purpose of influencing system functionality and\nbehavior.\n\n  * `:access_account_states_pending` - Access Accounts in states of this\n  functional type are not considered active and are limited in use to\n  facilitating full activation.\n\n\n  * `:access_account_states_active` - active states are those which all full\n  use of the associated Access Accounts for all permitted uses of the system.\n\n\n  * `:access_account_states_suspended` - when an Access Account is in a state\n  of functional type suspended only certain basic Access Account maintenance\n  functionality is permitted to the Access Account holder.  Regular usage is\n  naturally denied.\n\n\n  * `:access_account_states_inactive` - inactive states are not allowed to use\n  make regular use of the system and are disabled for most purposes.   Regular\n  account maintenance is also typically not allowed.\n\n\n  * `:access_account_states_purge_eligible` -  Access Accounts in states\n  designated as purge eligible are permitted to be deleted from the system.","ref":"MscmpSystAuthn.Types.html#t:access_account_state_functional_types/0"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_state_id/0","doc":"Defines the type of Access Account State record ID values.","ref":"MscmpSystAuthn.Types.html#t:access_account_state_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.access_account_state_name/0","doc":"Defines the type of Access Account State Internal Name values.","ref":"MscmpSystAuthn.Types.html#t:access_account_state_name/0"},{"type":"type","title":"MscmpSystAuthn.Types.account_identifier/0","doc":"The expected type of values used to identify an Access Account.\n\nThe value of the Account Identifier will vary by context.  For example, in the\ncase of Email Identities, the Account Identifier will be an email address; for\nAPI Token Identities, the Account Identifier will likely be a pre-generated\nshort string of random characters.","ref":"MscmpSystAuthn.Types.html#t:account_identifier/0"},{"type":"type","title":"MscmpSystAuthn.Types.authentication_extended_operations/0","doc":"Defines required operations during an authentication attempt which are\nconsidered `extended`, meaning that they interrupt the normal authentication\nflow.\n\nCertain authentication methods, such as Email/Password authentication, have\ncertain defined points where an authentication attempt may be interrupted.\nExamples of such interruptions include when Multi-Factor Authentication is\nrequired or when the password requires resetting prior to proceeding.  In all\nof these cases, we have some action that must take place, including possibly\nuser interactive actions, which must be completed before the full\nauthentication process can complete successfully.\n\nThis type defines the known extended operations which can force this\nfunctionality.","ref":"MscmpSystAuthn.Types.html#t:authentication_extended_operations/0"},{"type":"type","title":"MscmpSystAuthn.Types.authentication_operations/0","doc":"A list of known operations which may occur during an authentication attempt.\n\nEach type of authentication defines the steps which that kind of\nauthentication requires to be completed prior to considering the attempt\n\"authenticated\".  This type defines references to all of the known operations\nthat may be required and then includes the\n`t:authentication_extended_operations/0` which may cause an interruption to\nto the authentication process.","ref":"MscmpSystAuthn.Types.html#t:authentication_operations/0"},{"type":"type","title":"MscmpSystAuthn.Types.authentication_status/0","doc":"The understood life-cycle states of the authentication process.\n\nAny authentication process will exist in one of the states defined by the\nlist below.  The list is used to populate the `status` field of the\n`t:authentication_state/0` type.\n\nNote that while the authentication process may provide the caller information\nregarding the nature of any rejection, the developer should nonetheless make\nwell considered judgements regarding what, if any, detail to disclose to the\nuser attempting authentication.  More often than not no specificity for a\nrejection should be given.\n\n  * `:not_started` - the authentication process has not yet begun.\n\n  * `:pending` - the authentication process is underway.   It is possible for\n  a call to an authentication function to return a `:pending` authentication\n  state status.  In these cases the authentication has been interrupted and\n  requires intervention to proceed.\n\n  * `:rejected_host_check` - the authentication process has rejected the\n  authentication attempt because the apparent Host IP Address is not allowed\n  to authenticate as presented.\n\n  * `:rejected_rate_limited` - the authentication process has rejected the\n  authentication attempt because the identifier has failed to successfully\n  authenticate within the prescribed number of tries within a prescribed\n  duration.\n\n  * `:rejected_validation` - the authentication process has rejected the\n  authentication attempt because the identity used to identify the Access\n  Account is subject to prior validation/confirmation by the Access Account\n  holder.  This is the case with newly created Email Identities, for example.\n\n  * `:rejected_identity_expired` - the authentication process has rejected the\n  authentication attempt because the Identity record used to identity the\n  Access Account is beyond its configured expiration date and may not be use\n  again until the Identity's expiration has been reset.  Note that not all\n  Identity records expire.\n\n  * `:rejected_deadline_expired` - the authentication process is rejected\n  because it has taken too long to resolve to a final authentication status.\n\n  * `:rejected` - the authentication process has rejected the authentication\n  attempt for undeclared reasons.  Examples of reasons that can prompt this\n  authentication end state are a user providing a wrong password or no\n  Instance to access being identified.\n\n  * `:authenticated` - the authentication process has finished successfully\n  and the Access Account is now authenticated for the identified Instance.","ref":"MscmpSystAuthn.Types.html#t:authentication_status/0"},{"type":"type","title":"MscmpSystAuthn.Types.authenticator_types/0","doc":"The supported types of authentication.\n\nThough the system separates out the notion of what Identities & Credentials\nare, there are nonetheless matched pairs of identities/credentials which the\nsystem treat as a unit.  This type encapsulates those functional combinations\nmaking it easier for code to communicate intentions while avoiding invalid\ncombinations of Identity/Credential Types.","ref":"MscmpSystAuthn.Types.html#t:authenticator_types/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential/0","doc":"Defines the type expected for user provided plaintext Credentials.","ref":"MscmpSystAuthn.Types.html#t:credential/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_confirm_result/0","doc":"Used to define the return value of an attempted Credential Confirmation.\n\nAttempting to confirm a user provided Credential returns a tuple where the\nfirst element is an indication of whether or not a valid Credential was\nsupplied by the user and the second element is a list of extended states which\nmight indicate that additional processing is required even if the Credential\nis successfully confirmed.  If no additional processing is required the second\nelement will simply be an empty list.","ref":"MscmpSystAuthn.Types.html#t:credential_confirm_result/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_confirm_state/0","doc":"Defines the possible outcomes of an attempt to confirm a user provided\nCredential.\n\nThis type is used to set the available values of the first element of the\n`t:credential_confirm_result/0` tuple.\n\n  * `:confirmed` - the Credential provided by the user is confirmed as being\n  correct.\n\n  * `:no_credential` - no matching Credential record of the correct type was\n  found for the Access Account.\n\n  * `:wrong_credential` - the user provided Credential does not match the\n  stored Credential record for that Access Account.\n\nWhile outcomes other than confirm give some information to the caller, the\nspecific reason for the failure should usually not be disclosed to the user\nattempting authentication; users should just see a binary confirmed/\nunconfirmed state without additional details regarding a failure.","ref":"MscmpSystAuthn.Types.html#t:credential_confirm_state/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_extended_state/0","doc":"Known extended Credential confirmation states indicating required post-\nconfirmation actions.\n\nThis type defines the values which may appear in a list as the second element\nof `t:credential_confirm_result/0`.\n\n  * `:require_mfa` - when present this value indicates that even though a\n  Credential confirmation succeeded, an additional multi-factor credential\n  confirmation is required prior to the authentication attempt resulting in\n  an authenticated status.  This will be true when the Access Account has\n  one or more configured MFA Credentials and the primary Authenticator is one\n  that supports MFA Credential confirmation (e.g. Password Credentials support\n  MFA Credential confirmation).\n\nAdditional states that can be represented as extended states here include the\nCredential reset related reasons defined in `t:credential_reset_reason/0`.","ref":"MscmpSystAuthn.Types.html#t:credential_extended_state/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_id/0","doc":"Defines the Credential record ID type.","ref":"MscmpSystAuthn.Types.html#t:credential_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_params/0","doc":"A type to facilitate data maintenance operations related to Credential\nrecords.","ref":"MscmpSystAuthn.Types.html#t:credential_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.credential_params/0","doc":"* `access_account_id` - identifies the Access Account to which the\n  Credential pertains as identified by its record ID.\n\n  * `access_account_name` - an alternative method of using the Access Account\n  internal name to identify the Access Account.\n\n  * `credential_type_id` - the record ID of the Credential Type which\n  classifies the Credential record.\n\n  * `credential_type_name` - an alternative method of identifying the\n  Credential Type using its Internal Name.\n\n  * `credential_for_identity_id` - certain Credentials are only valid when\n  used in conjunction with specific Identity records.  This value records the\n  record ID of the Identity record to which the Credential record belongs.\n\n  * `credential_data` - the hashed or encrypted value of the Credential.  The\n  specific details of what is stored in this value will depend on the method\n  used to secure the Credential, but the most typical scenario includes both\n  the credential hash and the record specific salting value used in creating\n  the hash.","ref":"MscmpSystAuthn.Types.html#t:credential_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.credential_reset_reason/0","doc":"Provides additional Credential Extended State values when Credential resets\nare required.\n\nThese values are related in that they all deal with a primary Credential reset\nbeing required and describe the reason for such a requirement.  This is\ninformation useful to users that must take action.\n\nNote that currently the only Credential type that may require Credential reset\nis the Password Credential Type.\n\n  * `reset_forced` - the reset is required because it has been\n  administratively forced.  See the `force_reset` field of\n  `Msdata.SystCredentials` for more.\n\n  * `reset_age` - the Password Credential has exceeded the applicable Max Age\n  Password Rule and must be updated.\n\n  * `reset_disallowed` - the password used in the Credential has been found to\n  be included in the Disallowed Passwords list and may no longer be used for\n  authentication.","ref":"MscmpSystAuthn.Types.html#t:credential_reset_reason/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_set_failures/0","doc":"A extended return value used when Credentials setting operations have failed.\n\nThis type allows the reason for failure to be communicated.  This will most\noften be when a candidate password has failed the effective Password Rule and\nwill describe which specific Password Rules have been violated.","ref":"MscmpSystAuthn.Types.html#t:credential_set_failures/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_type_functional_types/0","doc":"Established classes of Credential Types which share common system\nfunctionality.\n\n  * `:credential_types_password` - used to identify Credential Types which\n  use passwords as their credential.\n\n\n  * `:credential_types_mfa_totp` - associates a Credential Type with Time\n  based One Time Password Multi-Factor Authentication functionality.\n\n\n  * `:credential_types_mfa_totp_recovery_code` - designates a Credential Type\n  as representing an MFA/TOTP recovery code.\n\n\n  * `:credential_types_mfa_known_host` - designates a Credential Type\n  as representing a known MFA/TOTP host allowed to bypass interactive MFA\n  secondary authentication.\n\n\n  * `:credential_types_token_api` - indicates that the Credential Type makes\n  use of API Token credential functionality.\n\n\n  * `:credential_types_token_validation` - indicates that the Credential Type\n  facilitates the validation of certain types of Identity records.\n\n\n  * `:credential_types_token_recovery` - associates Credential Types which\n  facilitate recovery of other Credential Types with the necessary recovery\n  functionality.","ref":"MscmpSystAuthn.Types.html#t:credential_type_functional_types/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_type_id/0","doc":"The Credential Type record ID database type.","ref":"MscmpSystAuthn.Types.html#t:credential_type_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_type_name/0","doc":"Defines the expected type of the Credential Type record Internal Name.","ref":"MscmpSystAuthn.Types.html#t:credential_type_name/0"},{"type":"type","title":"MscmpSystAuthn.Types.credential_types/0","doc":"The Credential Types known by the system.","ref":"MscmpSystAuthn.Types.html#t:credential_types/0"},{"type":"type","title":"MscmpSystAuthn.Types.disallowed_host_id/0","doc":"The Disallowed Host record ID database type.","ref":"MscmpSystAuthn.Types.html#t:disallowed_host_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.global_network_rule_params/0","doc":"Defines the available parameters for use in creating or updating Global\nNetwork Rule records.","ref":"MscmpSystAuthn.Types.html#t:global_network_rule_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.global_network_rule_params/0","doc":"* `ordering` - the order in which the new record should apply relative to\n  other Global Network Rule records.  lower `ordering` values take precedence\n  over higher `ordering` values.  If the `ordering` value in the parameters\n  matches the `ordering` value of an existing Global Network Rule record, the\n  inserted record will be treated as an \"insert before\" record, with the\n  existing records being reordered to be after the new record, recursively.\n  This attribute is required in record creation scenarios.\n\n  * `functional_type` - defines what action the rule specifies once matched.\n  The possible functional types are `:allow` which means the rule intends to\n  explicitly allow the associated IP Address(es) to attempt authentication\n  or `:deny` which explicitly prevents the IP Address(es) from attempting\n  an authorization.  This attribute is required in record creation scenarios.\n\n  * `ip_host_or_network` - a single Host IP Address or a single CIDR network\n  used in matching user Host IP Addresses to rules.  Note that if this value\n  is provided that the `ip_host_range_lower` and `ip_host_range_upper`\n  values must be nil or not provided.\n\n  * `ip_host_range_lower` - defines the lower bound of a simple range of IP\n  Addresses, inclusive, to which rule should apply.  When this value is\n  provided the `ip_host_range_upper` attribute must also be provided and the\n  `ip_host_or_network` attribute value must be nil or not provided.\n\n  * `ip_host_range_upper` - defines the upper bound of a simple range of IP\n  Addresses, inclusive, to which rule should apply.  When this value is\n  provided the `ip_host_range_lower` attribute must also be provided and the\n  `ip_host_or_network` attribute value must be nil or not provided.\n\nNote that either the `ip_host_or_network` attribute or the\n`ip_host_range_lower` and `ip_host_range_upper` are required and exclusive.","ref":"MscmpSystAuthn.Types.html#t:global_network_rule_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.host_address/0","doc":"Defines the data type and structure of Host IP Addresses.","ref":"MscmpSystAuthn.Types.html#t:host_address/0"},{"type":"type","title":"MscmpSystAuthn.Types.identity_id/0","doc":"Establishes the data type of the Identity record ID.","ref":"MscmpSystAuthn.Types.html#t:identity_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.identity_params/0","doc":"Defines a map of attributes for use in Identity record Changeset processing.","ref":"MscmpSystAuthn.Types.html#t:identity_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.identity_params/0","doc":"* `access_account_id` - the record ID of the Access Account for which the\n  record is being defined.\n\n  * `access_account_name` - an alternative means of selecting the Access\n  Account using its Internal Name value.\n\n  * `identity_type_id` - the record ID of the Identity Type of the Identity.\n\n  * `identity_type_name` - an alternative means of selecting the Identity Type\n  of the record using the Identity Type Internal Name value.\n\n  * `account_identifier` - the identifier presented by the Access Account\n  holder to identify their Access Account.  For example, for Email Identities\n  this value would be the Access Account holder's email address.\n\n  * `validated` - this value indicates both that the Identity record\n  is valid for use in identification requests and the timestamp at which that\n  valid condition came into effect.  When `nil`, the Identity record is not\n  valid to use for identifying Access Accounts.\n\n  * `validates_identity_id` - if the Identity record is of type\n  `identity_types_sysdef_validation` this value will reference the record\n  which is to be validated on confirmation of the validation request.  In all\n  other instances the value should be `nil`.\n\n  * `validation_requested` - if the Identity record is of type\n  `identity_types_sysdef_validation` this value will record the timestamp when\n  the validation was requested.\n\n  * `identity_expires` - the optional timestamp of when the Identity record\n  expires and after which the Identity record may not be used for\n  identification purposes.  If this value is `nil`, the Identity record may be\n  used indefinitely.\n\n  * `external_name` - certain Identities, such as API Token Identities, allow\n  the Access Account holder to provide names with which they will more easily\n  recognize in maintenance tasks.  This value allows for the establishment of\n  a user defined name for the Identity record.  Note that this value does not\n  need to be unique on any basis and therefore is unsuitable for use in\n  looking up Identity records.","ref":"MscmpSystAuthn.Types.html#t:identity_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.identity_type_functional_types/0","doc":"Identifies the categorizations of Identity Types which the system will treat\nwith different functional responses.\n\n  * `:identity_types_email` - indicates that the Identity Type represents\n  Identities which can be used in email address contexts.\n\n  * `:identity_types_account` - designates Identity Types which are used for\n  simple identification and are not typically used for Access Account\n  identification for authentication purposes.\n\n  * `:identity_types_api` - associates API Token Identity functionality with\n  Identity Types.\n\n  * `:identity_types_validation` - indicates that an Identity Type designates\n  Identities used to validate other Identity Types, such as\n  `:identity_types_email` Identity Types.\n\n  * `:identity_types_password_recovery` - designates Identity Types use in\n  Password Credential recovery.","ref":"MscmpSystAuthn.Types.html#t:identity_type_functional_types/0"},{"type":"type","title":"MscmpSystAuthn.Types.identity_type_id/0","doc":"Defines the Identity Type record ID data type.","ref":"MscmpSystAuthn.Types.html#t:identity_type_id/0"},{"type":"type","title":"MscmpSystAuthn.Types.identity_type_name/0","doc":"Defines the expected data type of the Identity Type record Internal Name\nvalue.","ref":"MscmpSystAuthn.Types.html#t:identity_type_name/0"},{"type":"type","title":"MscmpSystAuthn.Types.identity_types/0","doc":"Defines the list of Identity Types known to the system.","ref":"MscmpSystAuthn.Types.html#t:identity_types/0"},{"type":"type","title":"MscmpSystAuthn.Types.instance_network_rule_params/0","doc":"Defines the available parameters for use in creating or updating Instance\nNetwork Rule records.","ref":"MscmpSystAuthn.Types.html#t:instance_network_rule_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.instance_network_rule_params/0","doc":"* `instance_id` - the value of this attribute identifies the Instance for\n  which the Network Rule is being defined.  This value doesn't have to be set\n  explicitly when using the `MscmpSystAuthn` module API as the API\n  calls set this value based on the function `instance_id` parameters they\n  require.\n\n  * `instance_name` - an alternate means of identifying the Instance instead\n  of the `instance_id` attribute.   Currently there is no API which makes use\n  of this value.\n\n  * `ordering` - the order in which the new record should apply relative to\n  other Instance Network Rule records.  lower `ordering` values take\n  precedence over higher `ordering` values.  If the `ordering` value in the\n  parameters matches the `ordering` value of an existing Instance Network Rule\n  record, the inserted record will be treated as an \"insert before\" record,\n  with the existing records being reordered to be after the new record,\n  recursively. This attribute is required in record creation scenarios.\n\n  * `functional_type` - defines what action the rule specifies once matched.\n  The possible functional types are `:allow` which means the rule intends to\n  explicitly allow the associated IP Address(es) to attempt authentication\n  or `:deny` which explicitly prevents the IP Address(es) from attempting\n  an authorization.  This attribute is required in record creation scenarios.\n\n  * `ip_host_or_network` - a single Host IP Address or a single CIDR network\n  used in matching user Host IP Addresses to rules.  Note that if this value\n  is provided that the `ip_host_range_lower` and `ip_host_range_upper`\n  values must be nil or not provided.\n\n  * `ip_host_range_lower` - defines the lower bound of a simple range of IP\n  Addresses, inclusive, to which rule should apply.  When this value is\n  provided the `ip_host_range_upper` attribute must also be provided and the\n  `ip_host_or_network` attribute value must be nil or not provided.\n\n  * `ip_host_range_upper` - defines the upper bound of a simple range of IP\n  Addresses, inclusive, to which rule should apply.  When this value is\n  provided the `ip_host_range_lower` attribute must also be provided and the\n  `ip_host_or_network` attribute value must be nil or not provided.\n\nNote that either the `ip_host_or_network` attribute or the\n`ip_host_range_lower` and `ip_host_range_upper` are required and exclusive.","ref":"MscmpSystAuthn.Types.html#t:instance_network_rule_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.network_rule_functional_type/0","doc":"Establishes the two basic operations that Network Rule may define.\n\n  * `:allow` - this essentially whitelists any host IP address(es) or networks\n  defined by the Network Rule, allowing an authentication attempt.\n\n  * `:deny` - this value denies any specified host IP address(es) or networks\n  from attempting an authentication.","ref":"MscmpSystAuthn.Types.html#t:network_rule_functional_type/0"},{"type":"type","title":"MscmpSystAuthn.Types.network_rule_precedence/0","doc":"The known precedence classes of Network Rule definitions.\n\nNetwork Rules are applied in order of their Precedence Class and then of their\nordering value withing the Precedence Class; first matching found becomes the\nApplied Network Rule.\n\nEach Precedence Class is a group of rules defined within the same scope of\napplicability which can range from being globally applicable to applying only\nto a single Instance.  The known Precedence Classes in order of application\nare:\n\n  * `:disallowed` - disallowed hosts are individual host IP addresses which\n  are denied access on a global basis, effectively banning their use with the\n  system.  Defined by `Msdata.SystDisallowedHosts`.\n\n  * `:global` - Network Rules which are defined to apply global without regard\n  to Owner or Instance.  Such rules may explicitly whitelist or blacklist\n  hosts.  Defined by `Msdata.SystGlobalNetworkRules`.\n\n  * `:instance` - Network Rules which apply to only a specific Application\n  Instance.  Defined by `Msdata.SystInstanceNetworkRules`.\n\n  * `:instance_owner` - Network Rules which apply to all Application Instances\n  belonging to a specific Owner.  Defined by\n  `Msdata.SystOwnerNetworkRules`.\n\n  * `:implied` - when no explicitly defined applicable Disallowed Host or\n  Network Rule records can be found, the system will use an implicit globally\n  applied rule to Apply to the authentication attempt.  The `:implied` rule\n  allows any host to attempt authentication.","ref":"MscmpSystAuthn.Types.html#t:network_rule_precedence/0"},{"type":"type","title":"MscmpSystAuthn.Types.owner_network_rule_params/0","doc":"Defines the available parameters for use in creating or updating Owner\nNetwork Rule records.","ref":"MscmpSystAuthn.Types.html#t:owner_network_rule_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.owner_network_rule_params/0","doc":"* `owner_id` - the value of this attribute identifies the Owner for which\n  the Network Rule is being defined.  This value doesn't have to be set\n  explicitly when using the `MscmpSystAuthn` module API as the API\n  calls set this value based on the function `owner_id` parameters they\n  require.\n\n  * `owner_name` - an alternate means of identifying the Owner instead of the\n  `owner_id` attribute.   Currently there is no API which makes use of this\n  value.\n\n  * `ordering` - the order in which the new record should apply relative to\n  other Owner Network Rule records.  lower `ordering` values take precedence\n  over higher `ordering` values.  If the `ordering` value in the parameters\n  matches the `ordering` value of an existing Owner Network Rule record, the\n  inserted record will be treated as an \"insert before\" record, with the\n  existing records being reordered to be after the new record, recursively.\n  This attribute is required in record creation scenarios.\n\n  * `functional_type` - defines what action the rule specifies once matched.\n  The possible functional types are `:allow` which means the rule intends to\n  explicitly allow the associated IP Address(es) to attempt authentication\n  or `:deny` which explicitly prevents the IP Address(es) from attempting\n  an authorization.  This attribute is required in record creation scenarios.\n\n  * `ip_host_or_network` - a single Host IP Address or a single CIDR network\n  used in matching user Host IP Addresses to rules.  Note that if this value\n  is provided that the `ip_host_range_lower` and `ip_host_range_upper`\n  values must be nil or not provided.\n\n  * `ip_host_range_lower` - defines the lower bound of a simple range of IP\n  Addresses, inclusive, to which rule should apply.  When this value is\n  provided the `ip_host_range_upper` attribute must also be provided and the\n  `ip_host_or_network` attribute value must be nil or not provided.\n\n  * `ip_host_range_upper` - defines the upper bound of a simple range of IP\n  Addresses, inclusive, to which rule should apply.  When this value is\n  provided the `ip_host_range_lower` attribute must also be provided and the\n  `ip_host_or_network` attribute value must be nil or not provided.\n\nNote that either the `ip_host_or_network` attribute or the\n`ip_host_range_lower` and `ip_host_range_upper` are required and exclusive.","ref":"MscmpSystAuthn.Types.html#t:owner_network_rule_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.password_rule_params/0","doc":"A map of attributes used to create or update Global and Owner Password Rules.\n\nNote that only those attributes which are necessary to represent the desired\nrules are required to appear in the parameter submission.  All attributes not\nprovided will take on a default value which assumes the specific rule has no\neffect.","ref":"MscmpSystAuthn.Types.html#t:password_rule_params/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.password_rule_params/0","doc":"* `password_length` - A value of type `t:MscmpSystDb.DbTypes.IntegerRange.t/0`\n  describing the password length in terms of the number of characters.  The\n  lower bound defines the minimum number of characters a password may have and\n  the upper bound is the most characters that can be added to password.\n\n  * `max_age` - A value of type `t:MscmpSystDb.DbTypes.Interval.t/0`\n  which, when added to the `last_updated` value of the Password Credential\n  record, sets the expiration date of the password.  After the password's age\n  has exceeded it's max age, the password must be reset prior to finalizing\n  authentication. A zero interval value here means that password ages are not\n  checked.  The zero interval is the default setting.\n\n  * `require_upper_case` - A positive integer which sets the minimum number\n  of upper case characters that a valid password must posses.  A setting of\n  zero here disables the requirement.\n\n  * `require_lower_case` - A positive integer which sets the minimum number\n  of lower case characters that a valid password must posses.  A setting of\n  zero here disables the requirement.\n\n  * `require_numbers` - A positive integer which sets the minimum number\n  of number characters that a valid password must posses.  A setting of zero\n  here disables the requirement.\n\n  * `require_symbols` - A positive integer which sets the minimum number\n  of symbol characters that a valid password must posses.  A setting of zero\n  here disables the requirement.\n\n  * `disallow_recently_used` - A positive integer representing the number of\n  most recently used passwords to track and prohibit from re-use.  A zero\n  setting for this attribute indicates that recently used passwords should not\n  be tracked or prohibited.\n\n  * `disallow_compromised` - A boolean value which, if true, indicates that\n  any new password requested by a user be first checked against the Disallowed\n  Passwords list and, if found on the list, rejected for use.  When set true,\n  the system will also check the password against the Disallowed Password list\n  on authentication; if found on the list at authentication time, the user\n  will be required to reset their password to something value not otherwise\n  disallowed.  If set false the Disallowed Password list is not checked.\n\n  * `require_mfa` - A boolean value which indicates if multi-factor\n  authentication is required for password authentication.  If true MFA is\n  required, otherwise MFA is per user preference.  MFA may not be completely\n  disabled.\n\n  * `allowed_mfa_types` - A list of strings identifying the allowed second\n  factor methods. Currently only MFA type `credential_types_secondary_totp` is\n  available.","ref":"MscmpSystAuthn.Types.html#t:password_rule_params/0-attributes"},{"type":"type","title":"MscmpSystAuthn.Types.password_rule_violations/0","doc":"Defines the known Password Rule violations.\n\nVarious functions evaluation a candidate password against the set of\napplicable Password Rules and return lists of violations for resolution.  The\npossible violations are:\n\n  * `:password_rule_length_min` - the candidate password violates the minimum\n  password length rule.  The accompanying value is the required number of\n  characters the password must contain.\n\n  * `:password_rule_length_max` -  the candidate password violates the maximum\n  password length rule.  The accompanying value is the maximum permitted\n  number of characters that the password may contain.\n\n  * `:password_rule_required_upper` - the candidate password violates the\n  minimum upper case characters rule.  The accompanying value is the required\n  number of upper case characters.\n\n  * `:password_rule_required_lower` - the candidate password violates the\n  minimum lower case characters rule.  The accompanying value is the required\n  number of lower case characters.\n\n  * `:password_rule_required_numbers` - the candidate password violates the\n  minimum number characters rule.  The accompanying value is the required\n  number of number characters.\n\n  * `:password_rule_required_symbols` - the candidate password violates the\n  minimum symbol characters rule.  The accompanying value is the required\n  number of symbol characters.\n\n  * `:password_rule_disallowed_password` - the candidate password is known\n  password which is disallowed from use in the system.  A new allowed password\n  must be selected.\n\n  * `:password_rule_recent_password` - the candidate password has been too\n  recently used for this Access Account and another not recently used password\n  must be selected.","ref":"MscmpSystAuthn.Types.html#t:password_rule_violations/0"},{"type":"module","title":"MscmpSystAuthn.Types.AppliedNetworkRule","doc":"Represents the return value of functions which evaluate whether or not a\nspecific originating host IP address is allowed to attempt an authentication.\n\nWhen an authentication is attempted, a number of different rules and data\nsources may determine what kind of connection is allowed based on the host IP\naddress from which the attempt appears to be originating and the destination\nInstance for which the authentication is being processed.  To normalize the\nreturn from the evaluation of these different network based evaluations we\ndefine a simplified `t:applied_network_rule/0` value to represent the\nactionable data of the evaluation.","ref":"MscmpSystAuthn.Types.AppliedNetworkRule.html"},{"type":"type","title":"MscmpSystAuthn.Types.AppliedNetworkRule.t/0","doc":"Represents the return value of functions which evaluate whether or not a\nspecific originating host IP address is allowed to attempt an authentication.","ref":"MscmpSystAuthn.Types.AppliedNetworkRule.html#t:t/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.AppliedNetworkRule.t/0","doc":"* `precedence` - this will indicate the precedence of the applied Network\n  Rule.  This value can aid in identifying the origin of a given applied\n  allowance or denial.\n\n  * `network_rule_id` - this is the record ID of the rule which was evaluated\n  to govern the authentication attempt.  Which specific relation the ID refers\n  to will depend on the specific precedence of the rule applied.  This value\n  may be `nil` if the implied default Network Rule is applied since, by\n  definition, this means no other explicitly defined Network Rule was found.\n\n  * `functional_type` - May be either `:allow` or `:deny`.  `:allow` means\n  that the Network Rule evaluation allows the host IP address to attempt\n  authentication.  `:deny` indicates that the host IP address may not attempt\n  an authentication.\n\nSee `MscmpSystAuthn.Types.AppliedNetworkRule` for more.","ref":"MscmpSystAuthn.Types.AppliedNetworkRule.html#t:t/0-attributes"},{"type":"module","title":"MscmpSystAuthn.Types.AuthenticationState","doc":"The return type describing the result of authentication attempts via the\nauthentication functions.\n\nWhen a user attempts to validate an Access Account, the result is returned as\na value of this type. This includes whether or not an authentication attempt\nwas successful or rejected.\n\nA result indicating that the status is pending may also be returned from an\nattempt if the authentication requires intervention to complete successfully.","ref":"MscmpSystAuthn.Types.AuthenticationState.html"},{"type":"type","title":"MscmpSystAuthn.Types.AuthenticationState.t/0","doc":"The return type describing the result of authentication attempts via the\nauthentication functions.","ref":"MscmpSystAuthn.Types.AuthenticationState.html#t:t/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.AuthenticationState.t/0","doc":"* `status` - the result of the authentication attempt.\n\n  * `deadline` - the date/time by which the authentication attempt must be\n  resolved by before being considered expired.  Since the authentication\n  process may be interrupted and resumed, it requires that we establish some\n  limit by which the process must be completed.  By default this value will be\n  5 minutes after the time the authentication process starts.\n\n  * `access_account_id` - the Access Account record ID if the authentication\n  attempt has successfully completed the identification operation.\n\n  * `instance_id` - the Instance ID that the Access Account holder is\n  attempting to authenticate to.  For certain authentication types, this value\n  may initially be `nil` for later resolution to a specific instance.  In some\n  special cases, authentication may not be contextually bound to a specific\n  Instance.  In this cases, the special value `:bypass` can be used it\n  indicate that the Instance is not relevant for the authentication.\n\n  * `identity_type_id` - the record ID referencing the Identity Type used to\n  identify the Access Account.\n\n  * `host_address` -  the apparent Host IP Address from which the\n  authentication attempt originated.\n\n  * `applied_network_rule` - the Network Rule that was applied during the\n  authentication attempt.  This value may be `nil` if the evaluation of the\n  Network Rules has not yet made.\n\n  * `pending_operations` - the ordered list of remaining authentication\n  operations which must complete successfully prior to the authentication\n  being successfully completed.\n\n  * `identifier` - the user supplied account identifier used to identify the\n  Access Account.\n\n  * `plaintext_credential` - the unencrypted, user supplied credential to\n  test during the authentication process.  This value will be made `nil` as\n  soon as it has been tested or is created `nil` for the Account Code\n  Authenticator which isn't a true authentication method (it's just a lookup).\n\n  * `owning_owner_id` - an Owner record ID for the Owner which manages the\n  authenticating Access Account in cases where it's an Owned Access Account.\n\n  * `identity_id` - the record ID of the Identity record located to identify\n  the Access Account.\n\n  * `identity` - the Identity record data struct.  This should be the same\n  record as that identified by the `identity_id` attribute\n\n  * `reset_reason` - in cases where a pending operation of\n  `:require_credential_reset` is added to the authentication process, this\n  value indicates the reason for the reset.  Available values are defined in\n  `t:credential_reset_reason/0`.\n\nSee `MscmpSystAuthn.Types.AuthenticationState` for more.","ref":"MscmpSystAuthn.Types.AuthenticationState.html#t:t/0-attributes"},{"type":"module","title":"MscmpSystAuthn.Types.AuthenticatorResult","doc":"Represents the returned data values that were generated by the Authenticator\ncreation process.\n\nThe included values and attributes will vary somewhat from Authenticator type\nto Authenticator type, but they will all follow this basic form.\n\n> #","ref":"MscmpSystAuthn.Types.AuthenticatorResult.html"},{"type":"module","title":"Important! {: .warning} - MscmpSystAuthn.Types.AuthenticatorResult","doc":">\n> Some Authenticator types, such as Validation and Recovery, provide\n> values using this struct which are both security sensitive and not\n> recoverable once discarded.","ref":"MscmpSystAuthn.Types.AuthenticatorResult.html#module-important-warning"},{"type":"type","title":"MscmpSystAuthn.Types.AuthenticatorResult.t/0","doc":"Represents the returned data values that were generated by the Authenticator\ncreation process.","ref":"MscmpSystAuthn.Types.AuthenticatorResult.html#t:t/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.AuthenticatorResult.t/0","doc":"* `access_account_id` - the Access Account record ID for which the\n  Authenticator has been created.\n\n  * `account_identifier` - the Access Account Identifier for use in\n  identifying the Access Account in the authentication process.  Depending on\n  the Authenticator type, this could be a restatement of what the user\n  provided, such as an Email address, or may be system generated such as the\n  identifier for user with an API Token.\n\n  * `credential` - the plaintext Credential created for the Authenticator.\n  This attribute is only returned in cases where the typical Authenticator\n  creation flow includes the system randomly generating the Credential.  For\n  example, an API Token Credential is automatically created by the system and\n  the Credential must be communicated to the user once created.  Note that\n  even in these cases the only time the Credential is available for disclosure\n  to the user is immediately after the Authenticator creation via this value.\n  Once the return result is discarded the Credential is unrecoverable.\n\n  * `validation_identifier` - when creating an Email/Password Authenticator,\n  the default options mandate that validating the Email Identity is required.\n  Assuming the default is not overridden, the system generated Identifier for\n  the user to use to validate the Email Identity is provided via this\n  attribute.  If validation is not required this attribute will not be present\n  in the return value of the Authenticator creation call.\n\n  * `validation_credential` - the (usually) system generated Credential in\n  plaintext which compliments the `validation_identifier` value.  This\n  attribute is either included or excluded on the same terms as the\n  `validation_identifier`.  Note that the return of this value after\n  the creation of an Email/Password Authenticator is the only time that this\n  value is available in plaintext; after this point the plaintext is not\n  retrievable.\n\nSee `MscmpSystAuthn.Types.AuthenticatorResult` for more.","ref":"MscmpSystAuthn.Types.AuthenticatorResult.html#t:t/0-attributes"},{"type":"module","title":"MscmpSystAuthn.Types.PasswordRules","doc":"Defines a generic Password Rule record allowing Password Rules originating\nfrom different database sources a common representation.\n\nPassword Rules are defined in two different database tables,\n`Msdata.SystGlobalPasswordRules` and\n`Msdata.SystOwnerPasswordRules`.  This type defines a\ncommon representation of Password Rule data for those parts of the system that\napply Password Rules after the applicable Password Rules have been resolved.","ref":"MscmpSystAuthn.Types.PasswordRules.html"},{"type":"type","title":"MscmpSystAuthn.Types.PasswordRules.t/0","doc":"Defines a generic Password Rule record allowing Password Rules originating\nfrom different database sources a common representation.","ref":"MscmpSystAuthn.Types.PasswordRules.html#t:t/0"},{"type":"type","title":"Attributes - MscmpSystAuthn.Types.PasswordRules.t/0","doc":"* `access_account_id` - the Access Account for which the effective Password\n  Rules has been resolved.\n\n  * `owner_id` - the Owner record ID of the Owner which owns the Access\n  Account.  The Access Account's Owner may have established Password Rules\n  which would apply to the Access Account.  A value here does not mean that\n  the Owner's rules necessarily are part of the resolved Password Rule, just\n  that they would have been considered.\n\n  * `password_length` - the resolved value of type\n  `t:MscmpSystDb.DbTypes.IntegerRange.t/0` describing the password\n  length in terms of the number of characters.  The lower bound defines the\n  minimum number of characters a password may have and the upper bound is the\n  most characters that can be added to password.\n\n  * `max_age` - the resolved value of type `t:MscmpSystDb.DbTypes.Interval.t/0`\n  which, when added to the `last_updated` value of the Password Credential\n  record, sets the expiration date of the password.  After the password's age\n  has exceeded it's max age, the password must be reset prior to finalizing\n  authentication. A zero interval value here means that password ages are not\n  checked.  The zero interval is the default setting.\n\n  * `require_upper_case` - the resolved minimum number of upper case\n  characters that a valid password must posses.  A setting of zero here\n  disables the requirement.\n\n  * `require_lower_case` - the resolved minimum number of lower case\n  characters that a valid password must posses.  A setting of zero here\n  disables the requirement.\n\n  * `require_numbers` - the resolved minimum number of number characters that\n  a valid password must posses.  A setting of zero here disables the\n  requirement.\n\n  * `require_symbols` - the resolved minimum number of symbol characters that\n  a valid password must posses.  A setting of zero here disables the\n  requirement.\n\n  * `disallow_recently_used` - A positive integer representing the number of\n  most recently used passwords to track and prohibit from re-use.  A zero\n  setting for this attribute indicates that recently used passwords should not\n  be tracked or prohibited.\n\n  * `disallow_compromised` - A boolean value which, if true, indicates that\n  any new password requested by a user be first checked against the Disallowed\n  Passwords list and, if found on the list, rejected for use.  When set true,\n  the system will also check the password against the Disallowed Password list\n  on authentication; if found on the list at authentication time, the user\n  will be required to reset their password to something value not otherwise\n  disallowed.  If set false the Disallowed Password list is not checked.\n\n  * `require_mfa` - A boolean value which indicates if multi-factor\n  authentication is required for password authentication.  If true MFA is\n  required, otherwise MFA is per user preference.  MFA may not be completely\n  disabled.\n\n  * `allowed_mfa_types` - A list of strings identifying the allowed second\n  factor methods. Currently only MFA type `credential_types_secondary_totp` is\n  available.\n\nSee `MscmpSystAuthn.Types.AuthenticationState` for more.","ref":"MscmpSystAuthn.Types.PasswordRules.html#t:t/0-attributes"}],"content_type":"text/markdown"}