searchData={"items":[{"type":"module","title":"DevSupport","doc":"","ref":"DevSupport.html"},{"type":"function","title":"DevSupport.start_dev_environment/1","doc":"","ref":"DevSupport.html#start_dev_environment/1"},{"type":"function","title":"DevSupport.stop_dev_environment/0","doc":"","ref":"DevSupport.html#stop_dev_environment/0"},{"type":"module","title":"MscmpSystHierarchy","doc":"API providing a baseline methodology for defining Hierarchies and validating\nthat implementations of those Hierarchies are valid.\n\nThe Hierarchy features supported by this Component are:\n\n  * Providing a Hierarchy definition with which implementations can be\n  validated.\n\n  * Support for optionally validated Hierarchies (\"structured\" vs.\n  \"unstructured\").\n\n  * Support of optional Hierarchy levels.\n\n  * Specification of which Hierarchy levels may be associated with \"Leaf Nodes\";\n  for example a Hierarchy defining an application menu structure may allow for\n  levels which only define menu item groupings or may be associated directly\n  with actionable application menu items where the menu items are \"Leaf Nodes\".\n\n  * Protection of in-use Hierarchy definitions to ensure Hierarchy\n  implementation operational consistency.\n\n>##","ref":"MscmpSystHierarchy.html"},{"type":"module","title":"Important Note {: .warning} - MscmpSystHierarchy","doc":">\n> While this Component makes certain guarantees about ensuring valid and\n> consistent Hierarchy configurations, full consistency depends on Hierarchy\n> implementing Components honoring the MscmpSystHierarchy guarantees.  To point,\n> Hierarchy implementations must implement database foreign keys to the\n> Hierarchy defining tables and ensures their own data structures are able to be\n> validated against the defined Hierarchies.","ref":"MscmpSystHierarchy.html#module-important-note-warning"},{"type":"module","title":"Concepts - MscmpSystHierarchy","doc":"There are a handful of conceptual ideas that you should be familiar with prior\nto working with this Component or one of the Hierarchy implementing Components.\n\n\n##","ref":"MscmpSystHierarchy.html#module-concepts"},{"type":"module","title":"Hierarchy - MscmpSystHierarchy","doc":"There are two different, but related, meanings assigned to the term \"Hierarchy\"\nin this Component.\n\nIn the first instance a Hierarchy is a configuration which establishes a pre-\ndefined structure for data which can be represented in a tree-like structure.\nIn this sense of the word we mean the totality of the records which define a\ndistinct Hierarchy.  This is the more generic and conceptual sense of the word\nand it will be the intended meaning in most contexts.\n\nThe second meaning of Hierarchy is a more technically focused term referring\nspecifically to the Hierarchy \"header record\" as opposed to the Hierarchy Item\nrecords which are the \"detail records\" defining the levels of the Hierarchy.\nThis second meaning will be meant more often when dealing with database and\nspecific technical related concerns, including the specific configuration\noptions which define the Hierarchy as a whole.\n\nHierarchies may be \"structured\" or \"unstructured\".  Structured Hierarchies\ndefine specific levels of hierarchy which are required to some degree of\nHierarchy implementing Component data.  Unstructured Hierarchies aren't really\nHierarchies at all, but allow implementing Components to optionally allow both\nstructured and unstructured data without forcing special technical\naccommodations for the unstructured data.\n\n##","ref":"MscmpSystHierarchy.html#module-hierarchy"},{"type":"module","title":"Hierarchy Types - MscmpSystHierarchy","doc":"Hierarchies are assigned to a specific Hierarchy Type.  The Hierarchy Type\nestablishes the area of system functionality to which the Hierarchy sensibly\napplies.  For example, a Hierarchy of \"Type Menu\" may define and be sensible to\nuse in with application functions that define the application's user interface\nmenus whereas a Hierarchy of \"Type Product Category\" would best be applied to\nHierarchies which define product categorization structures.\n\n##","ref":"MscmpSystHierarchy.html#module-hierarchy-types"},{"type":"module","title":"Hierarchy Items - MscmpSystHierarchy","doc":"As mentioned above, Hierarchy Items specify the behaviors of the individual\nlevels of hierarchy contained by the Hierarchy.  This includes the configuration\npoints which are applicable to individual levels of the Hierarchy.  Hierarchy\nItem records are children of the Hierarchy records.\n\nHierarchy Items are required to be defined for all structured Hierarchies.\nConversely, Hierarchy Items are prohibited in the context of unstructured\nHierarchies.\n\n##","ref":"MscmpSystHierarchy.html#module-hierarchy-items"},{"type":"module","title":"Hierarchy Implementing Components - MscmpSystHierarchy","doc":"As mentioned above, `MscmpSystHierarchy` doesn't store or define the actual\nfinal data to which the Hierarchy is applied.  This is the responsibility of\nother, specialized Components which conform to `MscmpSystHierarchy`\nimplementation expectations.","ref":"MscmpSystHierarchy.html#module-hierarchy-implementing-components"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_id_by_name/1","doc":"Returns the record ID of the Hierarchy as identified by its Internal Name.\n\nOn successful execution the Hierarchy record ID value is returned via a\nsuccess tuple in the form `{:ok,  }`.  If an error is encountered\nor the requested record does not exist an error tuple in the form\n`{:error, %MscmpSystError{}}` is returned instead.","ref":"MscmpSystHierarchy.html#get_hierarchy_id_by_name/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_id_by_name/1","doc":"* `hierarchy_name` - the Internal Name of the desired Hierarchy record.","ref":"MscmpSystHierarchy.html#get_hierarchy_id_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_id_by_name/1","doc":"Normal call successfully returning a Hierarchy record ID value.\n\n    iex> {:ok, hierarchy_id} =\n    ...>   MscmpSystHierarchy.get_hierarchy_id_by_name(\"hierarchy_example\")\n    iex> is_binary(hierarchy_id)\n    true\n\nA failing call due to requesting a non-existent Hierarchy record.\n\n    iex> {:error, %MscmpSystError{}} =\n    ...>   MscmpSystHierarchy.get_hierarchy_id_by_name(\"nonexistent_hierarchy\")","ref":"MscmpSystHierarchy.html#get_hierarchy_id_by_name/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_id_by_name!/1","doc":"Returns the record ID of the Hierarchy as identified by its Internal Name,\nraising exceptions on error.\n\nIf the Hierarchy is not found or if some other error is encountered an\nexception is raised.","ref":"MscmpSystHierarchy.html#get_hierarchy_id_by_name!/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_id_by_name!/1","doc":"* `hierarchy_name` - the Internal Name of the desired Hierarchy record.","ref":"MscmpSystHierarchy.html#get_hierarchy_id_by_name!/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_id_by_name!/1","doc":"Normal call successfully returning a Hierarchy record ID value.\n\n    iex> hierarchy_id =\n    ...>   MscmpSystHierarchy.get_hierarchy_id_by_name!(\"hierarchy_example\")\n    iex> is_binary(hierarchy_id)\n    true","ref":"MscmpSystHierarchy.html#get_hierarchy_id_by_name!/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_state_by_name/1","doc":"Returns the Hierarchy State record for the given Hierarchy State Internal\nName.\n\nIf the requested Hierarchy State record does not exist `nil` is returned\ninstead.  Any errors cause an exception to be raised.\n\nHierarchy States are currently implemented using the `MscmpSystEnums`\nComponent.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_by_name/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_state_by_name/1","doc":"* `state_name` - the Internal Name of the desired Hierarchy State to\n  retrieve.  This parameter is required.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_state_by_name/1","doc":"Requesting an existing Hierarchy State:\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MscmpSystHierarchy.get_hierarchy_state_by_name(\"hierarchy_states_sysdef_active\")\n\nRequesting a non-existent Hierarchy State:\n\n    iex> MscmpSystHierarchy.get_hierarchy_state_by_name(\"nonexistent_state\")\n    nil","ref":"MscmpSystHierarchy.html#get_hierarchy_state_by_name/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_state_default/1","doc":"Returns the default Hierarchy State record.\n\nOptionally, this function can also return the default Hierarchy State for a\nspecified Hierarchy State Functional Type.\n\nAny errors encountered will cause an exception to be raised.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_default/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_state_default/1","doc":"* `functional_type` - an optional parameter specifying which Hierarchy State\n  Functional Type's default record should be returned.  If this parameter is\n  `nil` (the parameter default), the default Hierarchy State overall will be\n  returned.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_default/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_state_default/1","doc":"Return the overall default Hierarchy State.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"hierarchy_states_sysdef_inactive\"} =\n    ...>   MscmpSystHierarchy.get_hierarchy_state_default()\n\nReturn the default Hierarchy State for the \"active\" Functional Type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"hierarchy_states_sysdef_active\"} =\n    ...>   MscmpSystHierarchy.get_hierarchy_state_default(:hierarchy_states_active)","ref":"MscmpSystHierarchy.html#get_hierarchy_state_default/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_state_default_id/1","doc":"Returns the default Hierarchy State record ID value.\n\nOptionally, this function can also return the ID value of the default\nHierarchy State for a specified Hierarchy State Functional Type.\n\nAny errors encountered will cause an exception to be raised.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_default_id/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_state_default_id/1","doc":"* `functional_type` - an optional parameter specifying which Hierarchy State\n  Functional Type's default record ID should be returned.  If this parameter\n  is `nil` (the parameter default), the default Hierarchy State overall will\n  be returned.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_default_id/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_state_default_id/1","doc":"Return the overall default Hierarchy State.\n\n    iex> state_id = MscmpSystHierarchy.get_hierarchy_state_default_id()\n    iex> is_binary(state_id)\n    true\n\nReturn the default Hierarchy State for the \"active\" Functional Type.\n\n    iex> state_id = MscmpSystHierarchy.get_hierarchy_state_default_id(:hierarchy_states_active)\n    iex> is_binary(state_id)\n    true","ref":"MscmpSystHierarchy.html#get_hierarchy_state_default_id/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_state_id_by_name/1","doc":"Returns the Hierarchy State ID for the given Hierarchy State Internal Name.\n\nIf the requested Hierarchy State record does not exist `nil` is returned\ninstead.  Any errors cause an exception to be raised.\n\nHierarchy States are currently implemented using the `MscmpSystEnums`\nComponent.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_id_by_name/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_state_id_by_name/1","doc":"* `state_name` - the Internal Name of the desired Hierarchy State ID to\n  retrieve.  This parameter is required.","ref":"MscmpSystHierarchy.html#get_hierarchy_state_id_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_state_id_by_name/1","doc":"Requesting an existing Hierarchy State:\n\n    iex> state_id =\n    ...>   MscmpSystHierarchy.get_hierarchy_state_id_by_name(\"hierarchy_states_sysdef_inactive\")\n    iex> is_binary(state_id)\n\nRequesting a non-existent Hierarchy State:\n\n    iex> MscmpSystHierarchy.get_hierarchy_state_id_by_name(\"nonexistent_state\")\n    nil","ref":"MscmpSystHierarchy.html#get_hierarchy_state_id_by_name/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_type_by_name/1","doc":"Returns the Hierarchy Type record for the given Hierarchy Type Internal Name.\n\nIf the requested Hierarchy Type record does not exist `nil` is returned\ninstead.  Any errors cause an exception to be raised.\n\nHierarchy Types are currently implemented using the `MscmpSystEnums`\nComponent.","ref":"MscmpSystHierarchy.html#get_hierarchy_type_by_name/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_type_by_name/1","doc":"* `type_name` - the Internal Name of the desired Hierarchy Type to retrieve.\n  This parameter is required.","ref":"MscmpSystHierarchy.html#get_hierarchy_type_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_type_by_name/1","doc":"Requesting an existing Hierarchy Type:\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MscmpSystHierarchy.get_hierarchy_type_by_name(\"hierarchy_type_example\")\n\nRequesting a non-existent Hierarchy Type:\n\n    iex> MscmpSystHierarchy.get_hierarchy_type_by_name(\"nonexistent_type\")\n    nil","ref":"MscmpSystHierarchy.html#get_hierarchy_type_by_name/1-examples"},{"type":"function","title":"MscmpSystHierarchy.get_hierarchy_type_id_by_name/1","doc":"Returns the ID value of a Hierarchy Type record as identified by the Hierarchy\nType's Internal Name.\n\nIf the requested Hierarchy Type record does not exist `nil` is returned\ninstead.  Any errors cause an exception to be raised.\n\nHierarchy Types are currently implemented using the `MscmpSystEnums`\nComponent.","ref":"MscmpSystHierarchy.html#get_hierarchy_type_id_by_name/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.get_hierarchy_type_id_by_name/1","doc":"* `type_name` - the Internal Name of the desired Hierarchy Type ID to\n  retrieve.  This parameter is required.","ref":"MscmpSystHierarchy.html#get_hierarchy_type_id_by_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.get_hierarchy_type_id_by_name/1","doc":"Requesting an existing Hierarchy Type:\n\n    iex> id_value =\n    ...>   MscmpSystHierarchy.get_hierarchy_type_id_by_name(\"hierarchy_type_example\")\n    iex> is_binary(id_value)\n    true\n\nRequesting a non-existent Hierarchy Type:\n\n    iex> MscmpSystHierarchy.get_hierarchy_type_id_by_name(\"nonexistent_type\")\n    nil","ref":"MscmpSystHierarchy.html#get_hierarchy_type_id_by_name/1-examples"},{"type":"function","title":"MscmpSystHierarchy.list_hierarchy_types/1","doc":"Lists the available Hierarchy Types, optionally sorted by the predefined sort\norder; doesn't raise exceptions on error.\n\nReturns a list of Hierarchy Type records using a result tuple. If the request\nruns without error, a success tuple in the form of `{:ok,  }` is returned\nwhile an error condition will return an error tuple in the form of\n`{:error,  }`.","ref":"MscmpSystHierarchy.html#list_hierarchy_types/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.list_hierarchy_types/1","doc":"* `opts` - A Keyword List of optional parameters.  The available options\n  are:\n\n    * `sorted` - a boolean value indicating whether or not the list should be\n    sorted according to the predefined `sort_order` values of the individual\n    Hierarchy Type records.  The default value of this option is `true`.","ref":"MscmpSystHierarchy.html#list_hierarchy_types/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.list_hierarchy_types/1","doc":"Retrieving the list of Hierarchy Types using the default options.  Note that\nin the example there is only one available Hierarchy Type defined in the\nsystem.\n\n    iex> {:ok, [%Msdata.SystEnumItems{internal_name: \"hierarchy_type_example\"}]} =\n    ...>   MscmpSystHierarchy.list_hierarchy_types()","ref":"MscmpSystHierarchy.html#list_hierarchy_types/1-examples"},{"type":"function","title":"MscmpSystHierarchy.list_hierarchy_types!/1","doc":"Lists the available Hierarchy Types, optionally sorted by the predefined sort\norder.\n\nReturns a list of Hierarchy Type records.  Raises an exception on errors.","ref":"MscmpSystHierarchy.html#list_hierarchy_types!/1"},{"type":"function","title":"Parameters - MscmpSystHierarchy.list_hierarchy_types!/1","doc":"* `opts` - A Keyword List of optional parameters.  The available options\n  are:\n\n    * `sorted` - a boolean value indicating whether or not the list should be\n    sorted according to the predefined `sort_order` values of the individual\n    Hierarchy Type records.  The default value of this option is `true`.","ref":"MscmpSystHierarchy.html#list_hierarchy_types!/1-parameters"},{"type":"function","title":"Examples - MscmpSystHierarchy.list_hierarchy_types!/1","doc":"Retrieving the list of Hierarchy Types using the default options.  Note that\nin the example there is only one available Hierarchy Type defined in the\nsystem.\n\n    iex> [%Msdata.SystEnumItems{internal_name: \"hierarchy_type_example\"}] =\n    ...>   MscmpSystHierarchy.list_hierarchy_types!()","ref":"MscmpSystHierarchy.html#list_hierarchy_types!/1-examples"},{"type":"module","title":"Msdata.SystHierarchies","doc":"Definition of Hierarchies which allow for both system and user defined\nhierarchies which are associated with specific areas of application\nfunctionality (via Hierarchy Type assignment).\n\nDefined in `MscmpSystHierarchy`.","ref":"Msdata.SystHierarchies.html"},{"type":"type","title":"Msdata.SystHierarchies.t/0","doc":"","ref":"Msdata.SystHierarchies.html#t:t/0"},{"type":"module","title":"Msdata.SystHierarchyItems","doc":"Defines the hierarchy levels of a referenced Hierarchy.  Modules implementing\nMscmpSystHierarchy into their data structures are expected to conform to the\nhierarchical structure defined by these records and test for conformance prior\nto allowing their data to be used in the application.\n\nDefined in `MscmpSystHierarchy`.","ref":"Msdata.SystHierarchyItems.html"},{"type":"type","title":"Msdata.SystHierarchyItems.t/0","doc":"","ref":"Msdata.SystHierarchyItems.html#t:t/0"},{"type":"module","title":"MscmpSystHierarchy.Types","doc":"Types defining `MscmpSystHierarchy` object data types and data structures.","ref":"MscmpSystHierarchy.Types.html"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_id/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_id/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_item_id/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_item_id/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_item_name/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_item_name/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_name/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_name/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_state_functional_types/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_state_functional_types/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_state_id/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_state_id/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_state_name/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_state_name/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_type_id/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_type_id/0"},{"type":"type","title":"MscmpSystHierarchy.Types.hierarchy_type_name/0","doc":"","ref":"MscmpSystHierarchy.Types.html#t:hierarchy_type_name/0"}],"content_type":"text/markdown"}