searchData={"items":[{"type":"module","title":"MscmpSystOptions","doc":"API for retrieving and working with option files stored in the application\nserver file system.","ref":"MscmpSystOptions.html"},{"type":"function","title":"MscmpSystOptions.get_dbserver_by_name/2","doc":"Returns the database server definition which corresponds to the provided name.","ref":"MscmpSystOptions.html#get_dbserver_by_name/2"},{"type":"function","title":"Parameters - MscmpSystOptions.get_dbserver_by_name/2","doc":"* `options` - the options file data as read by `get_options/1`.\n\n  * `dbserver_name` - the name of the database server to look up.","ref":"MscmpSystOptions.html#get_dbserver_by_name/2-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_dbserver_by_name/2","doc":"Typical call for database server:\n\n    iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.get_dbserver_by_name(config_options, \"instance_db\")\n    %MscmpSystDb.Types.DbServer{\n      db_host: \"127.0.0.1\",\n      db_max_instances: 30,\n      db_port: 5432,\n      db_show_sensitive: true,\n      dbadmin_password: \"default.msbms.privileged.password\",\n      dbadmin_pool_size: 1,\n      server_name: \"instance_db\",\n      server_salt: \"w1OfRx630x7svid8Tk3L9rLL1eEGSm0fq8XcLdveuSs=\",\n      start_server_instances: true,\n      server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"]\n    }\n\nResult in case of bad server name:\n\n    iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.get_dbserver_by_name(config_options, \"non_existent_db\")\n    nil","ref":"MscmpSystOptions.html#get_dbserver_by_name/2-examples"},{"type":"function","title":"MscmpSystOptions.get_global_db_password/1","doc":"Returns a password fragment which is used to establish connections to the\nglobal database.\n\n> ##","ref":"MscmpSystOptions.html#get_global_db_password/1"},{"type":"function","title":"Note {: .warning} - MscmpSystOptions.get_global_db_password/1","doc":">\n> While this value doesn't represent the complete password used to connect\n> global database roles to the database server, it nonetheless should be\n> treated with care inside of the application as should the underlying options\n> file which persists this value.","ref":"MscmpSystOptions.html#get_global_db_password/1-note-warning"},{"type":"function","title":"Parameters - MscmpSystOptions.get_global_db_password/1","doc":"* `options` - the options file data as read by `get_options/1`.","ref":"MscmpSystOptions.html#get_global_db_password/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_global_db_password/1","doc":"iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.get_global_db_password(config_options)\n    \"(eXI0BU&elq1(mvw\"","ref":"MscmpSystOptions.html#get_global_db_password/1-examples"},{"type":"function","title":"MscmpSystOptions.get_global_db_pool_size/1","doc":"Returns the number of connections to the global database that should be\nestablished on application startup.","ref":"MscmpSystOptions.html#get_global_db_pool_size/1"},{"type":"function","title":"Parameters - MscmpSystOptions.get_global_db_pool_size/1","doc":"* `options` - the options file data as read by `get_options/1`.","ref":"MscmpSystOptions.html#get_global_db_pool_size/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_global_db_pool_size/1","doc":"iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.get_global_db_pool_size(config_options)\n    10","ref":"MscmpSystOptions.html#get_global_db_pool_size/1-examples"},{"type":"function","title":"MscmpSystOptions.get_global_dbserver/1","doc":"Returns the `t:MscmpSystDb.Types.DbServer.t/0` data for the database\nserver designated as hosting the global database.","ref":"MscmpSystOptions.html#get_global_dbserver/1"},{"type":"function","title":"Parameters - MscmpSystOptions.get_global_dbserver/1","doc":"* `options` - the options file data as read by `get_options/1`.","ref":"MscmpSystOptions.html#get_global_dbserver/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_global_dbserver/1","doc":"iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> %MscmpSystDb.Types.DbServer{server_name: \"global_db\"} =\n    iex>   MscmpSystOptions.get_global_dbserver(config_options)","ref":"MscmpSystOptions.html#get_global_dbserver/1-examples"},{"type":"function","title":"MscmpSystOptions.get_global_dbserver_name/1","doc":"Returns the name of the database server which hosts the global database.","ref":"MscmpSystOptions.html#get_global_dbserver_name/1"},{"type":"function","title":"Parameters - MscmpSystOptions.get_global_dbserver_name/1","doc":"* `options` - the options file data as read by `get_options/1`.","ref":"MscmpSystOptions.html#get_global_dbserver_name/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_global_dbserver_name/1","doc":"iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.get_global_dbserver_name(config_options)\n    \"global_db\"","ref":"MscmpSystOptions.html#get_global_dbserver_name/1-examples"},{"type":"function","title":"MscmpSystOptions.get_global_pepper_value/1","doc":"Returns the configured global server \"pepper\" value for use in some automatic\naccount creation scenarios.\n\n> ##","ref":"MscmpSystOptions.html#get_global_pepper_value/1"},{"type":"function","title":"Note {: .warning} - MscmpSystOptions.get_global_pepper_value/1","doc":">\n> While this is the way the system is built today, the suspicion is that the\n> approach we're currently taking with automatic account creation is better\n> than no effort for security, but probably not by much.  In other words, this\n> is not an example for how to build a robust security system, but should do\n> until there's actual public deployment of the application.","ref":"MscmpSystOptions.html#get_global_pepper_value/1-note-warning"},{"type":"function","title":"Parameters - MscmpSystOptions.get_global_pepper_value/1","doc":"* `options` - the options file data as read by `get_options/1`.","ref":"MscmpSystOptions.html#get_global_pepper_value/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_global_pepper_value/1","doc":"iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.get_global_pepper_value(config_options)\n    \"jTtEdXRExP5YXHeARQ1W66lP6wDc9GyOvhFPvwnHhtc=\"","ref":"MscmpSystOptions.html#get_global_pepper_value/1-examples"},{"type":"function","title":"MscmpSystOptions.get_options/1","doc":"Parses and returns the contents of a TOML file at `options_file_path` via a\nresult tuple.\n\nIf successful a tuple with a first value of `:ok` and second value containing\na map of the options is returned.  When errors are found, a tuple with a first\nvalue of `:error` and second value of the relevant `MscmpSystError` exception\nis returned.","ref":"MscmpSystOptions.html#get_options/1"},{"type":"function","title":"Parameters - MscmpSystOptions.get_options/1","doc":"* `options_file_path` - describes where to find the options file in the file\n  system.","ref":"MscmpSystOptions.html#get_options/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.get_options/1","doc":"Typical call and return:\n\n    iex> MscmpSystOptions.get_options(\"./testing_options.toml\")\n    {\n      :ok,\n      %{\n        dbserver: [\n          %{\n            db_host: \"127.0.0.1\",\n            db_max_instances: 0,\n            db_port: 5432,\n            db_show_sensitive: true,\n            dbadmin_password: \"default.msbms.privileged.password\",\n            dbadmin_pool_size: 1,\n            server_name: \"global_db\",\n            server_salt: \"sklMRkLXzMQgzqpMpJZPk31Js88su39U/mooAXALhj0=\",\n            start_server_instances: false,\n            server_pools: []\n          },\n          %{\n            db_host: \"127.0.0.1\",\n            db_max_instances: 30,\n            db_port: 5432,\n            db_show_sensitive: true,\n            dbadmin_password: \"default.msbms.privileged.password\",\n            dbadmin_pool_size: 1,\n            server_name: \"instance_db\",\n            server_salt: \"w1OfRx630x7svid8Tk3L9rLL1eEGSm0fq8XcLdveuSs=\",\n            start_server_instances: true,\n            server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"]\n          }\n        ],\n        available_server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"],\n        global_dbserver_name: \"global_db\",\n        global_db_password: \"(eXI0BU&elq1(mvw\",\n        global_db_pool_size: 10,\n        global_pepper_value: \"jTtEdXRExP5YXHeARQ1W66lP6wDc9GyOvhFPvwnHhtc=\"\n      }\n    }\n\nCalled with bad parameters:\n\n    iex> {:error, %MscmpSystError{}} =\n    ...>   MscmpSystOptions.get_options(\"./bad_file_name.toml\")","ref":"MscmpSystOptions.html#get_options/1-examples"},{"type":"function","title":"MscmpSystOptions.get_options!/1","doc":"Parses and returns the contents of a TOML file at `options_file_path` or\nraises.\n\nThe returned options will be in a map equivalent to the TOML file's structure.","ref":"MscmpSystOptions.html#get_options!/1"},{"type":"function","title":"Examples - MscmpSystOptions.get_options!/1","doc":"Typical call and return:\n\n    iex> MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    %{\n      dbserver: [\n        %{\n          db_host: \"127.0.0.1\",\n          db_max_instances: 0,\n          db_port: 5432,\n          db_show_sensitive: true,\n          dbadmin_password: \"default.msbms.privileged.password\",\n          dbadmin_pool_size: 1,\n          server_name: \"global_db\",\n          server_salt: \"sklMRkLXzMQgzqpMpJZPk31Js88su39U/mooAXALhj0=\",\n          start_server_instances: false,\n          server_pools: []\n        },\n        %{\n          db_host: \"127.0.0.1\",\n          db_max_instances: 30,\n          db_port: 5432,\n          db_show_sensitive: true,\n          dbadmin_password: \"default.msbms.privileged.password\",\n          dbadmin_pool_size: 1,\n          server_name: \"instance_db\",\n          server_salt: \"w1OfRx630x7svid8Tk3L9rLL1eEGSm0fq8XcLdveuSs=\",\n          start_server_instances: true,\n          server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"]\n        }\n      ],\n      available_server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"],\n      global_dbserver_name: \"global_db\",\n      global_db_password: \"(eXI0BU&elq1(mvw\",\n      global_db_pool_size: 10,\n      global_pepper_value: \"jTtEdXRExP5YXHeARQ1W66lP6wDc9GyOvhFPvwnHhtc=\"\n    }\n\nCalled with bad parameters:\n\n    iex> MscmpSystOptions.get_options!(\"./bad_file_name.toml\")\n    ** (MscmpSystError) Problem reading options file './bad_file_name.toml'.","ref":"MscmpSystOptions.html#get_options!/1-examples"},{"type":"function","title":"MscmpSystOptions.list_available_server_pools/1","doc":"Returns the list of available server pools configured in the options file.","ref":"MscmpSystOptions.html#list_available_server_pools/1"},{"type":"function","title":"Parameters - MscmpSystOptions.list_available_server_pools/1","doc":"* `options` - the options file data as read by `get_options/1`.","ref":"MscmpSystOptions.html#list_available_server_pools/1-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.list_available_server_pools/1","doc":"iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> MscmpSystOptions.list_available_server_pools(config_options)\n    [\"primary\", \"linked\", \"demo\", \"reserved\"]","ref":"MscmpSystOptions.html#list_available_server_pools/1-examples"},{"type":"function","title":"MscmpSystOptions.list_dbservers/2","doc":"Extracts the list of configured dbservers in the options file, optionally\nfiltered by the server's supported instance classes.","ref":"MscmpSystOptions.html#list_dbservers/2"},{"type":"function","title":"Parameters - MscmpSystOptions.list_dbservers/2","doc":"* `options` - the options file data as read by `get_options/1`.\n\n  * `filters` - a list one or more instance class values with with to filter\n  the database servers list.  The valid instance classes are: \"primary\",\n  \"linked\", \"demo\", and \"reserved\".  An empty list of filter values returns\n  all database servers, including those that have no supported instance\n  classes (this is common for global database host servers).  The `filters`\n  values defaults to the empty list if not explicitly provided.","ref":"MscmpSystOptions.html#list_dbservers/2-parameters"},{"type":"function","title":"Examples - MscmpSystOptions.list_dbservers/2","doc":"Calling without filters:\n\n    iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> [_ | _] = MscmpSystOptions.list_dbservers(config_options)\n    [\n      %MscmpSystDb.Types.DbServer{\n        db_host: \"127.0.0.1\",\n        db_max_instances: 0,\n        db_port: 5432,\n        db_show_sensitive: true,\n        dbadmin_password: \"default.msbms.privileged.password\",\n        dbadmin_pool_size: 1,\n        server_name: \"global_db\",\n        server_salt: \"sklMRkLXzMQgzqpMpJZPk31Js88su39U/mooAXALhj0=\",\n        start_server_instances: false,\n        server_pools: []\n      },\n      %MscmpSystDb.Types.DbServer{\n        db_host: \"127.0.0.1\",\n        db_max_instances: 30,\n        db_port: 5432,\n        db_show_sensitive: true,\n        dbadmin_password: \"default.msbms.privileged.password\",\n        dbadmin_pool_size: 1,\n        server_name: \"instance_db\",\n        server_salt: \"w1OfRx630x7svid8Tk3L9rLL1eEGSm0fq8XcLdveuSs=\",\n        start_server_instances: true,\n        server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"]\n      }\n    ]\n\nCalling with filters:\n\n    iex> config_options = MscmpSystOptions.get_options!(\"./testing_options.toml\")\n    iex> [_ | _] = MscmpSystOptions.list_dbservers(config_options, [\"primary\"])\n    [\n      %MscmpSystDb.Types.DbServer{\n        db_host: \"127.0.0.1\",\n        db_max_instances: 30,\n        db_port: 5432,\n        db_show_sensitive: true,\n        dbadmin_password: \"default.msbms.privileged.password\",\n        dbadmin_pool_size: 1,\n        server_name: \"instance_db\",\n        server_salt: \"w1OfRx630x7svid8Tk3L9rLL1eEGSm0fq8XcLdveuSs=\",\n        start_server_instances: true,\n        server_pools: [\"primary\", \"linked\", \"demo\", \"reserved\"]\n      }\n    ]","ref":"MscmpSystOptions.html#list_dbservers/2-examples"},{"type":"module","title":"MscmpSystOptions.Types","doc":"Provides the typespecs and related typing documentation for the\nMscmpSystOptions module.","ref":"MscmpSystOptions.Types.html"},{"type":"type","title":"MscmpSystOptions.Types.server_pool/0","doc":"Server pools allow for the categorization for dbservers which relate to their\ntargeted workload or other operational constraints.\n\nThe available server pools are defined at the top level of the options file\nunder the `available_server_pools` configuration point.","ref":"MscmpSystOptions.Types.html#t:server_pool/0"}],"content_type":"text/markdown"}