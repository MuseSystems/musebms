searchNodes=[{"doc":"","ref":"DevSupport.html","title":"DevSupport","type":"module"},{"doc":"","ref":"DevSupport.html#get_datastore_context_id/0","title":"DevSupport.get_datastore_context_id/0","type":"function"},{"doc":"","ref":"DevSupport.html#start_dev_environment/1","title":"DevSupport.start_dev_environment/1","type":"function"},{"doc":"","ref":"DevSupport.html#stop_dev_environment/1","title":"DevSupport.stop_dev_environment/1","type":"function"},{"doc":"API for the management of system user authentication. Authentication is a global concern allowing users to be either bound to specific Application Instances and Owners or to be independent and valid for a number of Applications and Instances.","ref":"MsbmsSystAuthentication.html","title":"MsbmsSystAuthentication","type":"module"},{"doc":"Accepts the invitation made to an Access Account to access an Instance. This process is only needed in the case where a syst_access_account_instance_assocs invitation may be accepted or declined by the Access Account holder. To be accepted in this process the invitation record must have been previously created (see invite_to_instance/3 ), must not be expired, previously declined, or previously accepted; trying to accept a record in such a state will result in an error tuple being returned. Naturally, the Access Account holder may choose to never accept or decline the invitation and may simply allow the invitation to expire. Parameters access_account_instance_assoc - this value may be either the populated MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs struct to accept or the record ID of the record to accept.","ref":"MsbmsSystAuthentication.html#accept_instance_invite/1","title":"MsbmsSystAuthentication.accept_instance_invite/1","type":"function"},{"doc":"Accepts the invitation made to an Access Account to access an Instance, referencing the record by its composite key values. This function performs the same process as accept_instance_invite/1 , but will look up the record to accept using the Access Account, Instance, and Credential Type record ID values. Parameters access_account_id - the record ID of the Access Account accepting the invitation to the Instance. instance_id - the Instance record ID to which the Access Account has been invited.","ref":"MsbmsSystAuthentication.html#accept_instance_invite/2","title":"MsbmsSystAuthentication.accept_instance_invite/2","type":"function"},{"doc":"Create a new Access Account. Parameters access_account_params - a map of required and optional parameters which define the new Access Account record. Required attributes in this map are: internal_name , external_name , access_account_state_id , and allow_global_logins . Example iex&gt; state = MsbmsSystEnums . get_default_enum_item ( &quot;access_account_states&quot; ) iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystAccessAccounts { } } = ...&gt; MsbmsSystAuthentication . create_access_account ( ...&gt; %{ ...&gt; internal_name : &quot;example_create_accnt&quot; , ...&gt; external_name : &quot;Create Access Account Example&quot; , ...&gt; access_account_state_id : state . id , ...&gt; allow_global_logins : true ...&gt; } ...&gt; )","ref":"MsbmsSystAuthentication.html#create_access_account/1","title":"MsbmsSystAuthentication.create_access_account/1","type":"function"},{"doc":"Adds a host IP address to the global disallowed hosts list. Disallowed hosts are IP addresses which are prevented from authenticating users with the system, and by extension prevents host access to application functions generally. Hosts are disallowed on a global basis and may be added to the list based on system heuristics which detect suspicious activity. Successfully adding a host to the list returns a success tuple and a struct representing the record just created. Attempting to add a host which is already part of the list will also result in a success tuple, but no record is returned. Parameters host_address - the IP address of the host to disallow. Examples Adding a new host to the list. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , false } = MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.123.123.20&quot; ) iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystDisallowedHosts { } } = ...&gt; MsbmsSystAuthentication . create_disallowed_host ( ~i&quot;10.123.123.20&quot; ) Attempting to add a host already on the list. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , true } = MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.123.123.3&quot; ) iex&gt; { :ok , nil } = ...&gt; MsbmsSystAuthentication . create_disallowed_host ( ~i&quot;10.123.123.3&quot; )","ref":"MsbmsSystAuthentication.html#create_disallowed_host/1","title":"MsbmsSystAuthentication.create_disallowed_host/1","type":"function"},{"doc":"Adds a new password to the Disallowed Passwords list. Disallowed passwords are passwords that are commonly known, are known to have been revealed in a successful hacking attack, or are otherwise not available for users to choose for their authentication credential. Enforcing that these passwords are not available for use depends upon the effective disallow_compromised Password Rule for the Access Account attempting authentication. An attempt to add a password which is already on the list will succeed as though the password were not already part of the list. Parameters password - The plaintext password to add to the list of disallowed passwords. Examples Adding a password successfully will simply return :ok . iex&gt; MsbmsSystAuthentication . create_disallowed_password ( &quot;Example Disallowed Password&quot; ) :ok Any subsequent attempt to add the same password to the list again will appear to succeed while silently doing nothing. iex&gt; MsbmsSystAuthentication . create_disallowed_password ( &quot;Example Disallowed Password&quot; ) :ok","ref":"MsbmsSystAuthentication.html#create_disallowed_password/1","title":"MsbmsSystAuthentication.create_disallowed_password/1","type":"function"},{"doc":"Creates a new Global Network Rule using the provided parameters. Global Network Rules are checked prior to all attempted user authentication events and have precedence over Owner and Instance Network Rules, though they are secondary to the Disallowed Hosts list. On successful creation, a result tuple in the form {:ok, &lt;new record&gt;} is returned where the &lt;new record&gt; is the fully populated Data struct of the record just created. If an exception is raised this function will return a failure tuple in the form of {:error, &lt;exception data&gt;} . Parameters insert_params - a map representing the values to use when creating the new Global Network Rule. The available parameter values are: ordering - the order in which the new record should apply relative to other Global Network Rule records. lower ordering values take precedence over higher ordering values. If the ordering value in the parameters matches the ordering value of an existing Global Network Rule record, the inserted record will be treated as an &quot;insert before&quot; record, with the existing records being reordered to be after the new record, recursively. This parameter is required. functional_type - defines what action the rule specifies once matched. The possible functional types are :allow which means the rule intends to explicitly allow the associated IP Address(es) to attempt authentication or :deny which explicitly prevents the IP Address(es) from attempting an authorization. This parameter is required. ip_host_or_network - a single Host IP Address or a single CIDR network used in matching user Host IP Addresses to rules. Note that if this value is provided that the ip_host_range_lower and ip_host_range_upper values must be nil or not provided. ip_host_range_lower - defines the lower bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_upper parameter must also be provided and the ip_host_or_network parameter value must be nil or not provided. ip_host_range_upper - defines the upper bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_lower parameter must also be provided and the ip_host_or_network parameter value must be nil or not provided. Note that either the ip_host_or_network parameter or the ip_host_range_lower and ip_host_range_upper are required and exclusive. Example Adding a new &quot;Allow&quot; Global Network Rule for a CIDR network. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; new_global_rule = %{ ...&gt; ordering : 20 , ...&gt; functional_type : :allow , ...&gt; ip_host_or_network : ~i&quot;10.100.150.0/24&quot; ...&gt; } iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystGlobalNetworkRules { } } = ...&gt; MsbmsSystAuthentication . create_global_network_rule ( new_global_rule ) Adding a new &quot;Deny&quot; Global Network Rule for an IP Address range. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; new_global_rule = %{ ...&gt; ordering : 21 , ...&gt; functional_type : :deny , ...&gt; ip_host_or_network : nil , ...&gt; ip_host_range_lower : ~i&quot;10.100.151.1&quot; , ...&gt; ip_host_range_upper : ~i&quot;10.100.152.254&quot; ...&gt; } iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystGlobalNetworkRules { } } = ...&gt; MsbmsSystAuthentication . create_global_network_rule ( new_global_rule )","ref":"MsbmsSystAuthentication.html#create_global_network_rule/1","title":"MsbmsSystAuthentication.create_global_network_rule/1","type":"function"},{"doc":"Creates a new Instance Network Rule using the provided parameters. Instance Network Rules the checked after the Disallowed Hosts list, the Global Network Rules, and the Instance Network Rules and apply to all Instances owned by the specified Instance, unless a higher precedence rule already applies to the host. On successful creation, a result tuple in the form {:ok, &lt;new record&gt;} is returned where the &lt;new record&gt; is the fully populated Data struct of the record just created. If an exception is raised this function will return a failure tuple in the form of {:error, &lt;exception data&gt;} . Parameters instance_id - the record ID of the Instance for whom the Instance Network Rule is being created. insert_params - a map representing the values to use when creating the new Instance Network Rule. The available parameter values are: ordering - the order in which the new record should apply relative to other Instance Network Rule records. lower ordering values take precedence over higher ordering values. If the ordering value in the parameters matches the ordering value of an existing Instance Network Rule record, the inserted record will be treated as an &quot;insert before&quot; record, with the existing records being reordered to be after the new record, recursively. This parameter is required. functional_type - defines what action the rule specifies once matched. The possible functional types are :allow which means the rule intends to explicitly allow the associated IP Address(es) to attempt authentication or :deny which explicitly prevents the IP Address(es) from attempting an authorization. This parameter is required. ip_host_or_network - a single Host IP Address or a single CIDR network used in matching user Host IP Addresses to rules. Note that if this value is provided that the ip_host_range_lower and ip_host_range_upper values must be nil or not provided. ip_host_range_lower - defines the lower bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_upper parameter must also be provided and the ip_host_or_network parameter value must be nil or not provided. ip_host_range_upper - defines the upper bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_lower parameter must also be provided and the ip_host_or_network parameter value must be nil or not provided. Note that either the ip_host_or_network parameter or the ip_host_range_lower and ip_host_range_upper are required and exclusive. Example Adding a new &quot;Allow&quot; Instance Network Rule for a CIDR network. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , instance_id } = ...&gt; MsbmsSystInstanceMgr . get_instance_id_by_name ( &quot;app1_owner8_instance_types_std&quot; ) iex&gt; new_instance_rule = %{ ...&gt; ordering : 1 , ...&gt; functional_type : :allow , ...&gt; ip_host_or_network : ~i&quot;10.100.170.0/24&quot; ...&gt; } iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystInstanceNetworkRules { } } = ...&gt; MsbmsSystAuthentication . create_instance_network_rule ( instance_id , new_instance_rule ) Adding a new &quot;Deny&quot; Instance Network Rule for an IP Address range. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , instance_id } = ...&gt; MsbmsSystInstanceMgr . get_instance_id_by_name ( &quot;app1_owner8_instance_types_std&quot; ) iex&gt; new_instance_rule = %{ ...&gt; ordering : 2 , ...&gt; functional_type : :deny , ...&gt; ip_host_or_network : nil , ...&gt; ip_host_range_lower : ~i&quot;10.100.171.1&quot; , ...&gt; ip_host_range_upper : ~i&quot;10.100.172.254&quot; ...&gt; } iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystInstanceNetworkRules { } } = ...&gt; MsbmsSystAuthentication . create_instance_network_rule ( instance_id , new_instance_rule )","ref":"MsbmsSystAuthentication.html#create_instance_network_rule/2","title":"MsbmsSystAuthentication.create_instance_network_rule/2","type":"function"},{"doc":"Creates a new Owner Network Rule using the provided parameters. Owner Network Rules the checked after the Disallowed Hosts list, the Global Network Rules, and the Instance Network Rules and apply to all Instances owned by the specified Owner, unless a higher precedence rule already applies to the host. On successful creation, a result tuple in the form {:ok, &lt;new record&gt;} is returned where the &lt;new record&gt; is the fully populated Data struct of the record just created. If an exception is raised this function will return a failure tuple in the form of {:error, &lt;exception data&gt;} . Parameters owner_id - the record ID of the Owner for whom the Owner Network Rule is being created. insert_params - a map representing the values to use when creating the new Owner Network Rule. The available parameter values are: ordering - the order in which the new record should apply relative to other Owner Network Rule records. lower ordering values take precedence over higher ordering values. If the ordering value in the parameters matches the ordering value of an existing Owner Network Rule record, the inserted record will be treated as an &quot;insert before&quot; record, with the existing records being reordered to be after the new record, recursively. This parameter is required. functional_type - defines what action the rule specifies once matched. The possible functional types are :allow which means the rule intends to explicitly allow the associated IP Address(es) to attempt authentication or :deny which explicitly prevents the IP Address(es) from attempting an authorization. This parameter is required. ip_host_or_network - a single Host IP Address or a single CIDR network used in matching user Host IP Addresses to rules. Note that if this value is provided that the ip_host_range_lower and ip_host_range_upper values must be nil or not provided. ip_host_range_lower - defines the lower bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_upper parameter must also be provided and the ip_host_or_network parameter value must be nil or not provided. ip_host_range_upper - defines the upper bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_lower parameter must also be provided and the ip_host_or_network parameter value must be nil or not provided. Note that either the ip_host_or_network parameter or the ip_host_range_lower and ip_host_range_upper are required and exclusive. Example Adding a new &quot;Allow&quot; Owner Network Rule for a CIDR network. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , owner_id } = MsbmsSystInstanceMgr . get_owner_id_by_name ( &quot;owner8&quot; ) iex&gt; new_owner_rule = %{ ...&gt; ordering : 1 , ...&gt; functional_type : :allow , ...&gt; ip_host_or_network : ~i&quot;10.100.160.0/24&quot; ...&gt; } iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystOwnerNetworkRules { } } = ...&gt; MsbmsSystAuthentication . create_owner_network_rule ( owner_id , new_owner_rule ) Adding a new &quot;Deny&quot; Owner Network Rule for an IP Address range. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , owner_id } = MsbmsSystInstanceMgr . get_owner_id_by_name ( &quot;owner8&quot; ) iex&gt; new_owner_rule = %{ ...&gt; ordering : 2 , ...&gt; functional_type : :deny , ...&gt; ip_host_or_network : nil , ...&gt; ip_host_range_lower : ~i&quot;10.100.161.1&quot; , ...&gt; ip_host_range_upper : ~i&quot;10.100.162.254&quot; ...&gt; } iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystOwnerNetworkRules { } } = ...&gt; MsbmsSystAuthentication . create_owner_network_rule ( owner_id , new_owner_rule )","ref":"MsbmsSystAuthentication.html#create_owner_network_rule/2","title":"MsbmsSystAuthentication.create_owner_network_rule/2","type":"function"},{"doc":"Declines an unaccepted/unexpired invitation made to an Access Account to access an Instance. This process is only needed in the case where a syst_access_account_instance_assocs invitation may be accepted or declined by the Access Account holder. To be declined in this process the invitation record must have been previously created (see invite_to_instance/3 ), must not be expired, previously declined, or previously accepted; trying to decline a record in such a state will result in an error tuple being returned. Naturally, the Access Account holder may choose to never accept or decline the invitation and may simply allow the invitation to expire. Parameters access_account_instance_assoc - this value may be either the populated MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs struct to decline or the record ID of the record to decline.","ref":"MsbmsSystAuthentication.html#decline_instance_invite/1","title":"MsbmsSystAuthentication.decline_instance_invite/1","type":"function"},{"doc":"Declines an unaccepted/unexpired invitation made to an Access Account to access an Instance, referencing the record by its composite key values. This function performs the same process as decline_instance_invite/1 , but will look up the record to decline using the Access Account, Instance, and Credential Type record ID values. Parameters access_account_id - the record ID of the Access Account declining the invitation to the Instance. instance_id - the Instance record ID to which the Access Account has been invited.","ref":"MsbmsSystAuthentication.html#decline_instance_invite/2","title":"MsbmsSystAuthentication.decline_instance_invite/2","type":"function"},{"doc":"Deletes a host IP address from the Disallowed Hosts list based on either a MsbmsSystAuthentication.Data.SystDisallowedHosts record or the ID of such a record. If the record is found and deleted a success tuple in the form {:ok, :deleted} is returned. If the record is not found the success tuple {:ok, :not_found} is returned. Once a host is removed from the Disallowed Hosts list, users are allowed to authenticate from the host, so long as no other effective Network Rule prevents the action. Parameters disallowed_host - either the fully populated MsbmsSystAuthentication.Data.SystDisallowedHosts data struct for the record to delete or the ID of the record. Note that when the data struct is provided Ecto optimistic locking is applied to the the delete operation. Examples Deleting a host by record ID. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , target_host_record } = ...&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host ( ~i&quot;10.10.250.4&quot; ) iex&gt; MsbmsSystAuthentication . delete_disallowed_host ( target_host_record . id ) { :ok , :deleted } Deleting a host by record struct. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , target_host_record } = ...&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host ( ~i&quot;10.10.250.5&quot; ) iex&gt; MsbmsSystAuthentication . delete_disallowed_host ( target_host_record ) { :ok , :deleted } Deleting a struct for a no longer existent record. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , target_host_record } = ...&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host ( ~i&quot;10.10.250.6&quot; ) iex&gt; MsbmsSystAuthentication . delete_disallowed_host ( target_host_record ) { :ok , :deleted } iex&gt; MsbmsSystAuthentication . delete_disallowed_host ( target_host_record ) { :ok , :not_found }","ref":"MsbmsSystAuthentication.html#delete_disallowed_host/1","title":"MsbmsSystAuthentication.delete_disallowed_host/1","type":"function"},{"doc":"Deletes a host IP address from the Disallowed Hosts list as looked up by the host IP address. If the record is found and deleted a success tuple in the form {:ok, :deleted} is returned. If the record is not found the success tuple {:ok, :not_found} is returned. Any other condition would cause an error tuple to be returned. Once a host is removed from the Disallowed Hosts list, users are allowed to authenticate from the host, so long as no other effective Network Rule prevents the action. Parameters host_addr - the IP address of the host that is no longer to be disallowed. Examples Deleting a host that does exist in the list. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , true } = MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.10.251.1&quot; ) iex&gt; { :ok , :deleted } = ...&gt; MsbmsSystAuthentication . delete_disallowed_host_addr ( ~i&quot;10.10.251.1&quot; ) iex&gt; { :ok , false } = MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.10.251.1&quot; ) Attempting to delete a host not already on the list. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , false } = MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.10.251.10&quot; ) iex&gt; { :ok , :not_found } = ...&gt; MsbmsSystAuthentication . delete_disallowed_host_addr ( ~i&quot;10.10.251.10&quot; )","ref":"MsbmsSystAuthentication.html#delete_disallowed_host_addr/1","title":"MsbmsSystAuthentication.delete_disallowed_host_addr/1","type":"function"},{"doc":"Removes a password from the disallowed passwords list. On success, this function will return a success tuple indicating if the requested password was deleted from the disallowed passwords list ( {:ok, :deleted} ) or if the password simply wasn't found in the list ( {:ok, :not_found} ). Parameters password - the plaintext password to delete from the disallowed passwords list. Examples Result when deleting a record from the list. iex&gt; MsbmsSystAuthentication . delete_disallowed_password ( &quot;No Longer Disallowed&quot; ) { :ok , :deleted } Result when trying to delete a record not already on the list. iex&gt; MsbmsSystAuthentication . delete_disallowed_password ( &quot;Not on List&quot; ) { :ok , :not_found }","ref":"MsbmsSystAuthentication.html#delete_disallowed_password/1","title":"MsbmsSystAuthentication.delete_disallowed_password/1","type":"function"},{"doc":"Deletes an existing Global Network Rule record as referenced by the record ID. On successful deletion, a simple result of :ok is returned. On error, an error tuple in the form of {:error, &lt;exception&gt;} is returned. Parameters global_network_rule_id - The record ID of the Global Network Rule record to delete.","ref":"MsbmsSystAuthentication.html#delete_global_network_rule/1","title":"MsbmsSystAuthentication.delete_global_network_rule/1","type":"function"},{"doc":"Deletes an existing Instance Network Rule record as referenced by the record ID. On successful deletion, a simple result of :ok is returned. On error, an error tuple in the form of {:error, &lt;exception&gt;} is returned. Parameters instance_network_rule_id - The record ID of the Instance Network Rule record to delete.","ref":"MsbmsSystAuthentication.html#delete_instance_network_rule/1","title":"MsbmsSystAuthentication.delete_instance_network_rule/1","type":"function"},{"doc":"Deletes an existing Owner Network Rule record as referenced by the record ID. On successful deletion, a simple result of :ok is returned. On error, an error tuple in the form of {:error, &lt;exception&gt;} is returned. Parameters owner_network_rule_id - The record ID of the Owner Network Rule record to delete.","ref":"MsbmsSystAuthentication.html#delete_owner_network_rule/1","title":"MsbmsSystAuthentication.delete_owner_network_rule/1","type":"function"},{"doc":"Retrieves a fully populated Access Account record as found by internal name. 'Fully populated' in this context means that the related Account Account State and related functional type data is also retrieved along with the actual Access Account data. Parameters access_account_name - the internal name of the Access Account record to retrieve. Example iex&gt; { ...&gt; :ok , ...&gt; % MsbmsSystAuthentication.Data.SystAccessAccounts { internal_name : &quot;example_accnt&quot; } ...&gt; } = ...&gt; MsbmsSystAuthentication . get_access_account_by_name ( &quot;example_accnt&quot; )","ref":"MsbmsSystAuthentication.html#get_access_account_by_name/1","title":"MsbmsSystAuthentication.get_access_account_by_name/1","type":"function"},{"doc":"Looks up an Access Account record ID by its internal name. Parameters access_account_name - the internal name of the record for which to retrieve the record ID. Examples iex&gt; { :ok , access_account_id } = ...&gt; MsbmsSystAuthentication . get_access_account_id_by_name ( &quot;example_accnt&quot; ) iex&gt; is_binary ( access_account_id ) true","ref":"MsbmsSystAuthentication.html#get_access_account_id_by_name/1","title":"MsbmsSystAuthentication.get_access_account_id_by_name/1","type":"function"},{"doc":"Returns the Network Rule which should be applied for the given Host IP Address. This function compares the provided Host IP Address against the applicable Network Rules which apply to it and return the specific rule which should be applied during the authentication process. Network Rule Precedence The specific rules to check for applicability depends on the other provided parameters. The available Network Rule sets in order of precedence are: Disallowed Hosts : Globally disallowed hosts are always checked first and no later rule can override the denial. Only removing the host from the Disallowed Hosts List can reverse this denial. Global Network Rules : These are rules applied to all presented Host IP Addresses. Instance Network Rules : Rules defined by Instance Owners and are the most granular rule level available. These Network Rules are only evaluated if the instance_id parameter is provided. Owner Network Rules : Network Rules which are applicable to all Instances of a given Owner, provided no superseding Instance Network Rule was found. This rule set is included if either the instance_id or owner_id parameter is provided. Default Network Rule : When no explicitly defined Network Rule has been found for a host, this rule will apply implicitly. The current rule grants access from any host. Return Value This function returns a result tuple. The value element of the result tuple is a map of type MsbmsSystAuthentication.Types.applied_network_rule/0 . The map indicates which precedence group the rule came from, the ID of the Network Rule record if the rule was derived from the various Network Rule data tables, and the Functional Type of the rule: :allow meaning the rule explicitly allows the host to attempt an authentication, or :deny indicating that the host is not allowed to attempt authentication. Parameters host_address - the Host IP Address which the user wishes to authenticate from. instance_id - the record ID of an Instance to which the user wants to gain access. This parameter is optional, though excluding this parameter will leave the Instance Network Rules might properly apply unevaluated. If this parameter is provided, the Owner of the Instance is implied and there is no need to also supply the owner_id parameter. owner_id - the record ID of an Owner which owns the candidate Instances to which the user wishes to authenticate. This parameter is not required if the instance_id parameter has been provided. Otherwise, this parameter is optional, though if the Owner has not been resolved through this parameter or via the instance_id , the Owner Network Rules that might apply to the authentication attempt will not be applied. Examples When the host is a member of the Disallowed Hosts lists. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , %{ functional_type : :deny , network_rule_id : id , precedence : :disallowed } } = ...&gt; MsbmsSystAuthentication . get_applied_network_rule ( ~i&quot;10.123.123.3&quot; ) iex&gt; is_binary ( id ) true When the Host IP Address does not match any explicitly defined rule and the implicit rule applies. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . get_applied_network_rule ( ~i&quot;10.124.124.3&quot; ) { :ok , %{ functional_type : :allow , network_rule_id : nil , precedence : :implied } } When a Global Network Rule explicitly allows the Host IP Address to attempt authentication. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , %{ functional_type : :allow , network_rule_id : id , precedence : :global } } = ...&gt; MsbmsSystAuthentication . get_applied_network_rule ( ~i&quot;10.125.125.3&quot; ) iex&gt; is_binary ( id ) true Note that while the examples did not include Instance or Owner IDs, the examples are none-the-less representative of cases where they are included.","ref":"MsbmsSystAuthentication.html#get_applied_network_rule/3","title":"MsbmsSystAuthentication.get_applied_network_rule/3","type":"function"},{"doc":"Returns the Network Rule which should be applied for the given Host IP Address, raising on error. This function works the same as get_applied_network_rule/3 except this function returns its result without wrapping it in a result tuple. If an error is encountered an exception is raised. Parameters host_address - the Host IP Address which the user wishes to authenticate from. instance_id - the record ID of an Instance to which the user wants to gain access. This parameter is optional, though excluding this parameter will leave the Instance Network Rules might properly apply unevaluated. If this parameter is provided, the Owner of the Instance is implied and there is no need to also supply the owner_id parameter. owner_id - the record ID of an Owner which owns the candidate Instances to which the user wishes to authenticate. This parameter is not required if the instance_id parameter has been provided. Otherwise, this parameter is optional, though if the Owner has not been resolved through this parameter or via the instance_id , the Owner Network Rules that might apply to the authentication attempt will not be applied. Examples When the host is a member of the Disallowed Hosts lists. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; %{ functional_type : :deny , network_rule_id : id , precedence : :disallowed } = ...&gt; MsbmsSystAuthentication . get_applied_network_rule! ( ~i&quot;10.123.123.3&quot; ) iex&gt; is_binary ( id ) true When the Host IP Address does not match any explicitly defined rule and the implicit rule applies. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . get_applied_network_rule! ( ~i&quot;10.124.124.3&quot; ) %{ functional_type : :allow , network_rule_id : nil , precedence : :implied } When a Global Network Rule explicitly allows the Host IP Address to attempt authentication. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; %{ functional_type : :allow , network_rule_id : id , precedence : :global } = ...&gt; MsbmsSystAuthentication . get_applied_network_rule! ( ~i&quot;10.125.125.3&quot; ) iex&gt; is_binary ( id ) true Note that while the examples did not include Instance or Owner IDs, the examples are none-the-less representative of cases where they are included.","ref":"MsbmsSystAuthentication.html#get_applied_network_rule!/3","title":"MsbmsSystAuthentication.get_applied_network_rule!/3","type":"function"},{"doc":"Retrieves a Disallowed Host record from the database as identified by its host address. Parameters host_address - the IP address of the disallowed host record to retrieve. Example Retrieving a Disallowed Host record by IP address. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; { :ok , % MsbmsSystAuthentication.Data.SystDisallowedHosts { } } = ...&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host ( ~i&quot;10.123.123.4&quot; ) Attempting to retrieve a record for a host not on the list. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host ( ~i&quot;10.125.120.20&quot; ) { :ok , nil }","ref":"MsbmsSystAuthentication.html#get_disallowed_host_record_by_host/1","title":"MsbmsSystAuthentication.get_disallowed_host_record_by_host/1","type":"function"},{"doc":"Retrieves a Disallowed Host record from the database as identified by its host address, raising on error. This function works the same as get_disallowed_host_record_by_host/1 except this function returns its result without wrapping it in a result tuple. If an error is encountered an exception is raised. Parameters host_address - the IP address of the disallowed host record to retrieve. Example Retrieving a Disallowed Host record by IP address. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; % MsbmsSystAuthentication.Data.SystDisallowedHosts { } = ...&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host! ( ~i&quot;10.123.123.4&quot; ) Attempting to retrieve a record for a host not on the list. iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . get_disallowed_host_record_by_host! ( ~i&quot;10.125.120.20&quot; ) nil","ref":"MsbmsSystAuthentication.html#get_disallowed_host_record_by_host!/1","title":"MsbmsSystAuthentication.get_disallowed_host_record_by_host!/1","type":"function"},{"doc":"Retrieves a Disallowed Host record by the record ID. This function assumes the record exists. If the record does not exist an error tuple will be returned. Parameters disallowed_host_id - the record ID of the Disallowed Host record to retrieve. Example Retrieving a Disallowed Host record by record ID. { :ok , % MsbmsSystAuthentication.Data.SystDisallowedHosts { } } = MsbmsSystAuthentication . get_disallowed_host_record_by_id ( &quot;ad7f2030-5895-11ed-a888-0f8a20e745a9&quot; )","ref":"MsbmsSystAuthentication.html#get_disallowed_host_record_by_id/1","title":"MsbmsSystAuthentication.get_disallowed_host_record_by_id/1","type":"function"},{"doc":"Retrieves a Disallowed Host record by the record ID, raising on error. This function works the same as get_disallowed_host_record_by_id/1 except this function returns its result without wrapping it in a result tuple. If an error is encountered, including if the record does not exist, an exception is raised. Parameters disallowed_host_id - the record ID of the Disallowed Host record to retrieve. Example Retrieving a Disallowed Host record by record ID. % MsbmsSystAuthentication.Data.SystDisallowedHosts { } = MsbmsSystAuthentication . get_disallowed_host_record_by_id! ( &quot;ad7f2030-5895-11ed-a888-0f8a20e745a9&quot; )","ref":"MsbmsSystAuthentication.html#get_disallowed_host_record_by_id!/1","title":"MsbmsSystAuthentication.get_disallowed_host_record_by_id!/1","type":"function"},{"doc":"Retrieves a Global Network Rule record based on its record ID. For a given Global Network Rule record ID this function will return a result tuple in the form of {:ok, &lt;record&gt;} where &lt;record&gt; is the fully populated MsbmsSystAuthentication.Data.SystGlobalNetworkRules . If the record does not exist, then {:ok, :not_found} is returned. Otherwise, an error tuple in the form of {:error, &lt;exception&gt;} is returned. Parameters global_network_rule_id - the record ID of the desired Global Network Rule record.","ref":"MsbmsSystAuthentication.html#get_global_network_rule/1","title":"MsbmsSystAuthentication.get_global_network_rule/1","type":"function"},{"doc":"Retrieves a Global Network Rule record based on its record ID, raising on error. This function works the same as get_global_network_rule/1 except this function returns its result without wrapping it in a result tuple. If an error is encountered, including if the record does not exist, an exception is raised. Parameters global_network_rule_id - the record ID of the desired Global Network Rule record.","ref":"MsbmsSystAuthentication.html#get_global_network_rule!/1","title":"MsbmsSystAuthentication.get_global_network_rule!/1","type":"function"},{"doc":"Retrieves a Instance Network Rule record based on its record ID. For a given Instance Network Rule record ID this function will return a result tuple in the form of {:ok, &lt;record&gt;} where &lt;record&gt; is the fully populated MsbmsSystAuthentication.Data.SystInstanceNetworkRules . If the record does not exist, then {:ok, :not_found} is returned. Otherwise, an error tuple in the form of {:error, &lt;exception&gt;} is returned. Parameters instance_network_rule_id - the record ID of the desired Instance Network Rule record.","ref":"MsbmsSystAuthentication.html#get_instance_network_rule/1","title":"MsbmsSystAuthentication.get_instance_network_rule/1","type":"function"},{"doc":"Retrieves a Instance Network Rule record based on its record ID, raising on error. This function works the same as get_instance_network_rule/1 except this function returns its result without wrapping it in a result tuple. If an error is encountered, including if the record does not exist, an exception is raised. Parameters instance_network_rule_id - the record ID of the desired Instance Network Rule record.","ref":"MsbmsSystAuthentication.html#get_instance_network_rule!/1","title":"MsbmsSystAuthentication.get_instance_network_rule!/1","type":"function"},{"doc":"Retrieves a Owner Network Rule record based on its record ID. For a given Owner Network Rule record ID this function will return a result tuple in the form of {:ok, &lt;record&gt;} where &lt;record&gt; is the fully populated MsbmsSystAuthentication.Data.SystOwnerNetworkRules . If the record does not exist, then {:ok, :not_found} is returned. Otherwise, an error tuple in the form of {:error, &lt;exception&gt;} is returned. Parameters owner_network_rule_id - the record ID of the desired Owner Network Rule record.","ref":"MsbmsSystAuthentication.html#get_owner_network_rule/1","title":"MsbmsSystAuthentication.get_owner_network_rule/1","type":"function"},{"doc":"Retrieves a Owner Network Rule record based on its record ID, raising on error. This function works the same as get_owner_network_rule/1 except this function returns its result without wrapping it in a result tuple. If an error is encountered, including if the record does not exist, an exception is raised. Parameters owner_network_rule_id - the record ID of the desired Owner Network Rule record.","ref":"MsbmsSystAuthentication.html#get_owner_network_rule!/1","title":"MsbmsSystAuthentication.get_owner_network_rule!/1","type":"function"},{"doc":"Indicates whether the provided host IP address is to be denied access to the system. This function returns a tuple in the form of {:ok, &lt;disallowed&gt;} where the disallowed value is either true meaning that the requested host is disallowed from authenticating with the system or false if the host is permitted to attempt an authentication. Parameters host_address - the host IP address to test. Typically this will be the host address of a user wishing to authenticate with the system. Examples An allowed host will return a false result tuple iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.150.150.10&quot; ) { :ok , false } A disallowed host returns a true result tuple iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . host_disallowed ( ~i&quot;10.123.123.5&quot; ) { :ok , true }","ref":"MsbmsSystAuthentication.html#host_disallowed/1","title":"MsbmsSystAuthentication.host_disallowed/1","type":"function"},{"doc":"Indicates whether the provided host IP address is to be denied access to the system, raising on error. This function works the same as host_disallowed/1 except this function returns its result without wrapping it in a result tuple. If an error is encountered an exception is raised. Parameters host_address - the host IP address to test. Typically this will be the host address of a user wishing to authenticate with the system. Examples An allowed host will return a false result tuple iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . host_disallowed? ( ~i&quot;10.150.150.10&quot; ) false A disallowed host returns a true result tuple iex&gt; import IP , only : [ sigil_i : 2 ] iex&gt; MsbmsSystAuthentication . host_disallowed? ( ~i&quot;10.123.123.5&quot; ) true","ref":"MsbmsSystAuthentication.html#host_disallowed?/1","title":"MsbmsSystAuthentication.host_disallowed?/1","type":"function"},{"doc":"Invites or re-invites an Access Account to establish access rights to a specific Instance. The invitation process creates a syst_access_account_instance_assocs record for the requested Access Account, Instance, and Credential Type and sets the invitation_issued field to the current date/time. Re-invitation will update an existing syst_access_account_instance_assocs record resetting invite data such as the invitation expiration date or resetting the declined state if the record was previously declined by the Access Account holder. Once a syst_access_account_instance_assocs record is accepted, it may not be re-invited again using this process until the record is revoked (deleted). syst_access_account_instance_assocs are unique to the Access Account and Instance combination and only one such record may exist for that combination at any one time. Parameters access_account_id - the record ID of the Access Account to invite to the Instance. instance_id - the Instance record ID to which the Access Account is being invited. opts - a keyword list of optional parameters used to set record values and behaviors. Available options are: create_accepted - will create a syst_access_account_instance_assocs record which is already accepted when set true . The default value is false . expiration_days - for records that are not created as accepted and act as true invitations, this option sets the number of days in which an Access Account holder may accept the invitation. After this time the invitation is considered expired and must be re-invited before it can be used to grant access again. The default value for this option is 30 days.","ref":"MsbmsSystAuthentication.html#invite_to_instance/3","title":"MsbmsSystAuthentication.invite_to_instance/3","type":"function"},{"doc":"Indicates whether the requested password is disallowed. This function returns a tuple in the form of {:ok, &lt;disallowed&gt;} where the disallowed value is either true meaning that the requested password is disallowed or false if the password is available for use. Regardless of the return of this function, disallowed passwords are only prevented for use if the effective disallow_compromised Password Rule for the Access Account attempting authentication is set. Parameters password - the plaintext password to test for disallowed status. Examples When a password has been previously disallowed and cannot be used as a user credential. iex&gt; MsbmsSystAuthentication . password_disallowed ( &quot;Is Disallowed&quot; ) { :ok , true } When a password has not been previously disallowed. iex&gt; MsbmsSystAuthentication . password_disallowed ( &quot;Is Not Disallowed&quot; ) { :ok , false }","ref":"MsbmsSystAuthentication.html#password_disallowed/1","title":"MsbmsSystAuthentication.password_disallowed/1","type":"function"},{"doc":"Indicates whether the requested password is disallowed, raising on error. This function works the same as disallowed_password/1 except this function returns a simple boolean value rather than a result tuple. If an error is encountered an exception is raised. Parameters password - the plaintext password to test for disallowed status. Examples When a password has been previously disallowed and cannot be used as a user credential. iex&gt; MsbmsSystAuthentication . password_disallowed? ( &quot;Is Disallowed&quot; ) true When a password has not been previously disallowed. iex&gt; MsbmsSystAuthentication . password_disallowed? ( &quot;Is Not Disallowed&quot; ) false","ref":"MsbmsSystAuthentication.html#password_disallowed?/1","title":"MsbmsSystAuthentication.password_disallowed?/1","type":"function"},{"doc":"Purges the requested Access Account if the Access Account State is of a purge eligible functional type. Parameters access_account - is either the record ID of the Access Account to purge or the populated MsbmsSystAccessAccount.Data.SystAccessAccounts struct representing the record to purge. Example iex&gt; { :ok , target_access_account } = ...&gt; MsbmsSystAuthentication . get_access_account_by_name ( &quot;example_purge_accnt&quot; ) iex&gt; MsbmsSystAuthentication . purge_access_account ( target_access_account ) :ok","ref":"MsbmsSystAuthentication.html#purge_access_account/1","title":"MsbmsSystAuthentication.purge_access_account/1","type":"function"},{"doc":"Revokes the access or invitation to access an Instance from the given Access Account. Simply put, Access Accounts are both invited and granted access to Instances via Access Account Instance Association records (see: MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs ) and this function deletes those records. This has the effect of revoking the invitation to access an Instance from the Access Account/Credential Type combination. Records in any state of invited, accepted, or declined may be revoked/deleted using this function. Parameters access_account_instance_assoc - this value may be either the populated MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs struct to revoke or the record ID of the record to revoke.","ref":"MsbmsSystAuthentication.html#revoke_instance_access/1","title":"MsbmsSystAuthentication.revoke_instance_access/1","type":"function"},{"doc":"Revokes the access or invitation to access an Instance from the given Access Account/Credential Type combination, referencing the record by its composite key values. This function performs the same action as revoke_instance_access/1 but identified the record being revoked (deleted) using its composite/candidate key values. Parameters access_account_id - the record ID of the Access Account from which the invitation to access is being revoked. instance_id - the Instance record ID from which the Access Account had previously been invited to access.","ref":"MsbmsSystAuthentication.html#revoke_instance_access/2","title":"MsbmsSystAuthentication.revoke_instance_access/2","type":"function"},{"doc":"Updates the maintainable fields of a given Access Account record. Parameters access_account - either the record ID value of the Access Account to update or is the complete MsbmsSystAccessAccount.Data.SystAccessAccounts struct representing the before-update state of the Access Account record. access_account_params - a map containing those attributes to be changed along with their new values. Example iex&gt; { :ok , target_access_account } = ...&gt; MsbmsSystAuthentication . get_access_account_by_name ( &quot;example_accnt&quot; ) iex&gt; { :ok , updated_access_account } = ...&gt; MsbmsSystAuthentication . update_access_account ( ...&gt; target_access_account , ...&gt; %{ external_name : &quot;Updated Example Account Name&quot; } ...&gt; ) iex&gt; % MsbmsSystAuthentication.Data.SystAccessAccounts { ...&gt; external_name : &quot;Updated Example Account Name&quot; ...&gt; } = updated_access_account","ref":"MsbmsSystAuthentication.html#update_access_account/2","title":"MsbmsSystAuthentication.update_access_account/2","type":"function"},{"doc":"Updates an existing Global Network Rule with new values. This function works similar to create_global_network_rule/1 but updates an existing Global Network Rule record rather than creating a new one. On successful update, a result tuple in the form {:ok, &lt;record&gt;} is returned where the &lt;record&gt; is the fully populated Data struct of the record just updated. If an exception is raised this function will return a failure tuple in the form of {:error, &lt;exception data&gt;} . Parameters global_network_rule - this value is either a fully populated MsbmsSystAuthentication.Data.SystGlobalNetworkRules struct of an existing Global Network Rule record or the ID of such a record. If the data struct is provided, Ecto optimistic locking is applied to the update operation. update_params - a map representing the values to use when updating the Global Network Rule. All parameters are optional, with omission meaning that the existing value should retain its current value. The available parameter values are: ordering - the order in which the record should apply relative to other Global Network Rule records. lower ordering values take precedence over higher ordering values. If the ordering value in the parameters matches the ordering value of an existing Global Network Rule record, the updated record will be treated as an &quot;insert before&quot; record, with the existing records being reordered to be after the newly updated record, recursively. functional_type - defines what action the rule specifies once matched. The possible functional types are :allow which means the rule intends to explicitly allow the associated IP Address(es) to attempt authentication or :deny which explicitly prevents the IP Address(es) from attempting an authorization. ip_host_or_network - a single Host IP Address or a single CIDR network used in matching user Host IP Addresses to rules. Note that if this value is provided that the ip_host_range_lower and ip_host_range_upper values must be nil. ip_host_range_lower - defines the lower bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_upper parameter must also be provided and the ip_host_or_network parameter value must be nil. ip_host_range_upper - defines the upper bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_lower parameter must also be provided and the ip_host_or_network parameter value must be nil. Note that either the ip_host_or_network parameter or the ip_host_range_lower and ip_host_range_upper are required and exclusive.","ref":"MsbmsSystAuthentication.html#update_global_network_rule/2","title":"MsbmsSystAuthentication.update_global_network_rule/2","type":"function"},{"doc":"Updates an existing Instance Network Rule with new values. This function works similar to create_instance_network_rule/2 but updates an existing Instance Network Rule record rather than creating a new one. On successful update, a result tuple in the form {:ok, &lt;record&gt;} is returned where the &lt;record&gt; is the fully populated Data struct of the record just updated. If an exception is raised this function will return a failure tuple in the form of {:error, &lt;exception data&gt;} . Parameters instance_network_rule - this value is either a fully populated MsbmsSystAuthentication.Data.SystInstanceNetworkRules struct of an existing Instance Network Rule record or the ID of such a record. If the data struct is provided, Ecto optimistic locking is applied to the update operation. update_params - a map representing the values to use when updating the Instance Network Rule. All parameters are optional, with omission meaning that the existing value should retain its current value. The available parameter values are: ordering - the order in which the record should apply relative to other Instance Network Rule records. lower ordering values take precedence over higher ordering values. If the ordering value in the parameters matches the ordering value of an existing Instance Network Rule record, the updated record will be treated as an &quot;insert before&quot; record, with the existing records being reordered to be after the newly updated record, recursively. functional_type - defines what action the rule specifies once matched. The possible functional types are :allow which means the rule intends to explicitly allow the associated IP Address(es) to attempt authentication or :deny which explicitly prevents the IP Address(es) from attempting an authorization. ip_host_or_network - a single Host IP Address or a single CIDR network used in matching user Host IP Addresses to rules. Note that if this value is provided that the ip_host_range_lower and ip_host_range_upper values must be nil. ip_host_range_lower - defines the lower bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_upper parameter must also be provided and the ip_host_or_network parameter value must be nil. ip_host_range_upper - defines the upper bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_lower parameter must also be provided and the ip_host_or_network parameter value must be nil. Note that either the ip_host_or_network parameter or the ip_host_range_lower and ip_host_range_upper are required and exclusive.","ref":"MsbmsSystAuthentication.html#update_instance_network_rule/2","title":"MsbmsSystAuthentication.update_instance_network_rule/2","type":"function"},{"doc":"Updates an existing Owner Network Rule with new values. This function works similar to create_owner_network_rule/2 but updates an existing Owner Network Rule record rather than creating a new one. On successful update, a result tuple in the form {:ok, &lt;record&gt;} is returned where the &lt;record&gt; is the fully populated Data struct of the record just updated. If an exception is raised this function will return a failure tuple in the form of {:error, &lt;exception data&gt;} . Parameters owner_network_rule - this value is either a fully populated MsbmsSystAuthentication.Data.SystOwnerNetworkRules struct of an existing Owner Network Rule record or the ID of such a record. If the data struct is provided, Ecto optimistic locking is applied to the update operation. update_params - a map representing the values to use when updating the Owner Network Rule. All parameters are optional, with omission meaning that the existing value should retain its current value. The available parameter values are: ordering - the order in which the record should apply relative to other Owner Network Rule records. lower ordering values take precedence over higher ordering values. If the ordering value in the parameters matches the ordering value of an existing Owner Network Rule record, the updated record will be treated as an &quot;insert before&quot; record, with the existing records being reordered to be after the newly updated record, recursively. functional_type - defines what action the rule specifies once matched. The possible functional types are :allow which means the rule intends to explicitly allow the associated IP Address(es) to attempt authentication or :deny which explicitly prevents the IP Address(es) from attempting an authorization. ip_host_or_network - a single Host IP Address or a single CIDR network used in matching user Host IP Addresses to rules. Note that if this value is provided that the ip_host_range_lower and ip_host_range_upper values must be nil. ip_host_range_lower - defines the lower bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_upper parameter must also be provided and the ip_host_or_network parameter value must be nil. ip_host_range_upper - defines the upper bound of a simple range of IP Addresses, inclusive, to which rule should apply. When this value is provided the ip_host_range_lower parameter must also be provided and the ip_host_or_network parameter value must be nil. Note that either the ip_host_or_network parameter or the ip_host_range_lower and ip_host_range_upper are required and exclusive.","ref":"MsbmsSystAuthentication.html#update_owner_network_rule/2","title":"MsbmsSystAuthentication.update_owner_network_rule/2","type":"function"},{"doc":"Associates access accounts with the instances for which they are allowed to authenticate to. Note that being able to authenticate to an instance is not the same as having authorized rights within the instance; authorization is handled by the instance directly.","ref":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.html","title":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystAccessAccountInstanceAssocs.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystAccessAccountInstanceAssocs.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystAccessAccountInstanceAssocs.t/0","type":"type"},{"doc":"Contains the known login accounts which are used solely for the purpose of authentication of users. Authorization is handled on a per-instance basis within the application.","ref":"MsbmsSystAuthentication.Data.SystAccessAccounts.html","title":"MsbmsSystAuthentication.Data.SystAccessAccounts","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystAccessAccounts.insert_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystAccessAccounts.html#insert_changeset/2","title":"MsbmsSystAuthentication.Data.SystAccessAccounts.insert_changeset/2","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystAccessAccounts.update_changeset/3 .","ref":"MsbmsSystAuthentication.Data.SystAccessAccounts.html#update_changeset/3","title":"MsbmsSystAuthentication.Data.SystAccessAccounts.update_changeset/3","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystAccessAccounts.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystAccessAccounts.t/0","type":"type"},{"doc":"Hosts the credentials by which a user or external system will prove its identity. Note that not all credential types are available for authentication with all identity types.","ref":"MsbmsSystAuthentication.Data.SystCredentials.html","title":"MsbmsSystAuthentication.Data.SystCredentials","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystCredentials.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystCredentials.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystCredentials.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystCredentials.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystCredentials.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystCredentials.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystCredentials.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystCredentials.t/0","type":"type"},{"doc":"A simple listing of &quot;banned&quot; IP address which are not allowed to authenticate their users to the system. This registry differs from the syst_*_network_rules tables in that IP addresses here are registered as the result of automatic system heuristics whereas the network rules are direct expressions of system administrator intent. The timing between these two mechanisms is also different in that records in this table are evaluated prior to an authentication attempt and most network rules are processed in the authentication attempt sequence.","ref":"MsbmsSystAuthentication.Data.SystDisallowedHosts.html","title":"MsbmsSystAuthentication.Data.SystDisallowedHosts","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystDisallowedHosts.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystDisallowedHosts.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystDisallowedHosts.insert_changeset/1","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystDisallowedHosts.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystDisallowedHosts.t/0","type":"type"},{"doc":"Represents a SHA-1 hashed password which is expected to be listed in the dictionaries used by attackers to compromised online accounts. Disallowed passwords, as the name suggests, are used to prevent users selecting these known compromised passwords when the password rule to disallow known passwords is in effect.","ref":"MsbmsSystAuthentication.Data.SystDisallowedPasswords.html","title":"MsbmsSystAuthentication.Data.SystDisallowedPasswords","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystDisallowedPasswords.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystDisallowedPasswords.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystDisallowedPasswords.insert_changeset/1","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystDisallowedPasswords.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystDisallowedPasswords.t/0","type":"type"},{"doc":"Expresses globally applicable rules concerning which hosts, as identified by IP address, may or may not attempt to authenticate with the system. These are part of a firewall-like set of rules of which those defined in this 'global' scope are applied prior to any SystOwnerNetworkRules and SystInstanceNetworkRules .","ref":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.html","title":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystGlobalNetworkRules.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystGlobalNetworkRules.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystGlobalNetworkRules.t/0","type":"type"},{"doc":"Establishes rules defining the minimum allowed password complexity on a global, whole system basis. Rules defined here may be further strengthened by rules defined by SystOwnerPasswordRules , but may not be weakened by those definitions.","ref":"MsbmsSystAuthentication.Data.SystGlobalPasswordRules.html","title":"MsbmsSystAuthentication.Data.SystGlobalPasswordRules","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystGlobalPasswordRules.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystGlobalPasswordRules.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystGlobalPasswordRules.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystGlobalPasswordRules.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystGlobalPasswordRules.t/0","type":"type"},{"doc":"The identities with which access accounts are identified to the system. The most common example of an identity would be a user name such as an email address.","ref":"MsbmsSystAuthentication.Data.SystIdentities.html","title":"MsbmsSystAuthentication.Data.SystIdentities","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystIdentities.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystIdentities.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystIdentities.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystIdentities.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystIdentities.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystIdentities.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystIdentities.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystIdentities.t/0","type":"type"},{"doc":"Expresses Instance specific rules concerning which hosts, as identified by IP address, may or may not attempt to authenticate with the system. These are part of a firewall-like set of rules of which those defined in this 'instance' scope are evaluated after any SystGlobalNetworkRules and SystOwnerNetworkRules defined rules have been processed.","ref":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.html","title":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystInstanceNetworkRules.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystInstanceNetworkRules.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystInstanceNetworkRules.t/0","type":"type"},{"doc":"Expresses Owner specific rules concerning which hosts, as identified by IP address, may or may not attempt to authenticate with the system. These are part of a firewall-like set of rules of which those defined in this 'owner' scope are evaluated after any SystGlobalNetworkRules defined rules and prior to any SystInstanceNetworkRules defined rules.","ref":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.html","title":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystOwnerNetworkRules.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystOwnerNetworkRules.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystOwnerNetworkRules.t/0","type":"type"},{"doc":"Establishes Owner specific rules defining the minimum allowed password complexity. Rules defined here may further strengthen the rules defined by SystGlobalPasswordRules , but may not be weaken those definitions.","ref":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.html","title":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystOwnerPasswordRules.insert_changeset/1 .","ref":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.html#insert_changeset/1","title":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.insert_changeset/1","type":"function"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystOwnerPasswordRules.update_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.html#update_changeset/2","title":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.update_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystOwnerPasswordRules.t/0","type":"type"},{"doc":"A history of previous user passwords credentials kept for the purpose of enforcing the reused password exclusion rule.","ref":"MsbmsSystAuthentication.Data.SystPasswordHistory.html","title":"MsbmsSystAuthentication.Data.SystPasswordHistory","type":"module"},{"doc":"See MsbmsSystAuthentication.Data.Validators.SystPasswordHistory.insert_changeset/2 .","ref":"MsbmsSystAuthentication.Data.SystPasswordHistory.html#insert_changeset/2","title":"MsbmsSystAuthentication.Data.SystPasswordHistory.insert_changeset/2","type":"function"},{"doc":"","ref":"MsbmsSystAuthentication.Data.SystPasswordHistory.html#t:t/0","title":"MsbmsSystAuthentication.Data.SystPasswordHistory.t/0","type":"type"},{"doc":"Types used by the Authentication module.","ref":"MsbmsSystAuthentication.Types.html","title":"MsbmsSystAuthentication.Types","type":"module"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_id/0","title":"MsbmsSystAuthentication.Types.access_account_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_instance_assoc_id/0","title":"MsbmsSystAuthentication.Types.access_account_instance_assoc_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_instance_assoc_params/0","title":"MsbmsSystAuthentication.Types.access_account_instance_assoc_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_name/0","title":"MsbmsSystAuthentication.Types.access_account_name/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_params/0","title":"MsbmsSystAuthentication.Types.access_account_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_state_id/0","title":"MsbmsSystAuthentication.Types.access_account_state_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:access_account_state_name/0","title":"MsbmsSystAuthentication.Types.access_account_state_name/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:account_identifier/0","title":"MsbmsSystAuthentication.Types.account_identifier/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:applied_network_rule/0","title":"MsbmsSystAuthentication.Types.applied_network_rule/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:authentication_extended_operations/0","title":"MsbmsSystAuthentication.Types.authentication_extended_operations/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:authentication_operations/0","title":"MsbmsSystAuthentication.Types.authentication_operations/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:authentication_state/0","title":"MsbmsSystAuthentication.Types.authentication_state/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:authentication_status/0","title":"MsbmsSystAuthentication.Types.authentication_status/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential/0","title":"MsbmsSystAuthentication.Types.credential/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_confirm_result/0","title":"MsbmsSystAuthentication.Types.credential_confirm_result/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_confirm_state/0","title":"MsbmsSystAuthentication.Types.credential_confirm_state/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_extended_state/0","title":"MsbmsSystAuthentication.Types.credential_extended_state/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_id/0","title":"MsbmsSystAuthentication.Types.credential_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_params/0","title":"MsbmsSystAuthentication.Types.credential_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_reset_reason/0","title":"MsbmsSystAuthentication.Types.credential_reset_reason/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_set_failures/0","title":"MsbmsSystAuthentication.Types.credential_set_failures/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_type_id/0","title":"MsbmsSystAuthentication.Types.credential_type_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_type_name/0","title":"MsbmsSystAuthentication.Types.credential_type_name/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:credential_types/0","title":"MsbmsSystAuthentication.Types.credential_types/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:disallowed_host_id/0","title":"MsbmsSystAuthentication.Types.disallowed_host_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:global_network_rule_params/0","title":"MsbmsSystAuthentication.Types.global_network_rule_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:host_address/0","title":"MsbmsSystAuthentication.Types.host_address/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:identity_id/0","title":"MsbmsSystAuthentication.Types.identity_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:identity_params/0","title":"MsbmsSystAuthentication.Types.identity_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:identity_type_id/0","title":"MsbmsSystAuthentication.Types.identity_type_id/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:identity_type_name/0","title":"MsbmsSystAuthentication.Types.identity_type_name/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:identity_types/0","title":"MsbmsSystAuthentication.Types.identity_types/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:instance_network_rule_params/0","title":"MsbmsSystAuthentication.Types.instance_network_rule_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:network_rule_functional_type/0","title":"MsbmsSystAuthentication.Types.network_rule_functional_type/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:network_rule_precedence/0","title":"MsbmsSystAuthentication.Types.network_rule_precedence/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:owner_network_rule_params/0","title":"MsbmsSystAuthentication.Types.owner_network_rule_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:password_rule/0","title":"MsbmsSystAuthentication.Types.password_rule/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:password_rule_params/0","title":"MsbmsSystAuthentication.Types.password_rule_params/0","type":"type"},{"doc":"","ref":"MsbmsSystAuthentication.Types.html#t:password_rule_violations/0","title":"MsbmsSystAuthentication.Types.password_rule_violations/0","type":"type"}]