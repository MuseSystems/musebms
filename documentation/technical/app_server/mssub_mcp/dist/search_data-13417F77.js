searchData={"items":[{"type":"module","title":"DevSupport","doc":"","ref":"DevSupport.html"},{"type":"function","title":"DevSupport.start_dev_environment/1","doc":"","ref":"DevSupport.html#start_dev_environment/1"},{"type":"function","title":"DevSupport.stop_dev_environment/0","doc":"","ref":"DevSupport.html#stop_dev_environment/0"},{"type":"module","title":"MssubMcp.Types","doc":"Defines data types used in operating the MCP Subsystem.","ref":"MssubMcp.Types.html"},{"type":"type","title":"MssubMcp.Types.session_name/0","doc":"","ref":"MssubMcp.Types.html#t:session_name/0"},{"type":"type","title":"MssubMcp.Types.tenant_bootstrap_params/0","doc":"","ref":"MssubMcp.Types.html#t:tenant_bootstrap_params/0"},{"type":"type","title":"MssubMcp.Types.tenant_bootstrap_result/0","doc":"","ref":"MssubMcp.Types.html#t:tenant_bootstrap_result/0"},{"type":"module","title":"MssubMcp.Updater","doc":"Provides an API for bootstrapping and migration application for the MCP\nsubsystem.","ref":"MssubMcp.Updater.html"},{"type":"function","title":"MssubMcp.Updater.child_spec/1","doc":"","ref":"MssubMcp.Updater.html#child_spec/1"},{"type":"function","title":"MssubMcp.Updater.start_link/1","doc":"","ref":"MssubMcp.Updater.html#start_link/1"},{"type":"module","title":"MssubMcp","doc":"# MssubMcp - Global Systems Management\n\nAPI for the Master Control Program Subsystem.\n\nThe Master Control Program Subsystem provides global services such as tenant and\nApplication Instance management, global user authentication, global system\nconfiguration services, and a global enumeration service.","ref":"MssubMcp.html"},{"type":"function","title":"MssubMcp.accept_instance_invite/1","doc":"Accepts the invitation made to an Access Account to access an Instance.\n\nThis process is only needed in the case where a\n`syst_access_account_instance_assocs` invitation may be accepted or declined\nby the Access Account holder.  To be accepted in this process the invitation\nrecord must have been previously created (see `invite_to_instance/3`), must\nnot be expired, previously declined, or previously accepted; trying to accept\na record in such a state will result in an error tuple being returned.\n\nNaturally, the Access Account holder may choose to never accept or decline the\ninvitation and may simply allow the invitation to expire.","ref":"MssubMcp.html#accept_instance_invite/1"},{"type":"function","title":"Parameters - MssubMcp.accept_instance_invite/1","doc":"* `access_account_instance_assoc` - this value may be either the populated\n  `Msdata.SystAccessAccountInstanceAssocs` struct to\n  accept or the record ID of the record to accept.","ref":"MssubMcp.html#accept_instance_invite/1-parameters"},{"type":"function","title":"MssubMcp.accept_instance_invite/2","doc":"Accepts the invitation made to an Access Account to access an Instance,\nreferencing the record by its composite key values.\n\nThis function performs the same process as `accept_instance_invite/1`, but\nwill look up the record to accept using the Access Account, Instance, and\nCredential Type record ID values.","ref":"MssubMcp.html#accept_instance_invite/2"},{"type":"function","title":"Parameters - MssubMcp.accept_instance_invite/2","doc":"* `access_account_id` - the record ID of the Access Account accepting the\n  invitation to the Instance.\n\n  * `instance_id` - the Instance record ID to which the Access Account has\n  been invited.","ref":"MssubMcp.html#accept_instance_invite/2-parameters"},{"type":"function","title":"MssubMcp.access_account_credential_recoverable!/1","doc":"Indicates if an Access Account's Password Credential is recoverable or not.\n\nAccess Account Password Credentials are only recoverable when they: 1) exist,\nand 2) are not already awaiting recovery.  When the Password Credential is\nrecoverable this function will return a simple `:ok` value.  If the Access\nAccount's Password Credential already has an issued recovery underway, the\nvalue `:existing_recovery` is returned.  If the Access Account lacks a\nPassword Credential record to recover, the value `:not_found` is returned. Any\nerrors encountered cause the function to raise an exception.","ref":"MssubMcp.html#access_account_credential_recoverable!/1"},{"type":"function","title":"Parameters - MssubMcp.access_account_credential_recoverable!/1","doc":"* `access_account_id` - the record ID of the Access Account which owns the\n  Password Credential to test for recoverability.","ref":"MssubMcp.html#access_account_credential_recoverable!/1-parameters"},{"type":"function","title":"MssubMcp.access_account_exists?/1","doc":"Tests to see if a specific Access Account, or any Access Account, record\nexists in the database.\n\nThe functions provides an optional test on either an Access Account record's\nInternal Name or record ID value.  If no selectivity option is made, the test\nchecks if any Access Account records exist in the database at all.\n\nIf an appropriate Access Account record is found, the function returns true,\notherwise false.  Any other condition is considered an error and will\nresult in an error tuple being returned indicating the cause of the error.","ref":"MssubMcp.html#access_account_exists?/1"},{"type":"function","title":"Parameters - MssubMcp.access_account_exists?/1","doc":"* `opts` - an optional Keyword List of optional parameters which can\n  influence the result of calling the function.  The available options are:\n\n    * `access_account_id` - tests if a specific Access Account record exists\n    as referenced by its record ID value.\n\n    * `access_account_name` - tests if a specific Access Account record exists\n    as referenced by its Internal Name.","ref":"MssubMcp.html#access_account_exists?/1-parameters"},{"type":"function","title":"Examples - MssubMcp.access_account_exists?/1","doc":"Check if any Access Account record exists.\n\n    iex> MssubMcp.access_account_exists?()\n    true\n\nCheck if a specific Access Account record exists.\n\n    iex> MssubMcp.access_account_exists?(access_account_name: \"example_accnt\")\n    true\n\nIf a non-existent Access Account is requested, the function indicates the record was\nnot found.\n\n    iex> MssubMcp.access_account_exists?(access_account_name: \"nonexistent_access_account\")\n    false","ref":"MssubMcp.html#access_account_exists?/1-examples"},{"type":"function","title":"MssubMcp.authenticate_api_token/5","doc":"Identities and authenticates an Access Account using an API Token\nAuthenticator.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the API Token Authenticator was successfully authenticated.  The value\nelement of the success tuple, the Authentication State, carries information\nabout the actual outcome of the authentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nThe authentication process executed by this function is not interruptible.\nThe initial call to this function must contain all parameter values required\nto fully complete the authentication process.  Any missing information will\ncause the authentication attempt to be rejected.","ref":"MssubMcp.html#authenticate_api_token/5"},{"type":"function","title":"Parameters - MssubMcp.authenticate_api_token/5","doc":"* `identifier` - the identifier defined by the API Token identifier.\n  Typically this would have been a system generated random string of\n  characters available at API Token Authenticator creation time.\n\n  * `plaintext_token` - the plaintext API Token credential.  Typically this\n  would have been a system generated random string of characters available at\n  API Token Authenticator creation time.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function or are optionally required.  The available\n  options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `instance_id` - the record ID of the Application Instance to which the\n    Access Account holder wishes to authenticate.  This value is required must\n    be provided at function call time or the Authentication State will be\n    returned in a `:rejected` status.  In special cases where the\n    authentication attempt is outside of the context of a specific Instance,\n    the special value `:bypass` may be used for this option indicating that\n    the authentication attempt may skip the permitted Instance check. There is\n    no default value (default `nil`).\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction if the authenticator allows for an interruptable\n    authentication process.  The default deadline allows for 5 minutes to\n    complete the authentication process.","ref":"MssubMcp.html#authenticate_api_token/5-parameters"},{"type":"function","title":"MssubMcp.authenticate_email_password/2","doc":"Identifies and authenticates an Access Account on the basis of a starting\nAuthentication State value constructed for Email/Password authentication.\n\nThis function works the same as `authenticate_email_password/4` except that it\nexpects an existing Authentication State value to contain the basic\ninformation to process the authentication, with other parameters provided via\nthe `opts` parameter.  This function is typically used to continue a\npreviously interrupted call to `authenticate_email_password/4` and supplying\nit the necessary additional information to continue processing the\nauthentication to completion.\n\nThe options available for use here are the same as for\n`authenticate_email_password/4`.  However the options specified here are only\nvalid if they are applied to authentication process operations that are still\npending when this function is called.  Options influencing operations\npreviously processed, such as `owning_owner_id` as used in Access Account\nidentification will simply be ignored if they are different in the resumption\nof the process than they were in the initiating call.\n\nSee `authenticate_email_password/4` for a discussion of the possible return\nvalues.","ref":"MssubMcp.html#authenticate_email_password/2"},{"type":"function","title":"MssubMcp.authenticate_email_password/4","doc":"Identities and authenticates an Access Account using an Email/Password\nAuthenticator.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the authentication was successful.  The value element of the success\ntuple, the Authentication State, carries information about the outcome of the\nauthentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nEmail/Password authentication is an interruptible process, meaning that this\nfunction may return prior to the authentication having been fully processed to\na final result.  The two most common examples of when this partial processing\nmay happen are 1) the Application Instance was not initially identified; and\n2) further authentication is required such as when Multi-Factor Authentication\nis required.  In these cases the returned Authentication State is resubmitted\nfor process via `authenticate_email_password/2` along with the updated\ninformation which allows authentication processing to complete.","ref":"MssubMcp.html#authenticate_email_password/4"},{"type":"function","title":"Parameters - MssubMcp.authenticate_email_password/4","doc":"* `email_address` - this is the username in the form of an email address\n  used to identify the correct Email Identity record which in turn identifies\n  a specific Access Account.\n\n  * `plaintext_pwd` - the Access Account holder's password as submitted in\n  plaintext.  This is the credential that will be authenticated using the\n  Password Credential record belonging to the identified Access Account.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function, are optionally required, or are required on a\n  deferred basis (eventually required).  The available options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `instance_id` - the record ID of the Application Instance to which the\n    Access Account holder wishes to authenticate.  A final value for\n    instance_id is not required when the Email/Password authentication process\n    is initiated but is required for it to complete.  If this value is not\n    initially provided, the function will be `interrupted` returning an\n    Authentication State status value of `:pending`.  Deferral may be\n    appropriate if, for example, we want to allow the Access Account holder to\n    select the specific Instance they wish to access from a list of their\n    permitted Instances.  Final resolution of the value must reference an\n    Instance for which the Access Account permitted authentication attempts or\n    must be set `:bypass` if the authentication attempt is a special case\n    where a specific Instance is not relevant.  The default value of this\n    option is `nil`.\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction, such as selecting an Instance or providing an MFA credential.\n    The default value is 5 minutes from the time the authentication process is\n    started.","ref":"MssubMcp.html#authenticate_email_password/4-parameters"},{"type":"function","title":"MssubMcp.authenticate_recovery_token/4","doc":"Confirms an Access Account's password Recovery Token Authenticator.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the Recovery Token Authenticator was successfully authenticated.  The\nvalue element of the success tuple, the Authentication State, carries\ninformation about the actual outcome of the authentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nIf the Authentication State's status is returned as `:authenticated`, the\nprocess of Password Credential recovery may be undertaken.  On success the\nRecovery Token Authenticator is deleted from the system, but no further action\nis taken by this function.  The actual process of recovering a password is\nexternal to this function.\n\nThe authentication process executed by this function is not interruptible.\nThe initial call to this function must contain all parameter values required\nto fully complete the authentication process.  Any missing information will\ncause the authentication attempt to be rejected.","ref":"MssubMcp.html#authenticate_recovery_token/4"},{"type":"function","title":"Parameters - MssubMcp.authenticate_recovery_token/4","doc":"* `identifier` - the identifier defined by the Recovery Token identifier.\n  Typically this would have been a system generated random string of\n  characters available at Recovery Token Authenticator creation time.\n\n  * `plaintext_token` - the plaintext Recovery Token credential.  Typically\n  this would have been a system generated random string of characters\n  available at Recovery Token Authenticator creation time.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function or are optionally required.  The available\n  options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction if the authenticator allows for an interruptable\n    authentication process.  The default deadline allows for 5 minutes to\n    complete the authentication process.","ref":"MssubMcp.html#authenticate_recovery_token/4-parameters"},{"type":"function","title":"MssubMcp.authenticate_validation_token/4","doc":"Confirms a specific Access Account Identity record as being valid for use.\n\nThe return value of this function is a result tuple where a success tuple\n(`{:ok,  }`) indicates that the function processed without error, not\nthat the validation was successful.  The value element of the success\ntuple, the Authentication State, carries information about the actual outcome\nof the authentication attempt; see\n`t:MscmpSystAuthn.Types.AuthenticationState.t/0` for more about the\nspecific information carried by the Authentication State value.  Otherwise,\nan error tuple is returned indicating the nature of the processing failure.\n\nIf the Authentication State's status is returned as `:authenticated`, the\nvalidation process succeeded.  On success the target Identity record has its\n`validated` field set to the current date/time and the Validation\nAuthenticator is deleted from the system.\n\nThe authentication process executed by this function is not interruptible.\nThe initial call to this function must contain all parameter values required\nto fully complete the authentication process.  Any missing information will\ncause the authentication attempt to be rejected.","ref":"MssubMcp.html#authenticate_validation_token/4"},{"type":"function","title":"Parameters - MssubMcp.authenticate_validation_token/4","doc":"* `identifier` - the identifier defined by the Validation Token identifier.\n  Typically this would have been a system generated random string of\n  characters available at Validation Token Authenticator creation time.\n\n  * `plaintext_token` - the plaintext Validation Token credential.  Typically\n  this would have been a system generated random string of characters\n  available at Validation Token Authenticator creation time.\n\n  * `host_address` - the apparent origin host IP address from where the\n  authentication attempt is originating.  This value is used in the\n  enforcement of applicable Network Rules.\n\n  * `opts` - a Keyword List of values that either optionally override default\n  behaviors of this function or are optionally required.  The available\n  options are:\n\n    * `owning_owner_id` - if the Access Account is an Owned Access Account,\n    this value must be set to the record ID of the Access Account's Owner.\n    Otherwise it must be set `nil` or not provided.  The default value is\n    `nil`.\n\n    * `host_ban_rate_limit` - overrides the default host IP address based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 30\n    attempts over a time window of 2 hours.\n\n    * `identifier_rate_limit` - overrides the default identifier based Rate\n    Limit.  The value is set via a tuple in the following form:\n    `{ ,  }`.  The default value is 5\n    attempts over a time window of 30 minutes.\n\n    * `deadline_minutes` - overrides the default number of minutes that an\n    authentication process can take before being rejected for taking too long.\n    This deadline is needed because an arbitrary time can pass due to user\n    interaction if the authenticator allows for an interruptable\n    authentication process.  The default deadline allows for 5 minutes to\n    complete the authentication process.","ref":"MssubMcp.html#authenticate_validation_token/4-parameters"},{"type":"function","title":"MssubMcp.bootstrap_tenant/1","doc":"Bootstraps the initial setup of either the MCP Application Platform or a new\ntenant.\n\nIn this context, a \"tenant\" is the combination of an MCP Owner Record, a\nlinked Access Account record and related Authenticator, and an Application\nInstance.\n\nThis process also bootstraps the system Owner and Platform Administrator\nAccess Account if the Application Platform itself has not been previously set\nup.","ref":"MssubMcp.html#bootstrap_tenant/1"},{"type":"function","title":"MssubMcp.compare_scopes/2","doc":"Compares two Scope values and returns a value indicating the relative\nexpansiveness of Scope.\n\nScopes restrict, to varying degrees, how much data a user might access for a\ngiven Right.  We can compare Scopes relative to how much more or less data\na Scope grants to a user and that's what this function does.  Scopes granting\nmore expansive access to data are considered greater than Scopes granting data\non more restrictive terms.  Of course any two scopes may be equal as well.\n\nThe return value is an atom indicating whether the Scope in the first\nparameter position is greater than, less than, or equal to the expansiveness\nof Scope in the second parameter position.  These return values are:\n\n  * `:eq` - both the first and second Scopes are equal in terms of the\n  expansiveness and are considered 'equal' to each other.\n\n  * `:gt` - the first Scope parameter confers a greater expansiveness than the\n  second Scope parameter and is considered 'greater than' the Scope of the\n  second parameter.\n\n  * `:lt` - the first Scope parameter confers a lesser expansiveness than the\n  second Scope parameter and is considered 'less than' the Scope of the second\n  parameter.","ref":"MssubMcp.html#compare_scopes/2"},{"type":"function","title":"MssubMcp.create_access_account/1","doc":"Create a new Access Account.","ref":"MssubMcp.html#create_access_account/1"},{"type":"function","title":"Parameters - MssubMcp.create_access_account/1","doc":"* `access_account_params` - a map of required and optional parameters which\n  define the new Access Account record.  Required attributes in this map are:\n  `internal_name`, `external_name`, `access_account_state_id`, and\n  `allow_global_logins`.","ref":"MssubMcp.html#create_access_account/1-parameters"},{"type":"function","title":"Example - MssubMcp.create_access_account/1","doc":"iex> state = MssubMcp.get_access_account_state_default()\n    iex> {:ok, %Msdata.SystAccessAccounts{}} =\n    ...>   MssubMcp.create_access_account(\n    ...>     %{\n    ...>       internal_name: \"example_create_accnt\",\n    ...>       external_name: \"Create Access Account Example\",\n    ...>       access_account_state_id: state.id,\n    ...>       allow_global_logins: true\n    ...>      }\n    ...>    )","ref":"MssubMcp.html#create_access_account/1-example"},{"type":"function","title":"MssubMcp.create_application/1","doc":"Creates a new Application record.\n\nApplication Subsystems need means by which they can make the `MscmpSystInstance`\ncomponent aware of their existence and this function provides the means by\nwhich to do that.\n\n>##","ref":"MssubMcp.html#create_application/1"},{"type":"function","title":"Note {: .neutral} - MssubMcp.create_application/1","doc":">\n> Note that this function is meant to expose Application record management to\n> the relevant Application Subsystem programs and is not intended for regular\n> management activities by end users.","ref":"MssubMcp.html#create_application/1-note-neutral"},{"type":"function","title":"Parameters - MssubMcp.create_application/1","doc":"* `application_params` - the parameters with which the new Application\n  record should be created.  The following attribute values are available:\n\n    * `internal_name` - a predetermined unique identifier for the Application\n    record for use in programmatic contexts.  This attribute is required and\n    must be unique in the system.\n\n    * `display_name` - a unique, friendly name identifying the Application and\n    for use in user interfaces.  This attribute is required and must be unique\n    in the system.\n\n    * `syst_description` - a user facing description of the Application\n    including any special usage requirements or preconditions.  This\n    attribute is required.","ref":"MssubMcp.html#create_application/1-parameters"},{"type":"function","title":"Examples - MssubMcp.create_application/1","doc":"Creating a new Application record.\n\n    iex> new_app_params = %{\n    ...>   internal_name: \"ex_app1\",\n    ...>   display_name: \"Example App 1\",\n    ...>   syst_description: \"An example application\"\n    ...> }\n    iex> {:ok, %Msdata.SystApplications{}} =\n    ...>   MssubMcp.create_application(new_app_params)","ref":"MssubMcp.html#create_application/1-examples"},{"type":"function","title":"MssubMcp.create_application_context/1","doc":"Creates Application Context records for the identified Application.\n\nApplication Contexts describe the Datastore Contexts each Instance is expected\nto support to allow an Application to access its data.  Application Subsystems\nuse this function to create the any required Application Context records not\nalready registered in the `MscmpSystInstance` data.  Application Contexts are\nused in the creation of `Msdata.SystInstanceContexts` records and provide a\nnumber of default values for the Instance Context records.\n\n>##","ref":"MssubMcp.html#create_application_context/1"},{"type":"function","title":"Note {: .neutral} - MssubMcp.create_application_context/1","doc":">\n> Note that this function is meant to expose Application record management to\n> the relevant Application Subsystem programs and is not intended for regular\n> management activities by end users.","ref":"MssubMcp.html#create_application_context/1-note-neutral"},{"type":"function","title":"Parameters - MssubMcp.create_application_context/1","doc":"* `application_context_params` - a map defining the attributes which will be\n  used to create the new Application Context record.  The attributes are:\n\n    * `internal_name` - a predetermined unique identifier for the Application\n    Context record for use in programmatic contexts.  This attribute is\n    required and must be unique in the system.\n\n    * `display_name` - a unique, friendly name identifying the Application\n    Context and for use in user interfaces.  This attribute is required and\n    must be unique in the system.\n\n    * `application_id` - a reference to the ID value of the parent Application\n    record.  A valid value for this attribute is required unless the\n    `application_name` attribute is set with the Internal Name of an existing\n    Application record.  If both this attribute and the `application_name`\n    attributes are set, the `attribute_name` value will be used to resolve\n    the parent Application.\n\n    * `application_name` - a reference to the Internal Name value of an\n    existing Application record.  This value is used to look-up the\n    `application_id` and so if this attribute is provided with a valid value,\n    the `application_id` attribute may be omitted.  The value of this\n    attribute takes precedence over any value set explicitly in the\n    `application_id` attribute.  If `application_id` is omitted, then this\n    attribute is required.\n\n    * `description` - a description of the Application Context's role in the\n    application and database.  This becomes a comment in the database attached\n    to the database role created for the context.\n\n    * `start_context` - a required boolean value which establishes the default\n    value of derived Instance Context (`Msdata.SystInstanceContexts`)\n    `start_context` settings.  When true, an Instance Context record derived\n    from this Application Context will be, by default, started as active\n    database connections when the parent Instance is started.  False indicates\n    that by default Instance startup will not establish database connections\n    for the context.  This value muse be set `false` for any Application\n    Context defining a Datastore Owner Context or any other Context where the\n    `login_context` is set `false`.\n\n    * `login_context` - a required boolean value which indicates if a derived\n    Instance Context is used to create database connections.  If true, a\n    derived Instance Context record will provide login information to\n    establish a database connection on Instance start so long as its\n    `start_context` value is also `true`.  If this attribute is set `false`\n    the derived Instance Context record will not define a Context capable of\n    logging into the database.\n\n    * `database_owner_context` - a required boolean value which, when true, is\n    designates an Application Context record as establishing the default\n    values for Instance Datastore/database owners.  If true, the\n    `start_context` and `login_context` attributes must be set false as owner\n    contexts are not used for database connectivity not may be started during\n    the Instance start process.","ref":"MssubMcp.html#create_application_context/1-parameters"},{"type":"function","title":"Examples - MssubMcp.create_application_context/1","doc":"Create an database owner Application Context record.\n\n    iex> new_context_params = %{\n    ...>   internal_name: \"ex_app2_owner\",\n    ...>   display_name: \"Example App 2 Owner\",\n    ...>   application_name: \"ex_app2\",\n    ...>   description: \"Database role owning objects for 'ex_app2'.\",\n    ...>   start_context: false,\n    ...>   login_context: false,\n    ...>   database_owner_context: true\n    ...> }\n    iex> {:ok, %Msdata.SystApplicationContexts{}} =\n    ...>   MssubMcp.create_application_context(new_context_params)","ref":"MssubMcp.html#create_application_context/1-examples"},{"type":"function","title":"MssubMcp.create_authenticator_api_token/2","doc":"Creates an API Token Authenticator for the requested Access Account.\n\nOn successful API Token Authenticator creation, a success tuple is returned\nwhere the value element is an Authenticator Result in the form of:\n\n    { :ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"EQH2jj38ha4qnYWAC8VZ\",\n        credential: \"8N5Tp81aeOCrYW9PECANrcwKCroSet3MlMp5BbKb\"\n    }}\n\nIt is important to note that this result value is the only time that the API\nToken Credential plaintext is available.  After the function result is\ndiscarded the credential is no longer obtainable in plaintext form.","ref":"MssubMcp.html#create_authenticator_api_token/2"},{"type":"function","title":"Parameters - MssubMcp.create_authenticator_api_token/2","doc":"* `access_account_id` - the record ID of the Access Account for which to\n  create the API Token Authenticator.\n\n  * `opts` - a Keyword List of optional values which changes the default\n  behavior of the Authenticator creation process.  Available options are:\n\n    * `identity_token_length` - this option overrides the default number of\n    random characters to generate for the API Token Identity identifier. The\n    default number of characters generated is 20.\n\n    * `identity_tokens` - overrides the default character set to use in the\n    generation of the API Token Identity identifier.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `external_name` - API Token Identities permit Access Account holder\n    naming of the Identity as it may be common for an one Access Account to\n    require multiple API Token Authenticators for different purposes.  This\n    option allows that name to be set at Identity creation time.  The default\n    value is `nil`.\n\n    * `credential_token_length` - this option overrides the default number of\n    random characters to generate for the API Token Credential. The default\n    number of characters generated is 40.\n\n    * `credential_tokens` - overrides the default character set to use in the\n    generation of the API Token Credential.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token` - overrides the system generated API Token Credential\n    with the value of this option.  The default is to allow the system to\n    automatically generate the credential.","ref":"MssubMcp.html#create_authenticator_api_token/2-parameters"},{"type":"function","title":"MssubMcp.create_authenticator_email_password/4","doc":"Creates an Email/Password Authenticator for an Access Account.\n\nThis function creates an Email Identity, Password Credential, and optionally\nan Identity Validation Authenticator (created by default).  This function is\ntypically used on adding a new Access Account to the system.  The process is\nwrapped in a database transaction so if any one part of the Authenticator\ncreation process fails, all parts should fail.\n\nThis function will fail if you attempt to create an Authenticator of this\ntype for an Access Account which already has one.  In the case of Email\nIdentity replacement, use the specific Identity process to create a new Email\nIdentity instead of this more expansive process.\n\nOn successful save of the Authenticator records, a success tuple is returned\nwhere the value element of the tuple will include basic data that might be\nrequired for later processing.\n\nIf Email/Password Authenticator was created requiring validation (the\ndefault), the success tuple's value element will include data required to\nprocess the Validation Authenticator:\n\n\n    {:ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"SomeEmail@somedomain.com\",\n        validation_credential: \"Uo0kPoCOZd004g4X7IFWg3iJ7pz7XiBRBDkBGGiu\",\n        validation_identifier: \"5D7i6XmmH0HpYL72tePlEdSUMVL9ygMrEsDSGoTE\"\n    }}\n\n\nNote that this is the only time the Validation Authenticator is provided and\nthe Validation Credential plaintext is not recoverable after this return value\nis provided.\n\nWhen a Validation Authenticator is not created, no validation data will be\nincluded in the result:\n\n\n    {:ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"SomeEmail@somedomain.com\"\n    }}","ref":"MssubMcp.html#create_authenticator_email_password/4"},{"type":"function","title":"Parameters - MssubMcp.create_authenticator_email_password/4","doc":"* `access_account_id` - the Access Account for whom the Email/Password\n  Authenticator is being created.\n\n  * `email_address` - the email address which will identify the Access\n  Account.\n\n  * `plaintext_pwd` - the candidate password for use a the Credential in\n  Email/Password authentication processes.","ref":"MssubMcp.html#create_authenticator_email_password/4-parameters"},{"type":"function","title":"MssubMcp.create_disallowed_host/1","doc":"Adds a host IP address to the global disallowed hosts list.\n\nDisallowed hosts are IP addresses which are prevented from authenticating\nusers with the system, and by extension prevents host access to application\nfunctions generally.  Hosts are disallowed on a global basis and may be added\nto the list based on system heuristics which detect suspicious activity.\n\nSuccessfully adding a host to the list returns a success tuple and a struct\nrepresenting the record just created.  Attempting to add a host which is\nalready part of the list will also result in a success tuple, but no record is\nreturned.","ref":"MssubMcp.html#create_disallowed_host/1"},{"type":"function","title":"Parameters - MssubMcp.create_disallowed_host/1","doc":"* `host_address` - the IP address of the host to disallow.","ref":"MssubMcp.html#create_disallowed_host/1-parameters"},{"type":"function","title":"Examples - MssubMcp.create_disallowed_host/1","doc":"Adding a new host to the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, false} = MssubMcp.host_disallowed(~i\"10.123.123.20\")\n    iex> {:ok, %Msdata.SystDisallowedHosts{}} =\n    ...>   MssubMcp.create_disallowed_host(~i\"10.123.123.20\")\n\n  Attempting to add a host already on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, true} = MssubMcp.host_disallowed(~i\"10.123.123.3\")\n    iex> {:ok, nil} =\n    ...>   MssubMcp.create_disallowed_host(~i\"10.123.123.3\")","ref":"MssubMcp.html#create_disallowed_host/1-examples"},{"type":"function","title":"MssubMcp.create_disallowed_password/1","doc":"Adds a new password to the Disallowed Passwords list.\n\nDisallowed passwords are passwords that are commonly known, are known to have\nbeen revealed in a successful hacking attack, or are otherwise not available\nfor users to choose for their authentication credential.  Enforcing that these\npasswords are not available for use depends upon the effective\n`disallow_compromised` Password Rule for the Access Account attempting\nauthentication.\n\nAn attempt to add a password which is already on the list will succeed as\nthough the password were not already part of the list.","ref":"MssubMcp.html#create_disallowed_password/1"},{"type":"function","title":"Parameters - MssubMcp.create_disallowed_password/1","doc":"* `password` - The plaintext password to add to the list of disallowed\n  passwords.","ref":"MssubMcp.html#create_disallowed_password/1-parameters"},{"type":"function","title":"Examples - MssubMcp.create_disallowed_password/1","doc":"Adding a password successfully will simply return `:ok`.\n\n    iex> MssubMcp.create_disallowed_password(\"Example Disallowed Password\")\n    :ok\n\nAny subsequent attempt to add the same password to the list again will appear\nto succeed while silently doing nothing.\n\n    iex> MssubMcp.create_disallowed_password(\"Example Disallowed Password\")\n    :ok","ref":"MssubMcp.html#create_disallowed_password/1-examples"},{"type":"function","title":"MssubMcp.create_global_network_rule/1","doc":"Creates a new Global Network Rule using the provided parameters.\n\nGlobal Network Rules are checked prior to all attempted user authentication\nevents and have precedence over Owner and Instance Network Rules, though they\nare secondary to the Disallowed Hosts list.\n\nOn successful creation, a result tuple in the form `{:ok,  }` is\nreturned where the   is the fully populated Data struct of the\nrecord just created.  If an exception is raised this function will return a\nfailure tuple in the form of `{:error,  }`.","ref":"MssubMcp.html#create_global_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.create_global_network_rule/1","doc":"* `insert_params` - a map representing the values to use when creating the\n  new Global Network Rule.  See\n  `t:MscmpSystAuthn.Types.global_network_rule_params/0` for the\n  available attributes.","ref":"MssubMcp.html#create_global_network_rule/1-parameters"},{"type":"function","title":"Example - MssubMcp.create_global_network_rule/1","doc":"Adding a new \"Allow\" Global Network Rule for a CIDR network.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> new_global_rule = %{\n    ...>   ordering: 20,\n    ...>   functional_type: :allow,\n    ...>   ip_host_or_network: ~i\"10.100.150.0/24\"\n    ...> }\n    iex> {:ok, %Msdata.SystGlobalNetworkRules{}} =\n    ...>   MssubMcp.create_global_network_rule(new_global_rule)\n\n  Adding a new \"Deny\" Global Network Rule for an IP Address range.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> new_global_rule = %{\n    ...>   ordering: 21,\n    ...>   functional_type: :deny,\n    ...>   ip_host_or_network: nil,\n    ...>   ip_host_range_lower: ~i\"10.100.151.1\",\n    ...>   ip_host_range_upper: ~i\"10.100.152.254\"\n    ...> }\n    iex> {:ok, %Msdata.SystGlobalNetworkRules{}} =\n    ...>   MssubMcp.create_global_network_rule(new_global_rule)","ref":"MssubMcp.html#create_global_network_rule/1-example"},{"type":"function","title":"MssubMcp.create_instance/1","doc":"Creates a new Instance record.\n\nCreating a new Instance record will also create new Instance Context records\nbased on the defaults defined in the Instance Type Context records associated\nwith the Instance Type and Application of the new Instance.  This is\naccomplished with database triggers.","ref":"MssubMcp.html#create_instance/1"},{"type":"function","title":"Parameters - MssubMcp.create_instance/1","doc":"* `instance_params` - A map of attributes to use in creating the new\n  Instance record in the system.\n\n    * `internal_name` - a pre-generated identifier for Instance record for use\n    in programmatic contexts.  This value is required and must be unique in\n    the system.\n\n    * `display_name` - a friendly name which identifies the record for use in\n    user interfaces.  This value is required and must be unique in the system.\n\n    * `dbserver_name` - the name of the database server where the Instance\n    Datastore exists.  This value is required.  Note that invalid values here\n    may not be detected until such time as the Instance Datastore use is\n    attempted.\n\n    * `application_id` - the record ID of the Application for which this\n    Instance is being created.  This value is required unless the\n    `application_name` attribute has been provided instead.\n\n    * `application_name` - the internal name of the Application for which this\n    Instance is being created.  This value is requires unless the\n    `application_id` attribute has been provided instead.\n\n    * `instance_code` - A value used in constructing the Instance Context\n    credentials.  This value should be a randomly generated series of between\n    8 and 64 bytes.\n\n    * `instance_type_id` - the record ID of the Instance Type of the new\n    Instance record.  This attribute is required unless the\n    `instance_type_name` attribute is provided instead.\n\n    * `instance_type_name` - the internal name of the Instance Type of the new\n    Instance record.  This attribute is requires unless the `instance_type_id`\n    attribute is provided instead.\n\n    * `instance_state_id` - the record ID of the Instance State in which to\n    create the new Instance record.  This value may be omitted and allowed to\n    default based on the configured default Instance State.  Optionally the\n    Instance State may also be identified by the `instance_state_name`\n    attribute.\n\n    * `instance_state_name` - the internal name of the Instance State in which\n    to create the new Instance record.  This value may be omitted and allowed\n    to default based on the configured default Instance State.  Optionally the\n    Instance State may also be identified by the `instance_state_id`\n    attribute.\n\n    * `owner_id` - the record ID of the Owner of the Instance.  This\n    attribute is required unless the `owner_name` attribute is provided.\n\n    * `owner_name` - th internal name of the Owner of the Instance.  This\n    attribute is required unless the `owner_id` attribute is provided.\n\n    * `owning_instance_id` - if the Instance is associated with a parent\n    instance, such as a sandbox Instance being created for a parent production\n    Instance, the parent/child relationship may be expressed by assigning this\n    attribute to the record ID of the parent.  This attribute is not required\n    and the parent Instance may be identified by the `owning_instance_name`\n    attribute instead.\n\n    * `owning_instance_name` - an alternate identification method for\n    identifying a parent Instance when creating a child Instance.  This\n    attribute is optional and may used in lieu of using the\n    `owning_instance_id` attribute to establish the parent/child relationship\n    of the new Instance.","ref":"MssubMcp.html#create_instance/1-parameters"},{"type":"function","title":"MssubMcp.create_instance_network_rule/2","doc":"Creates a new Instance Network Rule using the provided parameters.\n\nInstance Network Rules the checked after the Disallowed Hosts list, the Global\nNetwork Rules, and the Instance Network Rules and apply to all Instances owned\nby the specified Instance, unless a higher precedence rule already applies to the\nhost.\n\nOn successful creation, a result tuple in the form `{:ok,  }` is\nreturned where the   is the fully populated Data struct of the\nrecord just created.  If an exception is raised this function will return a\nfailure tuple in the form of `{:error,  }`.","ref":"MssubMcp.html#create_instance_network_rule/2"},{"type":"function","title":"Parameters - MssubMcp.create_instance_network_rule/2","doc":"* `instance_id` - the record ID of the Instance for whom the Instance Network Rule is\n  being created.\n\n  * `insert_params` - a map representing the values to use when creating the\n  new Instance Network Rule.  See\n  `t:MscmpSystAuthn.Types.instance_network_rule_params/0` for the\n  available attributes.","ref":"MssubMcp.html#create_instance_network_rule/2-parameters"},{"type":"function","title":"Example - MssubMcp.create_instance_network_rule/2","doc":"Adding a new \"Allow\" Instance Network Rule for a CIDR network.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, instance_id} =\n    ...>   MssubMcp.get_instance_id_by_name(\"app1_owner8_instance_types_std\")\n    iex> new_instance_rule = %{\n    ...>   ordering: 1,\n    ...>   functional_type: :allow,\n    ...>   ip_host_or_network: ~i\"10.100.170.0/24\"\n    ...> }\n    iex> {:ok, %Msdata.SystInstanceNetworkRules{}} =\n    ...>   MssubMcp.create_instance_network_rule(instance_id, new_instance_rule)\n\n  Adding a new \"Deny\" Instance Network Rule for an IP Address range.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, instance_id} =\n    ...>   MssubMcp.get_instance_id_by_name(\"app1_owner8_instance_types_std\")\n    iex> new_instance_rule = %{\n    ...>   ordering: 2,\n    ...>   functional_type: :deny,\n    ...>   ip_host_or_network: nil,\n    ...>   ip_host_range_lower: ~i\"10.100.171.1\",\n    ...>   ip_host_range_upper: ~i\"10.100.172.254\"\n    ...> }\n    iex> {:ok, %Msdata.SystInstanceNetworkRules{}} =\n    ...>   MssubMcp.create_instance_network_rule(instance_id, new_instance_rule)","ref":"MssubMcp.html#create_instance_network_rule/2-example"},{"type":"function","title":"MssubMcp.create_instance_type/1","doc":"Creates a new Instance Type record via the `MscmpSystEnums` service.","ref":"MssubMcp.html#create_instance_type/1"},{"type":"function","title":"Parameters - MssubMcp.create_instance_type/1","doc":"* `instance_type_params` - the parameters to use when creating the new\n  Instance Type.  The attributes `internal_name`, `display_name`,\n  `external_name`, `user_description`, and `user_options` fields are required\n  for Instance Type creation.","ref":"MssubMcp.html#create_instance_type/1-parameters"},{"type":"function","title":"MssubMcp.create_instance_type_application/2","doc":"Creates an Instance Type/Application association.\n\nAssociating an Instance Type with an Application expresses that the Instance\nType can support Instances of the given application.","ref":"MssubMcp.html#create_instance_type_application/2"},{"type":"function","title":"Parameters - MssubMcp.create_instance_type_application/2","doc":"* `instance_type_id` - the ID value of the Instance Type which will support\n  Application Instances.\n\n  * `application_id` - the ID value which identifies the Application to be\n  supported.","ref":"MssubMcp.html#create_instance_type_application/2-parameters"},{"type":"function","title":"MssubMcp.create_or_reset_account_code/2","doc":"Creates a new Account Code for an Access Account or resets the Account Code if\nis already exists.\n\nOn successful Account Code Identity creation or reset, an Authenticator Result\nvalue is returned via a success tuple (`{:ok,  }`).  The expected form\nof the result for a new Account Code is:\n\n    %{\n      access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n      account_identifier: \"QY7QJTWH7MSK\"\n    }\n\nThere is no associated Credential or Validator for this Identity Type.","ref":"MssubMcp.html#create_or_reset_account_code/2"},{"type":"function","title":"Parameters - MssubMcp.create_or_reset_account_code/2","doc":"* `access_account_id` - the record ID of the Access Account that will be\n  identified by the Account Code Identity.\n\n  * `opts` - a Keyword list of optional settings which can influence the\n  behavior of the function call.  Available options are:\n\n    * `account_code` - this option overrides the randomly generated Account\n    Code with the value of this option.  By default the system randomly\n    generates the Account Code.\n\n    * `identity_token_length` - overrides the number of characters to randomly\n    generate for use as the Account Code Identifier.  The default value is 12.\n\n    * `identity_tokens` - overrides the character set used to create the\n    randomly generated Account Code Identifier.  The default value is `:b32c`.\n    See the `MscmpSystUtils.get_random_string/2` documentation for the\n    `tokens` parameter which receives this option for more information\n    regarding valid values for this setting.","ref":"MssubMcp.html#create_or_reset_account_code/2-parameters"},{"type":"function","title":"MssubMcp.create_owner/1","doc":"Creates a new Owner record.","ref":"MssubMcp.html#create_owner/1"},{"type":"function","title":"Parameters - MssubMcp.create_owner/1","doc":"* `owner_params` - a map of Owner record attributes to use when creating a\n  new record.\n\n    * `internal_name` - a predetermined unique identifier for the Owner\n    record for use in programmatic contexts.  This attribute is required and\n    must be unique in the system.\n\n    * `display_name` - a unique, friendly name identifying the owner and for\n    use in user interfaces.  This attribute is required and must be unique in\n    the system.\n\n    * `owner_state_id` - the Owner State value with which to create the new\n    Owner record.  If not provided in the function call, this attribute will\n    be defaulted to the configured Owner State default value for the\n    enumeration.","ref":"MssubMcp.html#create_owner/1-parameters"},{"type":"function","title":"MssubMcp.create_owner_network_rule/2","doc":"Creates a new Owner Network Rule using the provided parameters.\n\nOwner Network Rules the checked after the Disallowed Hosts list, the Global\nNetwork Rules, and the Instance Network Rules and apply to all Instances owned\nby the specified Owner, unless a higher precedence rule already applies to the\nhost.\n\nOn successful creation, a result tuple in the form `{:ok,  }` is\nreturned where the   is the fully populated Data struct of the\nrecord just created.  If an exception is raised this function will return a\nfailure tuple in the form of `{:error,  }`.","ref":"MssubMcp.html#create_owner_network_rule/2"},{"type":"function","title":"Parameters - MssubMcp.create_owner_network_rule/2","doc":"* `owner_id` - the record ID of the Owner for whom the Owner Network Rule is\n  being created.\n\n  * `insert_params` - a map representing the values to use when creating the\n  new Owner Network Rule.  See\n  `t:MscmpSystAuthn.Types.owner_network_rule_params/0` for the\n  available attributes.","ref":"MssubMcp.html#create_owner_network_rule/2-parameters"},{"type":"function","title":"Example - MssubMcp.create_owner_network_rule/2","doc":"Adding a new \"Allow\" Owner Network Rule for a CIDR network.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, owner_id} = MssubMcp.get_owner_id_by_name(\"owner8\")\n    iex> new_owner_rule = %{\n    ...>   ordering: 1,\n    ...>   functional_type: :allow,\n    ...>   ip_host_or_network: ~i\"10.100.160.0/24\"\n    ...> }\n    iex> {:ok, %Msdata.SystOwnerNetworkRules{}} =\n    ...>   MssubMcp.create_owner_network_rule(owner_id, new_owner_rule)\n\n  Adding a new \"Deny\" Owner Network Rule for an IP Address range.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, owner_id} = MssubMcp.get_owner_id_by_name(\"owner8\")\n    iex> new_owner_rule = %{\n    ...>   ordering: 2,\n    ...>   functional_type: :deny,\n    ...>   ip_host_or_network: nil,\n    ...>   ip_host_range_lower: ~i\"10.100.161.1\",\n    ...>   ip_host_range_upper: ~i\"10.100.162.254\"\n    ...> }\n    iex> {:ok, %Msdata.SystOwnerNetworkRules{}} =\n    ...>   MssubMcp.create_owner_network_rule(owner_id, new_owner_rule)","ref":"MssubMcp.html#create_owner_network_rule/2-example"},{"type":"function","title":"MssubMcp.create_owner_password_rules/2","doc":"Creates Owner Password Rules for the requested Owner.\n\nOwners may optionally define their own Password Rules for their users so long\nas their desired rules are of equal or greater stringency than the Global\nPassword Rules.  If the new Owner Password Rules are defined to be less\nstringent than the current Global Password Rules, the Owner Password Rules\nwill be saved as requested, but ignored when applied in favor of the more\nstringent rule.","ref":"MssubMcp.html#create_owner_password_rules/2"},{"type":"function","title":"Parameters - MssubMcp.create_owner_password_rules/2","doc":"* `owner_id` - the record ID of the Owner for whom the Password Rules are\n  being created.\n\n  * `insert_params` - a map of the values to use when creating the new record.\n  See `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MssubMcp.html#create_owner_password_rules/2-parameters"},{"type":"function","title":"MssubMcp.create_session/2","doc":"Creates a new session returning the session name for future reference.\n\nUsing a starting set of data and a expiration period, creates a new Session\nrecord.  The return value is either a success tuple including the generated\nname of the session record or an error tuple explaining the failure.\n\nCurrently, the Session name is an automatically generated random 96 bytes run\nthrough base 64 encoding.","ref":"MssubMcp.html#create_session/2"},{"type":"function","title":"Parameters - MssubMcp.create_session/2","doc":"* `session_data` - the initial Session Data to use in creating the new\n  Session record in the database.  Currently the expectation is that this\n  value will be any arbitrary `Map`.  This parameter is required.\n\n  * `opts` - a Keyword List of optional parameters.  The available parameters\n  are:\n\n    * `session_name` - a binary to use for the session name rather than\n    letting the system create a random session name.  The default behavior is\n    for the system to set the session name using `generate_session_name/0`.\n\n    * `expires_after` - the number of seconds for which the session will be\n    considered valid.  The default value for this setting via this API is the\n    current value of the MCP integer setting `mssub_mcp_session_expiration`; \n    by default that value is 3,600 seconds (1 hour).","ref":"MssubMcp.html#create_session/2-parameters"},{"type":"function","title":"Examples - MssubMcp.create_session/2","doc":"Creating a new Session with the default expiration time.\n\n    iex> {:ok, session_name} =\n    ...>   MssubMcp.create_session(%{test: \"test\"})\n    iex> is_binary(session_name)\n    true","ref":"MssubMcp.html#create_session/2-examples"},{"type":"function","title":"MssubMcp.decline_instance_invite/1","doc":"Declines an unaccepted/unexpired invitation made to an Access Account to\naccess an Instance.\n\nThis process is only needed in the case where a\n`syst_access_account_instance_assocs` invitation may be accepted or declined\nby the Access Account holder.  To be declined in this process the invitation\nrecord must have been previously created (see `invite_to_instance/3`), must\nnot be expired, previously declined, or previously accepted; trying to decline\na record in such a state will result in an error tuple being returned.\n\nNaturally, the Access Account holder may choose to never accept or decline the\ninvitation and may simply allow the invitation to expire.","ref":"MssubMcp.html#decline_instance_invite/1"},{"type":"function","title":"Parameters - MssubMcp.decline_instance_invite/1","doc":"* `access_account_instance_assoc` - this value may be either the populated\n  `Msdata.SystAccessAccountInstanceAssocs` struct to\n  decline or the record ID of the record to decline.","ref":"MssubMcp.html#decline_instance_invite/1-parameters"},{"type":"function","title":"MssubMcp.decline_instance_invite/2","doc":"Declines an unaccepted/unexpired invitation made to an Access Account to\naccess an Instance, referencing the record by its composite key values.\n\nThis function performs the same process as `decline_instance_invite/1`, but\nwill look up the record to decline using the Access Account, Instance, and\nCredential Type record ID values.","ref":"MssubMcp.html#decline_instance_invite/2"},{"type":"function","title":"Parameters - MssubMcp.decline_instance_invite/2","doc":"* `access_account_id` - the record ID of the Access Account declining the\n  invitation to the Instance.\n\n  * `instance_id` - the Instance record ID to which the Access Account has\n  been invited.","ref":"MssubMcp.html#decline_instance_invite/2-parameters"},{"type":"function","title":"MssubMcp.delete_application_context/1","doc":"Deletes an Application Context record from the system\n\nApplication Subsystems may use this function to remove an obsolete Application\nContext record from the system.\n\n>##","ref":"MssubMcp.html#delete_application_context/1"},{"type":"function","title":"Note {: .neutral} - MssubMcp.delete_application_context/1","doc":">\n> Note that this function is meant to expose Application record management to\n> the relevant Application Subsystem programs and is not intended for regular\n> management activities by end users.\n\n>##","ref":"MssubMcp.html#delete_application_context/1-note-neutral"},{"type":"function","title":"Warning! {: .warning} - MssubMcp.delete_application_context/1","doc":">\n> While this function will remove an Application Context record from the\n> system and prevent any new Instances of the Application from including the\n> deleted Context, existing Instance Contexts based on the Application\n> Context are not currently cleaned up by this function.  Any clean-up of\n> existing Instance Context data and of associated database roles and\n> verification of extended clean-up activities is therefore the responsibility\n> of the caller.\n\nOn successful delete of the record, a success tuple is returned to the caller\n(`{:ok, :deleted}`).  If the requested record is not found in the database,\nthe returned value is `{:ok, :not_found}`.  Any other outcome is returned via\nan error tuple.","ref":"MssubMcp.html#delete_application_context/1-warning-warning"},{"type":"function","title":"Parameters - MssubMcp.delete_application_context/1","doc":"* `application_context_id` - the record ID of the Application Context record\n  to delete.  This value is required.","ref":"MssubMcp.html#delete_application_context/1-parameters"},{"type":"function","title":"Examples - MssubMcp.delete_application_context/1","doc":"Deleting an existing Application Context.\n\n    iex> record_id = MssubMcp.get_application_context_id_by_name(\"ex_app2_delctx\")\n    iex> MssubMcp.delete_application_context(record_id)\n    {:ok, :deleted}\n\nAttempting to delete a non-existent record.\n\n    iex> record_id = \"00000000-0000-0000-0000-000000000000\"\n    iex> MssubMcp.delete_application_context(record_id)\n    {:ok, :not_found}","ref":"MssubMcp.html#delete_application_context/1-examples"},{"type":"function","title":"MssubMcp.delete_disallowed_host/1","doc":"Deletes a host IP address from the Disallowed Hosts list based on either a\n`Msdata.SystDisallowedHosts` record or the ID of such a\nrecord.\n\nIf the record is found and deleted a success tuple in the form `{:ok, :deleted}`\nis returned.  If the record is not found the success tuple `{:ok, :not_found}`\nis returned.\n\nOnce a host is removed from the Disallowed Hosts list, users are allowed to\nauthenticate from the host, so long as no other effective Network Rule\nprevents the action.","ref":"MssubMcp.html#delete_disallowed_host/1"},{"type":"function","title":"Parameters - MssubMcp.delete_disallowed_host/1","doc":"* `disallowed_host` - either the fully populated\n  `Msdata.SystDisallowedHosts` data struct for the\n  record to delete or the ID of the record.  Note that when the data struct\n  is provided Ecto optimistic locking is applied to the the delete operation.","ref":"MssubMcp.html#delete_disallowed_host/1-parameters"},{"type":"function","title":"Examples - MssubMcp.delete_disallowed_host/1","doc":"Deleting a host by record ID.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, target_host_record} =\n    ...>   MssubMcp.get_disallowed_host_record_by_host(~i\"10.10.250.4\")\n    iex> MssubMcp.delete_disallowed_host(target_host_record.id)\n    {:ok, :deleted}\n\n  Deleting a host by record struct.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, target_host_record} =\n    ...>   MssubMcp.get_disallowed_host_record_by_host(~i\"10.10.250.5\")\n    iex> MssubMcp.delete_disallowed_host(target_host_record)\n    {:ok, :deleted}\n\n  Deleting a struct for a no longer existent record.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, target_host_record} =\n    ...>   MssubMcp.get_disallowed_host_record_by_host(~i\"10.10.250.6\")\n    iex> MssubMcp.delete_disallowed_host(target_host_record)\n    {:ok, :deleted}\n    iex> MssubMcp.delete_disallowed_host(target_host_record)\n    {:ok, :not_found}","ref":"MssubMcp.html#delete_disallowed_host/1-examples"},{"type":"function","title":"MssubMcp.delete_disallowed_host_addr/1","doc":"Deletes a host IP address from the Disallowed Hosts list as looked up by the\nhost IP address.\n\nIf the record is found and deleted a success tuple in the form `{:ok, :deleted}`\nis returned.  If the record is not found the success tuple `{:ok, :not_found}`\nis returned.  Any other condition would cause an error tuple to be returned.\n\nOnce a host is removed from the Disallowed Hosts list, users are allowed to\nauthenticate from the host, so long as no other effective Network Rule\nprevents the action.","ref":"MssubMcp.html#delete_disallowed_host_addr/1"},{"type":"function","title":"Parameters - MssubMcp.delete_disallowed_host_addr/1","doc":"* `host_addr` - the IP address of the host that is no longer to be\n  disallowed.","ref":"MssubMcp.html#delete_disallowed_host_addr/1-parameters"},{"type":"function","title":"Examples - MssubMcp.delete_disallowed_host_addr/1","doc":"Deleting a host that does exist in the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, true} = MssubMcp.host_disallowed(~i\"10.10.251.1\")\n    iex> {:ok, :deleted} =\n    ...>   MssubMcp.delete_disallowed_host_addr(~i\"10.10.251.1\")\n    iex> {:ok, false} = MssubMcp.host_disallowed(~i\"10.10.251.1\")\n\n  Attempting to delete a host not already on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, false} = MssubMcp.host_disallowed(~i\"10.10.251.10\")\n    iex> {:ok, :not_found} =\n    ...>   MssubMcp.delete_disallowed_host_addr(~i\"10.10.251.10\")","ref":"MssubMcp.html#delete_disallowed_host_addr/1-examples"},{"type":"function","title":"MssubMcp.delete_disallowed_password/1","doc":"Removes a password from the disallowed passwords list.\n\nOn success, this function will return a success tuple indicating if the\nrequested password was deleted from the disallowed passwords list\n(`{:ok, :deleted}`) or if the password simply wasn't found in the list\n(`{:ok, :not_found}`).","ref":"MssubMcp.html#delete_disallowed_password/1"},{"type":"function","title":"Parameters - MssubMcp.delete_disallowed_password/1","doc":"* `password` - the plaintext password to delete from the disallowed\n  passwords list.","ref":"MssubMcp.html#delete_disallowed_password/1-parameters"},{"type":"function","title":"Examples - MssubMcp.delete_disallowed_password/1","doc":"Result when deleting a record from the list.\n\n    iex> MssubMcp.delete_disallowed_password(\"No Longer Disallowed\")\n    {:ok, :deleted}\n\n  Result when trying to delete a record not already on the list.\n\n    iex> MssubMcp.delete_disallowed_password(\"Not on List\")\n    {:ok, :not_found}","ref":"MssubMcp.html#delete_disallowed_password/1-examples"},{"type":"function","title":"MssubMcp.delete_global_network_rule/1","doc":"Deletes an existing Global Network Rule record as referenced by the record ID.\n\nOn successful deletion, a simple result of `:ok` is returned.  On error, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MssubMcp.html#delete_global_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.delete_global_network_rule/1","doc":"* `global_network_rule_id` - The record ID of the Global Network Rule record\n  to delete.","ref":"MssubMcp.html#delete_global_network_rule/1-parameters"},{"type":"function","title":"MssubMcp.delete_instance_network_rule/1","doc":"Deletes an existing Instance Network Rule record as referenced by the record\nID.\n\nOn successful deletion, a simple result of `:ok` is returned.  On error, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MssubMcp.html#delete_instance_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.delete_instance_network_rule/1","doc":"* `instance_network_rule_id` - The record ID of the Instance Network Rule\n  record to delete.","ref":"MssubMcp.html#delete_instance_network_rule/1-parameters"},{"type":"function","title":"MssubMcp.delete_instance_type/1","doc":"Deletes an Instance Type from the `MscmpSystEnums` service.\n\nNote that an attempt to delete an in-use Instance Type will result in a\nconstraint error.","ref":"MssubMcp.html#delete_instance_type/1"},{"type":"function","title":"Parameters - MssubMcp.delete_instance_type/1","doc":"* `instance_type_name` - the internal name of an Instance Type to delete\n  from the system.","ref":"MssubMcp.html#delete_instance_type/1-parameters"},{"type":"function","title":"MssubMcp.delete_instance_type_application/1","doc":"Disassociates the Instance Type/Application support relationship.\n\nNote that this will only prevent the creation of new Instances of the Instance\nType for the Application.  Existing Instances that were created when the\nrelationship was valid will continue to exist.","ref":"MssubMcp.html#delete_instance_type_application/1"},{"type":"function","title":"Parameters - MssubMcp.delete_instance_type_application/1","doc":"* `instance_type_application` - This value can be either the ID value of the\n  Instance Type Application record or a\n  `Msdata.SystInstanceTypeApplications` struct with at\n  least the `id` field defined.","ref":"MssubMcp.html#delete_instance_type_application/1-parameters"},{"type":"function","title":"MssubMcp.delete_owner_network_rule/1","doc":"Deletes an existing Owner Network Rule record as referenced by the record ID.\n\nOn successful deletion, a simple result of `:ok` is returned.  On error, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MssubMcp.html#delete_owner_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.delete_owner_network_rule/1","doc":"* `owner_network_rule_id` - The record ID of the Owner Network Rule record\n  to delete.","ref":"MssubMcp.html#delete_owner_network_rule/1-parameters"},{"type":"function","title":"MssubMcp.delete_owner_password_rules/1","doc":"Deletes an Owner Password Rules record from the system.","ref":"MssubMcp.html#delete_owner_password_rules/1"},{"type":"function","title":"Parameters - MssubMcp.delete_owner_password_rules/1","doc":"* `owner_id` - the Owner record ID whose Password Rules are to be deleted.","ref":"MssubMcp.html#delete_owner_password_rules/1-parameters"},{"type":"function","title":"MssubMcp.delete_session/1","doc":"Deletes the named Session record from the database.\n\nThis is the de facto method for terminating a session.\n\nUnlike the other functions in this module which treat expired Session records\nas though they've not been found, deleting an expired Session is permitted and\nwill return the same value as deleting an unexpired Session record.","ref":"MssubMcp.html#delete_session/1"},{"type":"function","title":"Parameters - MssubMcp.delete_session/1","doc":"* `session_name` - the Session Name that was generated by `create_session/2`\n  at Session create time.  This argument is required.","ref":"MssubMcp.html#delete_session/1-parameters"},{"type":"function","title":"Examples - MssubMcp.delete_session/1","doc":"Deleting a Session record.\n\n    iex> MssubMcp.delete_session(\"example_delete_session\")\n    :ok\n\nAttempting to delete a nonexistent Session returns the not found value.\n\n    iex> MssubMcp.delete_session(\"nonexistent_session\")\n    {:ok, :not_found}","ref":"MssubMcp.html#delete_session/1-examples"},{"type":"function","title":"MssubMcp.disallowed_passwords_populated?/0","doc":"Tests if the Disallowed Password List has any entries or not.\n\nReturns a simple boolean value.  If true, there are existing entries in the\nDisallowed Passwords Lists; otherwise false is returned.","ref":"MssubMcp.html#disallowed_passwords_populated?/0"},{"type":"function","title":"Examples - MssubMcp.disallowed_passwords_populated?/0","doc":"iex> MssubMcp.disallowed_passwords_populated?()\n    true","ref":"MssubMcp.html#disallowed_passwords_populated?/0-examples"},{"type":"function","title":"MssubMcp.generate_session_name/0","doc":"Generates a random Session Name using the current formulation for automatic\nsession name generation.\n\nCurrently generated Session Names are strings of 16 random characters using a\nmixed case, alphanumeric character set.","ref":"MssubMcp.html#generate_session_name/0"},{"type":"function","title":"Examples - MssubMcp.generate_session_name/0","doc":"Generating a random name.\n\n    iex> session_name = MssubMcp.generate_session_name()\n    iex> String.length(session_name) == 16\n    true","ref":"MssubMcp.html#generate_session_name/0-examples"},{"type":"function","title":"MssubMcp.get_access_account_by_name/1","doc":"Retrieves a fully populated Access Account record as found by internal name.\n\n'Fully populated' in this context means that the related Account Account State\nand related functional type data is also retrieved along with the actual\nAccess Account data.","ref":"MssubMcp.html#get_access_account_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_access_account_by_name/1","doc":"* `access_account_name` - the internal name of the Access Account record to\n  retrieve.","ref":"MssubMcp.html#get_access_account_by_name/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_access_account_by_name/1","doc":"iex> {\n    ...>   :ok,\n    ...>   %Msdata.SystAccessAccounts{internal_name: \"example_accnt\"}\n    ...> } =\n    ...>   MssubMcp.get_access_account_by_name(\"example_accnt\")","ref":"MssubMcp.html#get_access_account_by_name/1-example"},{"type":"function","title":"MssubMcp.get_access_account_id_by_name/1","doc":"Looks up an Access Account record ID by its internal name.","ref":"MssubMcp.html#get_access_account_id_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_access_account_id_by_name/1","doc":"* `access_account_name` - the internal name of the record for which to\n  retrieve the record ID.","ref":"MssubMcp.html#get_access_account_id_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_access_account_id_by_name/1","doc":"iex> {:ok, access_account_id}  =\n    ...>   MssubMcp.get_access_account_id_by_name(\"example_accnt\")\n    iex> is_binary(access_account_id)\n    true","ref":"MssubMcp.html#get_access_account_id_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_access_account_password_rule/1","doc":"Retrieves the Password Rules to apply for a requested Access Account as\nidentified by its record ID.\n\nWhen evaluating the validity of candidate passwords for a user the system\nretrieves the Global Password Rules and then the Access Account Owner Password\nRules, if such Rules have been defined.  The system will compare each of the\nRules in the Global and Owner Password Rules with each other and select the\nrule which demands the greatest stringency.  This process results in a\ncomposite Password Rule which can then be applied to test any candidate\npassword for validity. This calculated composite Password Rule is what is\nreturned by this function.\n\nThe return value is wrapped in a result tuple, `{:ok,  }` on success and\n`{:error,  }` in cases of failure.","ref":"MssubMcp.html#get_access_account_password_rule/1"},{"type":"function","title":"Parameters - MssubMcp.get_access_account_password_rule/1","doc":"* `access_account_id` - the Access Account record ID of the user.","ref":"MssubMcp.html#get_access_account_password_rule/1-parameters"},{"type":"function","title":"MssubMcp.get_access_account_password_rule!/1","doc":"Retrieves the Password Rules to apply for a requested Access Account as\nidentified by its record ID, raising on error.\n\nThis function works the same as `get_access_account_password_rule/1` except\nthat any errors cause an exception to be raised.","ref":"MssubMcp.html#get_access_account_password_rule!/1"},{"type":"function","title":"Parameters - MssubMcp.get_access_account_password_rule!/1","doc":"* `access_account_id` - the Access Account record ID of the user.","ref":"MssubMcp.html#get_access_account_password_rule!/1-parameters"},{"type":"function","title":"MssubMcp.get_access_account_state_by_name/1","doc":"Returns the Access Account State record for the given Internal Name; raises on\nerror.\n\nOn successful execution either the requested Access Account State Enumeration\nrecord is returned or `nil` if the record does not exist.","ref":"MssubMcp.html#get_access_account_state_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_access_account_state_by_name/1","doc":"* `access_account_state_name` - the Internal Name of the desire Access Account\n  State record to return.","ref":"MssubMcp.html#get_access_account_state_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_access_account_state_by_name/1","doc":"Finding a Access Account State record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MssubMcp.get_access_account_state_by_name(\"access_account_states_sysdef_active\")\n\nLooking for a non-existent record.\n\n    iex> MssubMcp.get_access_account_state_by_name(\"nonexistent_type\")\n    nil","ref":"MssubMcp.html#get_access_account_state_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_access_account_state_default/1","doc":"Returns the Access Account State Enumeration record which is configured as\nbeing default.\n\nIf no Access Account State record is configured as default, then `nil` is\nreturned.","ref":"MssubMcp.html#get_access_account_state_default/1"},{"type":"function","title":"Parameters - MssubMcp.get_access_account_state_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Access Account State record configured for\n  the requested functional type rather than the system default Access Account\n  State.  The default for this parameter is to treat the parameter as not\n  provided (`nil`).","ref":"MssubMcp.html#get_access_account_state_default/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_access_account_state_default/1","doc":"Requesting the system default Access Account State.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"access_account_states_sysdef_pending\"} =\n    ...>   MssubMcp.get_access_account_state_default()\n\nRequesting the default Access Account State for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"access_account_states_sysdef_inactive\"} =\n    ...>   MssubMcp.get_access_account_state_default(:access_account_states_inactive)","ref":"MssubMcp.html#get_access_account_state_default/1-examples"},{"type":"function","title":"MssubMcp.get_account_code_by_access_account_id/1","doc":"Retrieves the Account Code Identity record defined for the requested Access\nAccount if one exists.\n\nIf no Account Code Identity exists for the requested Access Account a tuple in\nthe form of `{:ok, :not_found}` is returned.","ref":"MssubMcp.html#get_account_code_by_access_account_id/1"},{"type":"function","title":"Parameters - MssubMcp.get_account_code_by_access_account_id/1","doc":"* `access_account_id` - the Access Account record ID for which to retrieve\n  the Account Code Identity.","ref":"MssubMcp.html#get_account_code_by_access_account_id/1-parameters"},{"type":"function","title":"MssubMcp.get_application/2","doc":"Returns a populated `Msdata.SystApplications` struct for the requested record.","ref":"MssubMcp.html#get_application/2"},{"type":"function","title":"Parameters - MssubMcp.get_application/2","doc":"* `application` - either the record ID of the desired Application record or\n  its Internal Name.  This parameter is required.\n\n  * `opts` - allows optional parameters to be provided which govern the\n  behavior of this function.  The options are provided via a Keyword List.\n  The available options are:\n\n    * `include_contexts` - a boolean value indicating whether or not to also\n    retrieve the fully populated list of `:application_contexts` associated\n    with the requested Application.  Contexts are returned as a standard\n    association of `Msdata.SystApplicationContexts` structs.  The default\n    value of this option is `false`.","ref":"MssubMcp.html#get_application/2-parameters"},{"type":"function","title":"MssubMcp.get_application_context_id_by_name/1","doc":"Retrieves the Application Context record ID for the record matching provided\nInternal Name argument.\n\nWhen the requested Application Context record can not be found this function\nreturns `nil`.  All errors raise an exception.","ref":"MssubMcp.html#get_application_context_id_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_application_context_id_by_name/1","doc":"* `application_context_name` - the Internal Name value of the Application\n  Context record to search for.","ref":"MssubMcp.html#get_application_context_id_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_application_context_id_by_name/1","doc":"Finding an existing Application Context.\n\n    iex> id = MssubMcp.get_application_context_id_by_name(\"ex_app2_idctx\")\n    iex> is_binary(id)\n    true\n\nSearching for a non-existent Application Context.\n\n    iex> MssubMcp.get_application_context_id_by_name(\"nonexistent_context\")\n    nil","ref":"MssubMcp.html#get_application_context_id_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_application_id_by_name/1","doc":"Returns the Application record ID for the requested Application Internal Name;\nraises on error.\n\nOn successful execution the record ID of the requested Application is\nreturned.  If the requested Application Internal Name is not found `nil` is\nreturned.","ref":"MssubMcp.html#get_application_id_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_application_id_by_name/1","doc":"* `applicaton_name` - the internal name of the desired Application record.","ref":"MssubMcp.html#get_application_id_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_application_id_by_name/1","doc":"Finding an application returns its ID value.\n\n    iex> application_id = MssubMcp.get_application_id_by_name(\"app1\")\n    iex> is_binary(application_id)\n    true\n\n  Asking for a non-existent application returns `nil`.\n\n    iex>  MssubMcp.get_application_id_by_name(\"nonexistent_application\")\n    nil","ref":"MssubMcp.html#get_application_id_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_applied_network_rule/3","doc":"Returns the Network Rule which should be applied for the given Host IP Address.\n\nThis function compares the provided Host IP Address against the applicable\nNetwork Rules which apply to it and return the specific rule which should be\napplied during the authentication process.","ref":"MssubMcp.html#get_applied_network_rule/3"},{"type":"function","title":"Network Rule Precedence - MssubMcp.get_applied_network_rule/3","doc":"The specific rules to check for applicability depends on the other provided\nparameters.  The available Network Rule sets in order of precedence are:\n\n  1. __Disallowed Hosts__: Globally disallowed hosts are always checked first and\n  no later rule can override the denial.  Only removing the host from the\n  Disallowed Hosts List can reverse this denial.\n\n  2. __Global Network Rules__: These are rules applied to all presented Host IP\n  Addresses.\n\n  3. __Instance Network Rules__: Rules defined by Instance Owners and are the\n  most granular rule level available.  These Network Rules are only evaluated\n  if the `instance_id` parameter is provided.\n\n  4. __Owner Network Rules__: Network Rules which are applicable to all\n  Instances of a given Owner, provided no superseding Instance Network Rule\n  was found.  This rule set is included if either the `instance_id` or\n  `owner_id` parameter is provided.\n\n  5. __Default Network Rule__: When no explicitly defined Network Rule has\n  been found for a host, this rule will apply implicitly.  The current rule\n  grants access from any host.","ref":"MssubMcp.html#get_applied_network_rule/3-network-rule-precedence"},{"type":"function","title":"Return Value - MssubMcp.get_applied_network_rule/3","doc":"This function returns a result tuple.  The value element of the result tuple\n  is a map of type `t:MscmpSystAuthn.Types.AppliedNetworkRule.t/0`.\n  The map indicates which precedence group the rule came from, the ID of the\n  Network Rule record if the rule was derived from the various Network Rule\n  data tables, and the Functional Type of the rule: `:allow` meaning the\n  rule explicitly allows the host to attempt an authentication, or `:deny`\n  indicating that the host is not allowed to attempt authentication.","ref":"MssubMcp.html#get_applied_network_rule/3-return-value"},{"type":"function","title":"Parameters - MssubMcp.get_applied_network_rule/3","doc":"* `host_address` - the Host IP Address which the user wishes to authenticate\n  from.\n\n  * `instance_id` - the record ID of an Instance to which the user wants to\n  gain access.  This parameter is optional, though excluding this parameter\n  will leave the Instance Network Rules might properly apply unevaluated.  If\n  this parameter is provided, the Owner of the Instance is implied and there\n  is no need to also supply the `owner_id` parameter.\n\n  * `owner_id` - the record ID of an Owner which owns the candidate Instances\n  to which the user wishes to authenticate.  This parameter is not required if\n  the `instance_id` parameter has been provided.  Otherwise, this parameter is\n  optional, though if the Owner has not been resolved through this parameter\n  or via the `instance_id`, the Owner Network Rules that might apply to the\n  authentication attempt will not be applied.","ref":"MssubMcp.html#get_applied_network_rule/3-parameters"},{"type":"function","title":"Examples - MssubMcp.get_applied_network_rule/3","doc":"When the host is a member of the Disallowed Hosts lists.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok,\n    ...>   %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>     functional_type: :deny, network_rule_id: id, precedence: :disallowed\n    ...>   }\n    ...>  } = MssubMcp.get_applied_network_rule(~i\"10.123.123.3\")\n    iex> is_binary(id)\n    true\n\n  When the Host IP Address does not match any explicitly defined rule and the\n  implicit rule applies.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.get_applied_network_rule(~i\"10.124.124.3\")\n    {:ok,\n      %MscmpSystAuthn.Types.AppliedNetworkRule{\n        functional_type: :allow, network_rule_id: nil, precedence: :implied\n      }\n    }\n\n  When a Global Network Rule explicitly allows the Host IP Address to attempt\n  authentication.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok,\n    ...>   %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>     functional_type: :allow, network_rule_id: id, precedence: :global\n    ...>   }\n    ...> } = MssubMcp.get_applied_network_rule(~i\"10.125.125.3\")\n    iex> is_binary(id)\n    true\n\n  Note that while the examples did not include Instance or Owner IDs, the\n  examples are none-the-less representative of cases where they are included.","ref":"MssubMcp.html#get_applied_network_rule/3-examples"},{"type":"function","title":"MssubMcp.get_applied_network_rule!/3","doc":"Returns the Network Rule which should be applied for the given Host IP\nAddress, raising on error.\n\nThis function works the same as `get_applied_network_rule/3` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered an exception is raised.","ref":"MssubMcp.html#get_applied_network_rule!/3"},{"type":"function","title":"Parameters - MssubMcp.get_applied_network_rule!/3","doc":"* `host_address` - the Host IP Address which the user wishes to authenticate\n  from.\n\n  * `instance_id` - the record ID of an Instance to which the user wants to\n  gain access.  This parameter is optional, though excluding this parameter\n  will leave the Instance Network Rules might properly apply unevaluated.  If\n  this parameter is provided, the Owner of the Instance is implied and there\n  is no need to also supply the `owner_id` parameter.\n\n  * `owner_id` - the record ID of an Owner which owns the candidate Instances\n  to which the user wishes to authenticate.  This parameter is not required if\n  the `instance_id` parameter has been provided.  Otherwise, this parameter is\n  optional, though if the Owner has not been resolved through this parameter\n  or via the `instance_id`, the Owner Network Rules that might apply to the\n  authentication attempt will not be applied.","ref":"MssubMcp.html#get_applied_network_rule!/3-parameters"},{"type":"function","title":"Examples - MssubMcp.get_applied_network_rule!/3","doc":"When the host is a member of the Disallowed Hosts lists.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>   functional_type: :deny, network_rule_id: id, precedence: :disallowed\n    ...> } = MssubMcp.get_applied_network_rule!(~i\"10.123.123.3\")\n    iex> is_binary(id)\n    true\n\n  When the Host IP Address does not match any explicitly defined rule and the\n  implicit rule applies.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.get_applied_network_rule!(~i\"10.124.124.3\")\n    %MscmpSystAuthn.Types.AppliedNetworkRule{\n      functional_type: :allow, network_rule_id: nil, precedence: :implied\n    }\n\n  When a Global Network Rule explicitly allows the Host IP Address to attempt\n  authentication.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> %MscmpSystAuthn.Types.AppliedNetworkRule{\n    ...>   functional_type: :allow, network_rule_id: id, precedence: :global\n    ...> } = MssubMcp.get_applied_network_rule!(~i\"10.125.125.3\")\n    iex> is_binary(id)\n    true\n\n  Note that while the examples did not include Instance or Owner IDs, the\n  examples are none-the-less representative of cases where they are included.","ref":"MssubMcp.html#get_applied_network_rule!/3-examples"},{"type":"function","title":"MssubMcp.get_credential_type_by_name/1","doc":"Returns the Credential Type record for the given Internal Name; raises on error.\n\nOn successful execution either the requested Credential Type Enumeration record\nis returned or `nil` if the record does not exist.","ref":"MssubMcp.html#get_credential_type_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_credential_type_by_name/1","doc":"* `credential_type_name` - the Internal Name of the desire Credential Type\n  record to return.","ref":"MssubMcp.html#get_credential_type_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_credential_type_by_name/1","doc":"Finding a Credential Type record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MssubMcp.get_credential_type_by_name(\"credential_types_sysdef_token_api\")\n\nLooking for a non-existent record.\n\n    iex> MssubMcp.get_credential_type_by_name(\"nonexistent_type\")\n    nil","ref":"MssubMcp.html#get_credential_type_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_credential_type_default/1","doc":"Returns the Credential Type Enumeration record which is configured as being\ndefault.\n\nIf no Credential Type record is configured as default, then `nil` is returned.","ref":"MssubMcp.html#get_credential_type_default/1"},{"type":"function","title":"Parameters - MssubMcp.get_credential_type_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Credential Type record configured for the\n  requested functional type rather than the system default Credential Type.\n  The default for this parameter is to treat the parameter as not provided\n  (`nil`).","ref":"MssubMcp.html#get_credential_type_default/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_credential_type_default/1","doc":"Requesting the system default Credential Type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"credential_types_sysdef_password\"} =\n    ...>   MssubMcp.get_credential_type_default()\n\nRequesting the default Credential Type for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"credential_types_sysdef_mfa_totp\"} =\n    ...>   MssubMcp.get_credential_type_default(:credential_types_mfa_totp)","ref":"MssubMcp.html#get_credential_type_default/1-examples"},{"type":"function","title":"MssubMcp.get_default_instance_state_ids/0","doc":"Returns a Keyword List of the default values for each Instance State's\nfunctional type.\n\nInstance updating functions that change the Instance State value of the\nInstance will default to the appropriate Instance State if a specific Instance\nState value is not provided by the caller.","ref":"MssubMcp.html#get_default_instance_state_ids/0"},{"type":"function","title":"MssubMcp.get_disallowed_host_record_by_host/1","doc":"Retrieves a Disallowed Host record from the database as identified by its host\naddress.","ref":"MssubMcp.html#get_disallowed_host_record_by_host/1"},{"type":"function","title":"Parameters - MssubMcp.get_disallowed_host_record_by_host/1","doc":"* `host_address` - the IP address of the disallowed host record to retrieve.","ref":"MssubMcp.html#get_disallowed_host_record_by_host/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_disallowed_host_record_by_host/1","doc":"Retrieving a Disallowed Host record by IP address.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> {:ok, %Msdata.SystDisallowedHosts{}} =\n    ...>   MssubMcp.get_disallowed_host_record_by_host(~i\"10.123.123.4\")\n\n  Attempting to retrieve a record for a host not on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.get_disallowed_host_record_by_host(~i\"10.125.120.20\")\n    {:ok, nil}","ref":"MssubMcp.html#get_disallowed_host_record_by_host/1-example"},{"type":"function","title":"MssubMcp.get_disallowed_host_record_by_host!/1","doc":"Retrieves a Disallowed Host record from the database as identified by its host\naddress, raising on error.\n\nThis function works the same as `get_disallowed_host_record_by_host/1` except\nthis function returns its result without wrapping it in a result tuple.  If an\nerror is encountered an exception is raised.","ref":"MssubMcp.html#get_disallowed_host_record_by_host!/1"},{"type":"function","title":"Parameters - MssubMcp.get_disallowed_host_record_by_host!/1","doc":"* `host_address` - the IP address of the disallowed host record to retrieve.","ref":"MssubMcp.html#get_disallowed_host_record_by_host!/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_disallowed_host_record_by_host!/1","doc":"Retrieving a Disallowed Host record by IP address.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> %Msdata.SystDisallowedHosts{} =\n    ...>   MssubMcp.get_disallowed_host_record_by_host!(~i\"10.123.123.4\")\n\n  Attempting to retrieve a record for a host not on the list.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.get_disallowed_host_record_by_host!(~i\"10.125.120.20\")\n    nil","ref":"MssubMcp.html#get_disallowed_host_record_by_host!/1-example"},{"type":"function","title":"MssubMcp.get_disallowed_host_record_by_id/1","doc":"Retrieves a Disallowed Host record by the record ID.\n\nThis function assumes the record exists.  If the record does not exist an\nerror tuple will be returned.","ref":"MssubMcp.html#get_disallowed_host_record_by_id/1"},{"type":"function","title":"Parameters - MssubMcp.get_disallowed_host_record_by_id/1","doc":"* `disallowed_host_id` - the record ID of the Disallowed Host record to retrieve.","ref":"MssubMcp.html#get_disallowed_host_record_by_id/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_disallowed_host_record_by_id/1","doc":"Retrieving a Disallowed Host record by record ID.\n\n  ```elixir\n  {:ok, %Msdata.SystDisallowedHosts{}} =\n    MssubMcp.get_disallowed_host_record_by_id(\n      \"ad7f2030-5895-11ed-a888-0f8a20e745a9\")\n  ```","ref":"MssubMcp.html#get_disallowed_host_record_by_id/1-example"},{"type":"function","title":"MssubMcp.get_disallowed_host_record_by_id!/1","doc":"Retrieves a Disallowed Host record by the record ID, raising on error.\n\nThis function works the same as `get_disallowed_host_record_by_id/1` except\nthis function returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MssubMcp.html#get_disallowed_host_record_by_id!/1"},{"type":"function","title":"Parameters - MssubMcp.get_disallowed_host_record_by_id!/1","doc":"* `disallowed_host_id` - the record ID of the Disallowed Host record to retrieve.","ref":"MssubMcp.html#get_disallowed_host_record_by_id!/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_disallowed_host_record_by_id!/1","doc":"Retrieving a Disallowed Host record by record ID.\n\n  ```elixir\n  %Msdata.SystDisallowedHosts{} =\n    MssubMcp.get_disallowed_host_record_by_id!(\n      \"ad7f2030-5895-11ed-a888-0f8a20e745a9\")\n  ```","ref":"MssubMcp.html#get_disallowed_host_record_by_id!/1-example"},{"type":"function","title":"MssubMcp.get_effective_perm_grants/2","doc":"Provides the effective Permissions/Rights/Scopes for the user context\nidentified by the `selector` as calculated from all effective grants and\nrevocations.\n\nThis function answers the question, \"what rights does this user really have?\"\n\nOn successful execution, a success tuple is returned including a map of the\nselected Permissions and the Rights/Scopes granted.  Errors will result in the\nreturn of an error tuple.","ref":"MssubMcp.html#get_effective_perm_grants/2"},{"type":"function","title":"Parameters - MssubMcp.get_effective_perm_grants/2","doc":"* `selector` - this value is a struct which determines the specific\n  implementation of this function to call and which contains the keys/values\n  to use in selecting which Permission and Permission Role Grant records to\n  retrieve.  Specific details about what records are involved and how the\n  selection return values are determine are implementation specific and will\n  be documented on a case-by-case basis.\n\n  * `opts` - a Keyword List of optional parameters which may be provided.  The\n  only general option is listed below, each specific implementation of this\n  function may extend the available options as appropriate to the\n  implementation.\n\n    * `permissions` - a list of specific Permission names to lookup.  This is\n    usually supplied as a limiting filter; without this list the typical\n    behavior is to return all of the permissions for a given Permission\n    Functional Type filtered only by the `selector` data.  Again, the details\n    of the filtering or inclusion using this option will be implementation\n    specific and documented for each individual implementation.","ref":"MssubMcp.html#get_effective_perm_grants/2-parameters"},{"type":"function","title":"MssubMcp.get_generic_password_rules/2","doc":"Converts a Global or Owner Password Rule struct into the generic map based\nPassword Rule required by some functions.\n\n`Msdata.SystGlobalPasswordRules` and `Msdata.SystOwnerPasswordRules` both\ndefine a standard set of known password rules, but do so as different data\ntypes.  While this works well for database record management features, testing\nand validating actual password rules do not benefit from the distinction.\nIn these evaluation scenarios it's better to treat the password rule without\nconsideration of its source.  This function returns the generic representation\nthat certain evaluation features such as `test_credential/2` are expecting.","ref":"MssubMcp.html#get_generic_password_rules/2"},{"type":"function","title":"MssubMcp.get_global_network_rule/1","doc":"Retrieves a Global Network Rule record based on its record ID.\n\nFor a given Global Network Rule record ID this function will return a result\ntuple in the form of `{:ok,  }` where ` ` is the fully\npopulated `Msdata.SystGlobalNetworkRules`.  If the\nrecord does not exist, then `{:ok, :not_found}` is returned.  Otherwise, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MssubMcp.html#get_global_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.get_global_network_rule/1","doc":"* `global_network_rule_id` - the record ID of the desired Global Network Rule\nrecord.","ref":"MssubMcp.html#get_global_network_rule/1-parameters"},{"type":"function","title":"MssubMcp.get_global_network_rule!/1","doc":"Retrieves a Global Network Rule record based on its record ID, raising on\nerror.\n\nThis function works the same as `get_global_network_rule/1` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MssubMcp.html#get_global_network_rule!/1"},{"type":"function","title":"Parameters - MssubMcp.get_global_network_rule!/1","doc":"* `global_network_rule_id` - the record ID of the desired Global Network Rule\nrecord.","ref":"MssubMcp.html#get_global_network_rule!/1-parameters"},{"type":"function","title":"MssubMcp.get_global_password_rules/0","doc":"Retrieves the currently active Global Password Rules.\n\nOn successful retrieval a success tuple in the form of `{:ok,  }` is\nreturned where record is a `Msdata.SystGlobalPasswordRules`\nstruct.  Any exceptions are returned via an error tuple.","ref":"MssubMcp.html#get_global_password_rules/0"},{"type":"function","title":"MssubMcp.get_global_password_rules!/0","doc":"Retrieves the currently active Global Password Rules, raising on error.\n\nThis function works the same as `get_global_password_rules/0` except that\nany errors cause an exception to be raised.","ref":"MssubMcp.html#get_global_password_rules!/0"},{"type":"function","title":"MssubMcp.get_identity_type_by_name/1","doc":"Returns the Identity Type record for the given Internal Name; raises on error.\n\nOn successful execution either the requested Identity Type Enumeration record\nis returned or `nil` if the record does not exist.","ref":"MssubMcp.html#get_identity_type_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_identity_type_by_name/1","doc":"* `identity_type_name` - the Internal Name of the desire Identity Type\n  record to return.","ref":"MssubMcp.html#get_identity_type_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_identity_type_by_name/1","doc":"Finding a Identity Type record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MssubMcp.get_identity_type_by_name(\"identity_types_sysdef_account\")\n\nLooking for a non-existent record.\n\n    iex> MssubMcp.get_identity_type_by_name(\"nonexistent_type\")\n    nil","ref":"MssubMcp.html#get_identity_type_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_identity_type_default/1","doc":"Returns the Identity Type Enumeration record which is configured as being\ndefault.\n\nIf no Identity Type record is configured as default, then `nil` is returned.","ref":"MssubMcp.html#get_identity_type_default/1"},{"type":"function","title":"Parameters - MssubMcp.get_identity_type_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Identity Type record configured for the\n  requested functional type rather than the system default Identity Type.\n  The default for this parameter is to treat the parameter as not provided\n  (`nil`).","ref":"MssubMcp.html#get_identity_type_default/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_identity_type_default/1","doc":"Requesting the system default Identity Type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"identity_types_sysdef_email\"} =\n    ...>   MssubMcp.get_identity_type_default()\n\nRequesting the default Identity Type for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"identity_types_sysdef_api\"} =\n    ...>   MssubMcp.get_identity_type_default(:identity_types_api)","ref":"MssubMcp.html#get_identity_type_default/1-examples"},{"type":"function","title":"MssubMcp.get_instance_by_name/1","doc":"Returns the SystInstances record identified by its internal name.","ref":"MssubMcp.html#get_instance_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_by_name/1","doc":"* `instance_name` - the internal name of the Instance record to return.","ref":"MssubMcp.html#get_instance_by_name/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_instance_by_name/1","doc":"iex> {:ok, %Msdata.SystInstances{}} =\n    ...>   MssubMcp.get_instance_by_name(\"app1_owner1_instance_types_sml\")","ref":"MssubMcp.html#get_instance_by_name/1-example"},{"type":"function","title":"MssubMcp.get_instance_datastore_options/2","doc":"Retrieves the Datastore Options based on the Instance database record and the\nprovided Startup Options.","ref":"MssubMcp.html#get_instance_datastore_options/2"},{"type":"function","title":"Parameters - MssubMcp.get_instance_datastore_options/2","doc":"* `instance` - the instance parameter is either the record ID value of the\n  Instance record desired or the `Msdata.SystInstances`\n  struct for the target Instance.\n\n  * `startup_options` - a map of values containing the Startup Options\n  obtained from the `MscmpSystOptions` component.","ref":"MssubMcp.html#get_instance_datastore_options/2-parameters"},{"type":"function","title":"MssubMcp.get_instance_id_by_name/1","doc":"Returns the ID of the Instance record as identified by its internal name.","ref":"MssubMcp.html#get_instance_id_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_id_by_name/1","doc":"* `instance_name` - the internal name of the Instance record to reference.","ref":"MssubMcp.html#get_instance_id_by_name/1-parameters"},{"type":"function","title":"Example - MssubMcp.get_instance_id_by_name/1","doc":"iex> {:ok, instance_id} =\n    ...>   MssubMcp.get_instance_id_by_name(\"app1_owner1_instance_types_sml\")\n    iex> is_binary(instance_id)\n    true","ref":"MssubMcp.html#get_instance_id_by_name/1-example"},{"type":"function","title":"MssubMcp.get_instance_network_rule/1","doc":"Retrieves a Instance Network Rule record based on its record ID.\n\nFor a given Instance Network Rule record ID this function will return a result\ntuple in the form of `{:ok,  }` where ` ` is the fully\npopulated `Msdata.SystInstanceNetworkRules`.  If the\nrecord does not exist, then `{:ok, :not_found}` is returned.  Otherwise, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MssubMcp.html#get_instance_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_network_rule/1","doc":"* `instance_network_rule_id` - the record ID of the desired Instance Network\nRule record.","ref":"MssubMcp.html#get_instance_network_rule/1-parameters"},{"type":"function","title":"MssubMcp.get_instance_network_rule!/1","doc":"Retrieves a Instance Network Rule record based on its record ID, raising on\nerror.\n\nThis function works the same as `get_instance_network_rule/1` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MssubMcp.html#get_instance_network_rule!/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_network_rule!/1","doc":"* `instance_network_rule_id` - the record ID of the desired Instance Network\nRule record.","ref":"MssubMcp.html#get_instance_network_rule!/1-parameters"},{"type":"function","title":"MssubMcp.get_instance_state_by_name/1","doc":"Retrieves the Instance State Enumeration record identified by the provided\nInternal Name.\n\nIf the requested Internal Name does not match an existing Instance State\nEnumeration record `nil` is returned.","ref":"MssubMcp.html#get_instance_state_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_state_by_name/1","doc":"* `instance_state_name` - the internal name of the Instance State to retrieve.","ref":"MssubMcp.html#get_instance_state_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_instance_state_by_name/1","doc":"Retrieving an Instance State Enumeration record.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"instance_states_sysdef_active\"} =\n    ...>   MssubMcp.get_instance_state_by_name(\"instance_states_sysdef_active\")\n\nTrying to retrieve a non-existent Instance State.\n\n    iex> MssubMcp.get_instance_state_by_name(\"nonexistent_state\")\n    nil","ref":"MssubMcp.html#get_instance_state_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_instance_state_default/1","doc":"Returns the Instance State Enumeration record which is configured as being\ndefault.\n\nIf no Instance State record is configured as default, then `nil` is returned.","ref":"MssubMcp.html#get_instance_state_default/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_state_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Instance State record configured for the\n  requested functional type rather than the system default Instance State.\n  The default for this parameter is to treat the parameter as not provided\n  (`nil`).","ref":"MssubMcp.html#get_instance_state_default/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_instance_state_default/1","doc":"Requesting the system default Instance State.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"instance_states_sysdef_uninitialized\"} =\n    ...>   MssubMcp.get_instance_state_default()\n\nRequesting the default Instance State for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"instance_states_sysdef_active\"} =\n    ...>   MssubMcp.get_instance_state_default(:instance_states_active)","ref":"MssubMcp.html#get_instance_state_default/1-examples"},{"type":"function","title":"MssubMcp.get_instance_type_by_name/1","doc":"Returns the Instance Type record for the given Internal Name; raises on error.\n\nOn successful execution either the requested Instance Type Enumeration record\nis returned or `nil` if the record does not exist.","ref":"MssubMcp.html#get_instance_type_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_instance_type_by_name/1","doc":"* `instance_type_name` - the Internal Name of the desire Instance Type\n  record to return.","ref":"MssubMcp.html#get_instance_type_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_instance_type_by_name/1","doc":"Finding a Instance Type record by Internal Name.\n\n    iex> %Msdata.SystEnumItems{} =\n    ...>   MssubMcp.get_instance_type_by_name(\"instance_types_big\")\n\nLooking for a non-existent record.\n\n    iex> MssubMcp.get_instance_type_by_name(\"nonexistent_type\")\n    nil","ref":"MssubMcp.html#get_instance_type_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_instance_type_default/0","doc":"Returns the Instance Type record which is configured as the system default\nInstance Type.\n\nIf no system default has not been defined `nil` is returned.","ref":"MssubMcp.html#get_instance_type_default/0"},{"type":"function","title":"Examples - MssubMcp.get_instance_type_default/0","doc":"iex> %Msdata.SystEnumItems{} = MssubMcp.get_instance_type_default()","ref":"MssubMcp.html#get_instance_type_default/0-examples"},{"type":"function","title":"MssubMcp.get_owner_by_name/1","doc":"Retrieves an Owner record by its internal name.\n\nThis retrieval operation will also populate the associated records of Owner\nState and the Owner State Functional Type.","ref":"MssubMcp.html#get_owner_by_name/1"},{"type":"function","title":"Examples - MssubMcp.get_owner_by_name/1","doc":"iex> {:ok, %Msdata.SystOwners{internal_name: \"owner1\"}} =\n  ...>   MssubMcp.get_owner_by_name(\"owner1\")","ref":"MssubMcp.html#get_owner_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_owner_id_by_name/1","doc":"Retrieves the Owner record ID by Owner internal name.","ref":"MssubMcp.html#get_owner_id_by_name/1"},{"type":"function","title":"Examples - MssubMcp.get_owner_id_by_name/1","doc":"iex> {:ok, owner_id} = MssubMcp.get_owner_id_by_name(\"owner1\")\n  iex> is_binary(owner_id)\n  true","ref":"MssubMcp.html#get_owner_id_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_owner_network_rule/1","doc":"Retrieves a Owner Network Rule record based on its record ID.\n\nFor a given Owner Network Rule record ID this function will return a result\ntuple in the form of `{:ok,  }` where ` ` is the fully\npopulated `Msdata.SystOwnerNetworkRules`.  If the\nrecord does not exist, then `{:ok, :not_found}` is returned.  Otherwise, an\nerror tuple in the form of `{:error,  }` is returned.","ref":"MssubMcp.html#get_owner_network_rule/1"},{"type":"function","title":"Parameters - MssubMcp.get_owner_network_rule/1","doc":"* `owner_network_rule_id` - the record ID of the desired Owner Network Rule\nrecord.","ref":"MssubMcp.html#get_owner_network_rule/1-parameters"},{"type":"function","title":"MssubMcp.get_owner_network_rule!/1","doc":"Retrieves a Owner Network Rule record based on its record ID, raising on\nerror.\n\nThis function works the same as `get_owner_network_rule/1` except this\nfunction returns its result without wrapping it in a result tuple.  If an\nerror is encountered, including if the record does not exist, an exception is\nraised.","ref":"MssubMcp.html#get_owner_network_rule!/1"},{"type":"function","title":"Parameters - MssubMcp.get_owner_network_rule!/1","doc":"* `owner_network_rule_id` - the record ID of the desired Owner Network Rule\nrecord.","ref":"MssubMcp.html#get_owner_network_rule!/1-parameters"},{"type":"function","title":"MssubMcp.get_owner_password_rules/1","doc":"Retrieves the currently active Owner Password Rules for the requested Owner.\n\nOn successful retrieval a success tuple in the form of `{:ok,  }` is\nreturned where ` ` is a populated\n`Msdata.SystownerPasswordRules` struct if Password Rules\nfor the requested Owner was found or `nil` otherwise.  Any exceptions are\nreturned via an error tuple.","ref":"MssubMcp.html#get_owner_password_rules/1"},{"type":"function","title":"Parameters - MssubMcp.get_owner_password_rules/1","doc":"* `owner_id` - the Owner record ID for whom to retrieve Password Rules.","ref":"MssubMcp.html#get_owner_password_rules/1-parameters"},{"type":"function","title":"MssubMcp.get_owner_password_rules!/1","doc":"Retrieves the currently active Owner Password Rules for the requested Owner,\nraising on error.\n\nThis function works the same as `get_owner_password_rules/1` except that\nany errors cause an exception to be raised.","ref":"MssubMcp.html#get_owner_password_rules!/1"},{"type":"function","title":"Parameters - MssubMcp.get_owner_password_rules!/1","doc":"* `owner_id` - the Owner record ID for whom to retrieve Password Rules.","ref":"MssubMcp.html#get_owner_password_rules!/1-parameters"},{"type":"function","title":"MssubMcp.get_owner_state_by_name/1","doc":"Returns the Owner State Enumeration record for the given Internal Name argument.\n\nIf the requested Internal Name does not match an existing Owner State\nEnumeration record `nil` is returned.","ref":"MssubMcp.html#get_owner_state_by_name/1"},{"type":"function","title":"Parameters - MssubMcp.get_owner_state_by_name/1","doc":"* `owner_state_name` - the internal name of the Owner State to retrieve.","ref":"MssubMcp.html#get_owner_state_by_name/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_owner_state_by_name/1","doc":"Retrieving an Owner State Enumeration record.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"owner_states_sysdef_active\"} =\n    ...>   MssubMcp.get_owner_state_by_name(\"owner_states_sysdef_active\")\n\nTrying to retrieve a non-existent Owner State.\n\n    iex> MssubMcp.get_owner_state_by_name(\"nonexistent_state\")\n    nil","ref":"MssubMcp.html#get_owner_state_by_name/1-examples"},{"type":"function","title":"MssubMcp.get_owner_state_default/1","doc":"Returns the Owner State Enumeration record which is configured as being\ndefault.\n\nIf no Owner State record is configured as default, then `nil` is returned.","ref":"MssubMcp.html#get_owner_state_default/1"},{"type":"function","title":"Parameters - MssubMcp.get_owner_state_default/1","doc":"* `functional_type` - an optional parameter which, if provided and not\n  `nil`, will return the default Owner State record configured for the\n  requested functional type rather than the system default Owner State.  The\n  default for this parameter is to treat the parameter as not provided\n  (`nil`).","ref":"MssubMcp.html#get_owner_state_default/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_owner_state_default/1","doc":"Requesting the system default Owner State.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"owner_states_sysdef_active\"} =\n    ...>   MssubMcp.get_owner_state_default()\n\nRequesting the default Owner State for a specific functional type.\n\n    iex> %Msdata.SystEnumItems{internal_name: \"owner_states_sysdef_inactive\"} =\n    ...>   MssubMcp.get_owner_state_default(:owner_states_inactive)","ref":"MssubMcp.html#get_owner_state_default/1-examples"},{"type":"function","title":"MssubMcp.get_perm_role_id_by_name/2","doc":"Retrieves the Permission Role record ID as found by its functional type name\nand Internal Name.\n\nThe function will either return the record ID of the requested Permission Role\nor `nil` of that role was not found.  If an error occurs an error tuple is\nreturned.","ref":"MssubMcp.html#get_perm_role_id_by_name/2"},{"type":"function","title":"Parameters - MssubMcp.get_perm_role_id_by_name/2","doc":"* `perm_func_type_name` - the Internal Name of the Permission Functional Type\n to which the search should be restricted.  While the Permission Role name\n itself is unique, specifying the Permission Functional Type serves as a check\n that request context is correct.\n\n * `perm_role_name` - the Internal Name value of the Permission Role to search\n for.","ref":"MssubMcp.html#get_perm_role_id_by_name/2-parameters"},{"type":"function","title":"Examples - MssubMcp.get_perm_role_id_by_name/2","doc":"Retrieve the record ID of a Permission Role record.\n\n    iex> _perm_role_id =\n    ...>   MssubMcp.get_perm_role_id_by_name(\"func_type_1\", \"perm_role_1\")\n\nSearching for a non-existent record returns `nil`.\n\n    iex> MssubMcp.get_perm_role_id_by_name(\"func_type_1\", \"nonexistent_role\")\n    nil","ref":"MssubMcp.html#get_perm_role_id_by_name/2-examples"},{"type":"function","title":"MssubMcp.get_session/2","doc":"Retrieves the Session Data for the named Session and resets the Session\nExpiration.\n\nIt should be noted that reading a Session will also refresh the expiration of\nthat Session's expiration date.\n\nTrying to retrieve the Session data of an already expired Session results in\na not found tuple being returned (`{:ok, :not_found}`).","ref":"MssubMcp.html#get_session/2"},{"type":"function","title":"Parameters - MssubMcp.get_session/2","doc":"* `session_name` - the Session Name that was generated by `create_session/2`\n  at Session create time.  This argument is required.\n\n  * `opts` - a Keyword List of optional parameters.  The available parameters\n  are:\n\n    * `expires_after` - the number of seconds for which the session will be\n    considered valid.  The default value for this setting via this API is the\n    current value of the MCP integer setting `mssub_mcp_session_expiration`; \n    by default that value is 3,600 seconds (1 hour).","ref":"MssubMcp.html#get_session/2-parameters"},{"type":"function","title":"Examples - MssubMcp.get_session/2","doc":"Retrieving a Session and setting the renewed expiration date/time to 30\nminutes from retrieval time.\n\n    iex> {:ok, %{}} = MssubMcp.get_session(\"example_session\", expires_after: 1800)\n\nAttempting to retrieve an expired Session returns the not found value.\n\n    iex> MssubMcp.get_session(\"example_expired_session\")\n    {:ok, :not_found}","ref":"MssubMcp.html#get_session/2-examples"},{"type":"function","title":"MssubMcp.get_setting_value/2","doc":"Retrieves the value of the given type for the requested setting.","ref":"MssubMcp.html#get_setting_value/2"},{"type":"function","title":"Parameters - MssubMcp.get_setting_value/2","doc":"* `setting_name` - the name of the setting for which to retrieve a value.\n\n* `setting_type` - the type of value which to return.","ref":"MssubMcp.html#get_setting_value/2-parameters"},{"type":"function","title":"Examples - MssubMcp.get_setting_value/2","doc":"iex> MssubMcp.get_setting_value(\n    ...>   \"get_example_setting\",\n    ...>   :setting_decimal_range)\n    %MscmpSystDb.DbTypes.DecimalRange{\n      lower: Decimal.new(\"1.1\"),\n      upper: Decimal.new(\"99.99\"),\n      lower_inclusive: true,\n      upper_inclusive: false\n    }","ref":"MssubMcp.html#get_setting_value/2-examples"},{"type":"function","title":"MssubMcp.get_setting_values/1","doc":"Retrieves all values associated with the requested setting.","ref":"MssubMcp.html#get_setting_values/1"},{"type":"function","title":"Parameters - MssubMcp.get_setting_values/1","doc":"* `setting_name` - the name of the setting for which to retrieve values.\n\nThe successful return of this function is an instance of the\n`Msdata.SystSettings` struct containing the values requested.","ref":"MssubMcp.html#get_setting_values/1-parameters"},{"type":"function","title":"Examples - MssubMcp.get_setting_values/1","doc":"iex> MssubMcp.get_setting_values(\"get_example_setting\")","ref":"MssubMcp.html#get_setting_values/1-examples"},{"type":"function","title":"MssubMcp.grant_perm_role/2","doc":"Grants a Permission Role to the given selector.\n\nOn successful execution of the grant, the function will return a simple `:ok`.\nOn error, an error tuple is returned.","ref":"MssubMcp.html#grant_perm_role/2"},{"type":"function","title":"Parameters - MssubMcp.grant_perm_role/2","doc":"* `selector` - this value is a struct which determines the specific\n  implementation of this function to call and which contains the keys/values\n  to use as the unique identifier of the user context to which you are\n  granting Permission Roles.\n\n  * `perm_role_id` - the record ID value of the Permission Role record which\n  you are granting to the user context identified by the `selector`.","ref":"MssubMcp.html#grant_perm_role/2-parameters"},{"type":"function","title":"MssubMcp.host_disallowed/1","doc":"Indicates whether the provided host IP address is to be denied access to the\nsystem.\n\nThis function returns a tuple in the form of `{:ok,  }` where the\n`disallowed` value is either `true` meaning that the requested host is\ndisallowed from authenticating with the system or `false` if the host is\npermitted to attempt an authentication.","ref":"MssubMcp.html#host_disallowed/1"},{"type":"function","title":"Parameters - MssubMcp.host_disallowed/1","doc":"* `host_address` - the host IP address to test.  Typically this will be the\n  host address of a user wishing to authenticate with the system.","ref":"MssubMcp.html#host_disallowed/1-parameters"},{"type":"function","title":"Examples - MssubMcp.host_disallowed/1","doc":"An allowed host will return a `false` result tuple.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.host_disallowed(~i\"10.150.150.10\")\n    {:ok, false}\n\n  A disallowed host returns a `true` result tuple.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.host_disallowed(~i\"10.123.123.5\")\n    {:ok, true}","ref":"MssubMcp.html#host_disallowed/1-examples"},{"type":"function","title":"MssubMcp.host_disallowed?/1","doc":"Indicates whether the provided host IP address is to be denied access to the\nsystem, raising on error.\n\nThis function works the same as `host_disallowed/1` except this function\nreturns its result without wrapping it in a result tuple.  If an error is\nencountered an exception is raised.","ref":"MssubMcp.html#host_disallowed?/1"},{"type":"function","title":"Parameters - MssubMcp.host_disallowed?/1","doc":"* `host_address` - the host IP address to test.  Typically this will be the\n  host address of a user wishing to authenticate with the system.","ref":"MssubMcp.html#host_disallowed?/1-parameters"},{"type":"function","title":"Examples - MssubMcp.host_disallowed?/1","doc":"An allowed host will return a `false` value.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.host_disallowed?(~i\"10.150.150.10\")\n    false\n\n  A disallowed host returns a `true` value.\n\n    iex> import MscmpSystNetwork, only: [sigil_i: 2]\n    iex> MssubMcp.host_disallowed?(~i\"10.123.123.5\")\n    true","ref":"MssubMcp.html#host_disallowed?/1-examples"},{"type":"function","title":"MssubMcp.identify_access_account_by_code/2","doc":"Identifies an Access Account by its Account Code identifier.\n\nOn successful identification, the Account Code Identity record which was found\nbased on the supplied parameters is returned via a success tuple.  If the\nfunction completes successfully but no Identity record is found for the\nIdentifier a value of `{:ok, :not_found}` is returned.","ref":"MssubMcp.html#identify_access_account_by_code/2"},{"type":"function","title":"Parameters - MssubMcp.identify_access_account_by_code/2","doc":"* `account_code` - the Account Code identifier which will identify the\n  Access Account\n\n  * `owner_id` - if the expected Access Account is an Owned Access Account,\n  the Owner must be identified.  If the Access Account is Unowned, this\n  parameter should be `nil`.","ref":"MssubMcp.html#identify_access_account_by_code/2-parameters"},{"type":"function","title":"MssubMcp.initialize_instance/3","doc":"Initializes an uninitialized Instance.\n\nWhen a new Instance is created in the database, the record is giving an\nInstance State with a functional type of `instance_states_uninitialized`\nmeaning that the Instance record has been created in the database, but the\nInstance's own database and associated database roles have not yet been set\nup.\n\nInitializing an Instance creates its database and its database roles\n(\"Datastore\" and \"Datastore Contexts\"). Once initialized, the Instance record\nis given an Instance State of functional type `instance_states_initialized`.\n\nInitialized Instances may be started and have their Datastores migrated to the\ncurrent version of the Instance's database.","ref":"MssubMcp.html#initialize_instance/3"},{"type":"function","title":"Parameters - MssubMcp.initialize_instance/3","doc":"* `instance_id` - the record ID of the Instance to initialize.\n\n  * `startup_options` - a map of values containing the Startup Options\n  obtained from the `MscmpSystOptions` component.\n\n  * `opts` - a Keyword List of optional values used during the initialization\n  process.  The available options include:\n\n    * `initializing_state_id` - the record ID value of the Instance State to\n    use to indicate that the record is being initialized.  If this value is\n    not provided the configured default Instance State for the functional type\n    `instance_states_initializing` will be used.\n\n    * `initialized_state_id` - the record ID value of the Instance State to\n    use to indicate that the record has successfully been initialized.  If\n    this value is not provided the configured default Instance State for the\n    functional type `instance_states_initialized` will be used.\n\n    * `failed_state_id` - the record ID value of the Instance State to\n    use to indicate that the record has failed to be initialized.  If this\n    value is not provided the default configured Instance State for the\n    functional type `instance_states_failure` will be used.\n\n    * `db_shutdown_timeout` - a timeout value used to limit the time allowed\n    for a clean shutdown of the DBA and Privileged database connections used\n    for initialization of the Datastore.  See the documentation for\n    `MscmpSystDb.create_datastore/2` for more information.","ref":"MssubMcp.html#initialize_instance/3-parameters"},{"type":"function","title":"MssubMcp.invite_to_instance/3","doc":"Invites or re-invites an Access Account to establish access rights to a\nspecific Instance.\n\nThe invitation process creates a `syst_access_account_instance_assocs` record\nfor the requested Access Account and Instance and sets the `invitation_issued`\nfield to the current date/time.  Re-invitation will update an existing\n`syst_access_account_instance_assocs` record resetting invite data such as the\ninvitation expiration date or resetting the declined state if the record was\npreviously declined by the Access Account holder. Once a\n`syst_access_account_instance_assocs` record is accepted, it may not be re-\ninvited again using this process until the record is revoked (deleted).\n\n`syst_access_account_instance_assocs` are unique to the Access Account and\nInstance combination and only one such record may exist for that combination\nat any one time.","ref":"MssubMcp.html#invite_to_instance/3"},{"type":"function","title":"Parameters - MssubMcp.invite_to_instance/3","doc":"* `access_account_id` - the record ID of the Access Account to invite to the\n  Instance.\n\n  * `instance_id` - the Instance record ID to which the Access Account is\n  being invited.\n\n  * `opts` - a keyword list of optional parameters used to set record values\n  and behaviors.  Available options are:\n\n    * `create_accepted` - will create a `syst_access_account_instance_assocs`\n    record which is already accepted when set `true`.  The default value is\n    `false`.\n\n    * `expiration_days` - for records that are not created as accepted and act\n    as true invitations, this option sets the number of days in which an\n    Access Account holder may accept the invitation.  After this time the\n    invitation is considered expired and must be re-invited before it can be\n    used to grant access again.  The default value for this option is 30 days.","ref":"MssubMcp.html#invite_to_instance/3-parameters"},{"type":"function","title":"MssubMcp.list_all_settings/0","doc":"Retrieves all values for all settings.\n\nThis function returns all other setting metadata, such as the records' IDs,\ndescriptions, etc.","ref":"MssubMcp.html#list_all_settings/0"},{"type":"function","title":"Examples - MssubMcp.list_all_settings/0","doc":"iex> MssubMcp.list_all_settings()","ref":"MssubMcp.html#list_all_settings/0-examples"},{"type":"function","title":"MssubMcp.list_application_contexts/1","doc":"Returns a list of Application Context records.","ref":"MssubMcp.html#list_application_contexts/1"},{"type":"function","title":"Parameters - MssubMcp.list_application_contexts/1","doc":"* `application_id` - an optional reference to a specific application for\n  which to return Application Context records.  By default this value is `nil`\n  which results in all Application Context records for all Applications being\n  returned.","ref":"MssubMcp.html#list_application_contexts/1-parameters"},{"type":"function","title":"MssubMcp.list_perm_denials/2","doc":"List all explicit denials of Permissions from the identified user context.\n\nAn assumption made by this module is that Permission Roles are granted to\nusers as whole roles, but individual Permissions may be explicitly denied from\nusers on a Permission by Permission basis.  This function is intended to list\nPermission denials for a user context so that the denials may be managed.\n\nSome user contexts may not offer explicit Permission denials.  In these cases\nthis function should simply return a success tuple containing an empty list as\nthe value.","ref":"MssubMcp.html#list_perm_denials/2"},{"type":"function","title":"Parameters - MssubMcp.list_perm_denials/2","doc":"* `selector` - this value is a struct which determines the specific\n  implementation of this function to call and which contains the keys/values\n  to use in selecting which Permission denial records to retrieve.  Specific\n  details about what records are involved and how the selection return values\n  are determine are implementation specific and will be documented on a case-\n  by-case basis.\n\n  * `opts` - a Keyword List of optional parameters which may be provided.  The\n  only general option is listed below, each specific implementation of this\n  function may extend the available options as appropriate to the\n  implementation.","ref":"MssubMcp.html#list_perm_denials/2-parameters"},{"type":"function","title":"MssubMcp.list_perm_grants/2","doc":"Lists all of the Permission Role records granted to the user context\nidentified by the `selector`, including the Rights/Scopes of the grants.\n\nThis function facilitates understanding what roles have been granted to user\nand what Permissions/Rights/Scopes those roles grant to the user.  This list\nis intended to be descriptive and not directly indicating the effective grants\napplied to the user.  Typical uses of this function are to populate lists of\nPermission Role Grants for the purposes of managing user access.","ref":"MssubMcp.html#list_perm_grants/2"},{"type":"function","title":"Parameters - MssubMcp.list_perm_grants/2","doc":"* `selector` - this value is a struct which determines the specific\n  implementation of this function to call and which contains the keys/values\n  to use in selecting which Permission and Permission Role Grant records to\n  retrieve.  Specific details about what records are involved and how the\n  selection return values are determine are implementation specific and will\n  be documented on a case-by-case basis.\n\n  * `opts` - a Keyword List of optional parameters which may be provided.  The\n  only general option is listed below, each specific implementation of this\n  function may extend the available options as appropriate to the\n  implementation.\n\n    * `include_perms` - a boolean option which, when set `true`, will preload\n    the `Msdata.SystPermRoleGrants` `perm` data.  The default value for this\n    option is `false`.","ref":"MssubMcp.html#list_perm_grants/2-parameters"},{"type":"function","title":"MssubMcp.load_disallowed_passwords/2","doc":"Bulk loads a list of passwords into the Disallowed Passwords database table.\n\nTypically this function will be used to receive a stream of passwords which\nshould be added to the system Disallowed Passwords list.  The passwords\npassed to this function are streamed into the PostgreSQL database via a\n`COPY ms_syst.syst_disallowed_passwords FROM` command.\n\nThe system Disallowed Password List is stored using SHA-1 hashes of the\ndisallowed passwords to prevent the casual disclosure of possibly sensitive\ninformation including so called \"Personally Identifiable Information\" (PII).\nIf passwords to this function are provided via plain text this function will\nconvert them to the expected SHA-1 representation.","ref":"MssubMcp.html#load_disallowed_passwords/2"},{"type":"function","title":"Parameters - MssubMcp.load_disallowed_passwords/2","doc":"* `password_list` - A required Enumerable of passwords to disallow. The\n  passwords in this list are accepted in one of two possible formats: simple\n  plain text passwords or as sha1 hashes represented using PostgreSQL's `bytea`\n  textual export format (e.g. \"example_pg_disallowed\" =\n  \"\\\\x32dc749fd3ef7bcf79d125a3f9146c0f122f8763\").  Which is expected depends\n  on the `pg_format` option described below.\n\n  > ##","ref":"MssubMcp.html#load_disallowed_passwords/2-parameters"},{"type":"function","title":"Plain Text Processing Tip {: .tip} - MssubMcp.load_disallowed_passwords/2","doc":">\n  > If the `password_list` is using the plain text representation, some\n  > sources, such as `File.stream!/3` may add an extraneous newline (or\n  > similar) to the password which must be stripped prior to passing to this\n  > function.  Failing to do so will result in incorrect hashing and the\n  > requested passwords will not be effectively disallowed.\n\n  * `options` - An optional Keyword List of settings with which the caller can\n  influence the behavior of this function.  The available options are:\n\n    * `pg_format` - a boolean value which indicates the format that the source\n    passwords are being provided in.  If true, the passwords to disallow are\n    expected to be already be SHA-1 hashed and represented using PostgreSQL's\n    `bytea` textual representation; if false, the passwords are assumed to be\n    represented using simple plain text which will be transformed as needed by\n    this function.  The default value of this parameter is `false` for plain\n    text processing.\n\n    * `timeout` - an integer representing the number of milliseconds that the\n    database transaction processing the load operation will wait prior to\n    timing out with an error.  Bulk loading is assumed to be used in cases\n    where a substantial amount of data might be processed; certainly enough\n    data to possibly exceed the system default database transaction timeout.\n    As such it is recommend to be sure the timeout here is fit for the data\n    requirements expected for any given call.  The default value is 300,000\n    milliseconds (5 minutes).","ref":"MssubMcp.html#load_disallowed_passwords/2-plain-text-processing-tip-tip"},{"type":"function","title":"Examples - MssubMcp.load_disallowed_passwords/2","doc":"Loading the Disallowed Passwords List using a file listing plain text\npasswords.\n\n    iex> MssubMcp.password_disallowed?(\"example_plain_disallowed\")\n    false\n    iex> Path.join([\"database\", \"example_plain_disallowed_passwords.txt\"])\n    ...>   |> File.stream!()\n    ...>   |> Stream.map(&String.trim_trailing(&1, \"\\n\"))\n    ...>   |> MssubMcp.load_disallowed_passwords()\n    :ok\n    iex> MssubMcp.password_disallowed?(\"example_plain_disallowed\")\n    true\n\nLoading the Disallowed Passwords List using a file already formatted for\ndirect loading into PostgreSQL.\n\n    iex> MssubMcp.password_disallowed?(\"example_pg_disallowed\")\n    false\n    iex> Path.join([\"database\", \"example_pg_disallowed_passwords.txt\"])\n    ...>   |> File.stream!()\n    ...>   |> MssubMcp.load_disallowed_passwords(pg_format: true)\n    :ok\n    iex> MssubMcp.password_disallowed?(\"example_pg_disallowed\")\n    true","ref":"MssubMcp.html#load_disallowed_passwords/2-examples"},{"type":"function","title":"MssubMcp.owner_exists?/1","doc":"Tests to see if a specific Owner, or any Owner, record exists in the database.\n\nThe functions provides an optional test on either an Owner record's Internal\nName or record ID value.  If no selectivity option is made, the test checks if\nany Owner records exist in the database at all.\n\nIf the Owner record(s) is found, the function returns true; other false.\nErrors produce a result tuple.","ref":"MssubMcp.html#owner_exists?/1"},{"type":"function","title":"Parameters - MssubMcp.owner_exists?/1","doc":"* `opts` - an optional Keyword List of optional parameters which can\n  influence the result of calling the function.  The available options are:\n\n    * `owner_id` - tests if a specific Owner record exists as referenced by\n    its record ID value.\n\n    * `owner_name` - tests if a specific Owner record exists as referenced by\n    its Internal Name.","ref":"MssubMcp.html#owner_exists?/1-parameters"},{"type":"function","title":"Examples - MssubMcp.owner_exists?/1","doc":"Check if any Owner record exists.\n\n    iex> MssubMcp.owner_exists?()\n    true\n\nCheck if a specific Owner record exists.\n\n    iex> MssubMcp.owner_exists?(owner_name: \"owner1\")\n    true\n\nIf a non-existent Owner is requested, the function indicates the record was\nnot found.\n\n    iex> MssubMcp.owner_exists?(owner_name: \"nonexistent_owner\")\n    false","ref":"MssubMcp.html#owner_exists?/1-examples"},{"type":"function","title":"MssubMcp.password_disallowed/1","doc":"Indicates whether the requested password is disallowed.\n\nThis function returns a tuple in the form of `{:ok,  }` where the\n`disallowed` value is either `true` meaning that the requested password is\ndisallowed or `false` if the password is available for use.\n\nRegardless of the return of this function, disallowed passwords are only\nprevented for use if the effective `disallow_compromised` Password Rule for\nthe Access Account attempting authentication is set.","ref":"MssubMcp.html#password_disallowed/1"},{"type":"function","title":"Parameters - MssubMcp.password_disallowed/1","doc":"* `password` - the plaintext password to test for disallowed status.","ref":"MssubMcp.html#password_disallowed/1-parameters"},{"type":"function","title":"Examples - MssubMcp.password_disallowed/1","doc":"When a password has been previously disallowed and cannot be used as a\n  user credential.\n\n    iex> MssubMcp.password_disallowed(\"Is Disallowed\")\n    {:ok, true}\n\n  When a password has not been previously disallowed.\n\n    iex> MssubMcp.password_disallowed(\"Is Not Disallowed\")\n    {:ok, false}","ref":"MssubMcp.html#password_disallowed/1-examples"},{"type":"function","title":"MssubMcp.password_disallowed?/1","doc":"Indicates whether the requested password is disallowed, raising on error.\n\nThis function works the same as `disallowed_password/1` except this function\nreturns a simple `boolean` value rather than a result tuple.  If an error is\nencountered an exception is raised.","ref":"MssubMcp.html#password_disallowed?/1"},{"type":"function","title":"Parameters - MssubMcp.password_disallowed?/1","doc":"* `password` - the plaintext password to test for disallowed status.","ref":"MssubMcp.html#password_disallowed?/1-parameters"},{"type":"function","title":"Examples - MssubMcp.password_disallowed?/1","doc":"When a password has been previously disallowed and cannot be used as a\n  user credential.\n\n    iex> MssubMcp.password_disallowed?(\"Is Disallowed\")\n    true\n\n  When a password has not been previously disallowed.\n\n    iex> MssubMcp.password_disallowed?(\"Is Not Disallowed\")\n    false","ref":"MssubMcp.html#password_disallowed?/1-examples"},{"type":"function","title":"MssubMcp.process_operation/1","doc":"Processes the given function in the context of the MCP services & Datastore.\n\nReturns the return value of the provided function.","ref":"MssubMcp.html#process_operation/1"},{"type":"function","title":"Parameters - MssubMcp.process_operation/1","doc":"* `operation` - a function  which wraps the operations to be executed in\n  the MCP service context.","ref":"MssubMcp.html#process_operation/1-parameters"},{"type":"function","title":"Examples - MssubMcp.process_operation/1","doc":"Retrieving an Msdata.SystOwners record from the MCP database.\n\n    iex> mcp_operation = fn -> MscmpSystInstance.get_owner_by_name(\"owner1\") end\n    iex> {:ok, %Msdata.SystOwners{}} = MssubMcp.process_operation(mcp_operation)","ref":"MssubMcp.html#process_operation/1-examples"},{"type":"function","title":"MssubMcp.purge_access_account/1","doc":"Purges the requested Access Account if the Access Account State is of\na purge eligible functional type.","ref":"MssubMcp.html#purge_access_account/1"},{"type":"function","title":"Parameters - MssubMcp.purge_access_account/1","doc":"* `access_account` - is either the record ID of the Access Account to purge\n  or the populated `Msdata.SystAccessAccounts` struct\n  representing the record to purge.","ref":"MssubMcp.html#purge_access_account/1-parameters"},{"type":"function","title":"Example - MssubMcp.purge_access_account/1","doc":"iex> {:ok, target_access_account} =\n    ...>   MssubMcp.get_access_account_by_name(\"example_purge_accnt\")\n    iex> MssubMcp.purge_access_account(target_access_account)\n    :ok","ref":"MssubMcp.html#purge_access_account/1-example"},{"type":"function","title":"MssubMcp.purge_expired_sessions/1","doc":"Purges the database of previously expired Session records.\n\nThe intention of this function is for it to be called on a periodic, scheduled\nbasis in order to keep the system clean of expired Sessions.  The expectations\nare that the purge process may take some time.  Currently, 4 minutes are\nallotted for the running of the process prior to timing out, so a schedule\nmore aggressive than once every 5 minutes is not advised.","ref":"MssubMcp.html#purge_expired_sessions/1"},{"type":"function","title":"Parameters - MssubMcp.purge_expired_sessions/1","doc":"* `opts` - a Keyword List of optional parameters.  The available parameters\n  are:\n\n    * `db_timeout` - the number of seconds to allow the database DELETE query\n    to run before timing out the transaction.  The default value is 300\n    (5 minutes).","ref":"MssubMcp.html#purge_expired_sessions/1-parameters"},{"type":"function","title":"MssubMcp.purge_instance/2","doc":"Purges an eligible Instance from the system.\n\nPurging an Instance drops its associated Datastore and its defining\n`Msdata.SystInstances` records from the database.\n\nIn order for the purge to be successful, the Instance must be in an Instance\nState of functional type `instance_states_purge_eligible`.\n\n> ##","ref":"MssubMcp.html#purge_instance/2"},{"type":"function","title":"Warning {: .warning} - MssubMcp.purge_instance/2","doc":"> Naturally, great care must be taken in the lead up to calling this function\n> as purging an Instance leads to the irreversible loss of the Instance's data\n> (absent externally managed backups of some sort).","ref":"MssubMcp.html#purge_instance/2-warning-warning"},{"type":"function","title":"Parameters - MssubMcp.purge_instance/2","doc":"* `instance` - either the record ID or the\n  `Msdata.SystInstances` struct of the Instance to purge.\n\n  * `startup_options` - a map of values containing the Startup Options\n  obtained from the `MscmpSystOptions` component.","ref":"MssubMcp.html#purge_instance/2-parameters"},{"type":"function","title":"MssubMcp.purge_owner/1","doc":"Removes an Owner record from the system.\n\nNote that only Owner records in an Owner State of functional type\n`owner_states_purge_eligible` may be purged from the system.","ref":"MssubMcp.html#purge_owner/1"},{"type":"function","title":"Parameters - MssubMcp.purge_owner/1","doc":"* `owner` - either the record ID of an Owner record to delete or the\n  `Msdata.SystOwners` struct representing the Owner to\n  purge.","ref":"MssubMcp.html#purge_owner/1-parameters"},{"type":"function","title":"MssubMcp.refresh_session_expiration/2","doc":"Refreshes the Session expiration date/time of the identified record.\n\nThe function only returns its success status absent any data.\n\nDo note that all other interactions with the Session will also refresh the\nSession expiration date/time so in many cases there is no need to call this\nfunction explicitly.  Typically you'd only call this function if you've had\ninteraction with the user, but not needed to access the session for some time.\n\nTrying to refresh the expiration date/time of an already expired Session will\nbe treated as a \"not found\" record.","ref":"MssubMcp.html#refresh_session_expiration/2"},{"type":"function","title":"Parameters - MssubMcp.refresh_session_expiration/2","doc":"* `session_name` - the Session Name that was generated by `create_session/2`\n  at Session create time.  This argument is required.\n\n  * `opts` - a Keyword List of optional parameters.  The available parameters\n  are:\n\n    * `expires_after` - the number of seconds for which the session will be\n    considered valid.  The default value for this setting via this API is the\n    current value of the MCP integer setting `mssub_mcp_session_expiration`; \n    by default that value is 3,600 seconds (1 hour).","ref":"MssubMcp.html#refresh_session_expiration/2-parameters"},{"type":"function","title":"Examples - MssubMcp.refresh_session_expiration/2","doc":"Refreshing a Session expiration date/time to 30 minutes from refresh time.\n\n    iex> MssubMcp.refresh_session_expiration(\"example_session\", expires_after: 1800)\n    :ok\n\nAttempting to refresh an already expired Session returns the not found value.\n\n    iex> MssubMcp.refresh_session_expiration(\"example_expired_session\")\n    {:ok, :not_found}","ref":"MssubMcp.html#refresh_session_expiration/2-examples"},{"type":"function","title":"MssubMcp.request_identity_validation/2","doc":"Requests the creation of a Validation Token Authenticator for the specified\nIdentity.\n\nOn successful creation of the requested Validation Token Authenticator, an\nAuthenticator Result will be returned as the value element of a success tuple:\n\n    { :ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        validation_identifier: \"psYFOfuULJPTbs5MUvOYTyt71fAbQCj7XcmerRlQ\",\n        validation_credential: \"zz29w7l5Ev7vuRlGFHcPPjLTXjepdbYlyQwbBjDe\"\n    }}\n\nImportantly, the system generated Validation Token identifier and plaintext\ncredential are returned to the caller.  This is the only opportunity to obtain\nthe plaintext credential; after the return value of the function is disposed\nof there is no way to once again retrieve the plaintext of the Validation\nToken Credential.\n\nOnce the Validation Token Authenticator has been successfully created, the\ntarget Identity (typically an Email Identity) may not be used for\nauthentication until the Validation Token itself has been successfully\nauthenticated via the `authenticate_validation_token/4` function.\n\nThe created Validation Token Authenticator will expire after a time.  After\nexpiration the the Authenticator will no longer be to be authenticated by\n`authenticate_validation_token/4`.  The only way to validate the target\nIdentity at that point is to create a new Validation Token Authenticator for\nthe Identity using this function.","ref":"MssubMcp.html#request_identity_validation/2"},{"type":"function","title":"Parameters - MssubMcp.request_identity_validation/2","doc":"* `target_identity` - either the record ID or the\n  `Msdata.SystIdentities` struct of the Identity record\n  to validate.  Typically this Identity will be an Email Identity.\n\n  * `opts` - a Keyword List of options which can change the behavior to the\n  Identity validation request.  The available options are:\n\n    * `expiration_hours` - overrides the default number of hours after which\n    to consider the Validation Authenticator expired.  By default the\n    Validation Authenticator expires 24 hours after creation.\n\n    * `identity_token_length` - this option overrides the default number of\n    random characters to generate for the Validation Token Identity\n    identifier.  The default number of characters generated is 40.\n\n    * `identity_tokens` - overrides the default character set to use in the\n    generation of the Validation Token Identity identifier.  The default value\n    is `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token_length` - this option overrides the default number of\n    random characters to generate for the Validation Token Credential. The\n    default number of characters generated is 40.\n\n    * `credential_tokens` - overrides the default character set to use in the\n    generation of the Validation Token Credential.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token` - overrides the system generated Validation\n    Credential with the value of this option.  The default is to allow the\n    system to automatically generate the credential.","ref":"MssubMcp.html#request_identity_validation/2-parameters"},{"type":"function","title":"MssubMcp.request_password_recovery/2","doc":"Requests to start a Password Credential recovery process for the specified\nAccess Account.\n\nAssuming that the Access Account's Password Credential exists and isn't\nalready being recovered, this function will create a new Recovery Token\nAuthenticator for the Access Account's Password Credential.\n\nOn successful creation of the requested Recovery Token Authenticator, an\nAuthenticator Result will be returned as the value element of a success tuple:\n\n    { :ok,\n      %{\n        access_account_id: \"c3c7fafd-5c45-11ed-ab46-f3d9be809bf9\",\n        account_identifier: \"acdyItesdmUvUoM7mKwPKd3mrBBnH87L2WA1DPip\",\n        credential: \"WYbFG2vkJOLD5ITX9tSE5OTZ9JlHdJE8BQ8Ukiiq\"\n    }}\n\nImportantly, the system generated Recovery Token account identifier and\nplaintext credential are returned to the caller.  This is the only opportunity\nto obtain the plaintext credential; after the return value of the function is\ndisposed of there is no way to once again retrieve the plaintext of the\nRecovery Token Credential.\n\nThe existence of a Recovery Token Authenticator for a Password Credential does\nnot prevent that Password Credential from continuing to be used in the\nauthentication process.\n\nA Recovery Token Authenticator will expire after a time.  After expiration the\nRecovery Token will no longer be able to be authenticated with\n`authenticate_recovery_token/4`.  Any further recovery of the Password\nCredential will require a new Recovery Token be created.","ref":"MssubMcp.html#request_password_recovery/2"},{"type":"function","title":"Parameters - MssubMcp.request_password_recovery/2","doc":"* `access_account_id` - the record ID of the Access Account to which the\n  Password Credential needing recovering belongs.\n\n  * `opts` - a Keyword List of options which can change the behavior to the\n  password recovery request.  The available options are:\n\n    * `expiration_hours` - overrides the default number of hours after which\n    to consider the Recovery Authenticator expired.  By default the Recovery\n    Authenticator expires 24 hours after creation.\n\n    * `identity_token_length` - this option overrides the default number of\n    random characters to generate for the Recovery Token Identity identifier.\n    The default number of characters generated is 40.\n\n    * `identity_tokens` - overrides the default character set to use in the\n    generation of the Recovery Token Identity identifier.  The default value\n    is `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token_length` - this option overrides the default number of\n    random characters to generate for the Recovery Token Credential. The\n    default number of characters generated is 40.\n\n    * `credential_tokens` - overrides the default character set to use in the\n    generation of the Recovery Token Credential.  The default value is\n    `:mixed_alphanum`.  See the `MscmpSystUtils.get_random_string/2`\n    documentation for the `tokens` parameter which receives this option for\n    more information regarding valid values for this setting.\n\n    * `credential_token` - overrides the system generated Recovery Credential\n    with the value of this option.  The default is to allow the system to\n    automatically generate the credential.","ref":"MssubMcp.html#request_password_recovery/2-parameters"},{"type":"function","title":"MssubMcp.reset_password_credential/2","doc":"Allows for an existing password to be changed to a new password.\n\nThe assumption is that a Password Credential already exists and that only the\npassword itself is being changed from an old value to a new value.\n\nThis function ensures that the new password meets all applicable Password \nRules prior to completing the change.  This function will not allow you to set\nthe password to an invalid value.\n\nFinally, in the case of a user initiated password change, it is traditional \nthat the user has to re-authenticate or provide their current password to \nverify they are, in fact, the person initiating the change.  This function \ndoes not try to achieve this goal.  The scope of this function assumes that \nany such confirmation of identity has been completed satisfactorily elsewhere. \n\nOn successful Password Credential reset this function will return `:ok`.  If\nthe new credential fails to meet the Password Rule criteria that applies to \nit, the function will return a failure tuple of type \n`t:MscmpSystAuthn.Types.credential_set_failures/0`.  All other return \nconditions are errors and result in an error tuple.","ref":"MssubMcp.html#reset_password_credential/2"},{"type":"function","title":"Parameters - MssubMcp.reset_password_credential/2","doc":"* `access_account_id` - the Access Account for whom the Password is being\n  changed.\n\n  * `new_credential` - the new Password which will become the credential on\n  the successful completion of the function.","ref":"MssubMcp.html#reset_password_credential/2-parameters"},{"type":"function","title":"MssubMcp.revoke_account_code/1","doc":"Revokes a previously create Account Code Identity from an Access Account,\ndeleting it from the system.\n\nOn successful deletion a success tuple in the form `{:ok, :deleted}` is\nreturned.  If no existing Account Code Identity is found a tuple in this form\n`{:ok, :not_found}` is returned.  All other outcomes are error conditions\nresulting in the return of an error tuple.","ref":"MssubMcp.html#revoke_account_code/1"},{"type":"function","title":"Parameters - MssubMcp.revoke_account_code/1","doc":"* `access_account_id` - the Access Account record ID from which to revoke\n  the Account Code Identity.","ref":"MssubMcp.html#revoke_account_code/1-parameters"},{"type":"function","title":"MssubMcp.revoke_api_token/1","doc":"Revokes the request API Token Authenticator by deleting it from the system.\n\nAPI Token Authenticators will regularly need to be decommissioned from the\nsystem by the Access Account holders they represent.  By revoking an API\nToken it is deleted from system.\n\nA successful deletion will return a success tuple if the form\n`{:ok, :deleted}`.  If the API Token Identity is not found this function will\nreturn a success tuple of `{:ok, :not_found}`.  Any other outcome is an error\nand results in an error tuple being returned.","ref":"MssubMcp.html#revoke_api_token/1"},{"type":"function","title":"Parameters - MssubMcp.revoke_api_token/1","doc":"* `identity` - either the record ID of the API Token Identity to revoke or\n  the current-state `Msdata.SystIdentities` struct of\n  that record.","ref":"MssubMcp.html#revoke_api_token/1-parameters"},{"type":"function","title":"MssubMcp.revoke_instance_access/1","doc":"Revokes the access or invitation to access an Instance from the given Access\nAccount.\n\nSimply put, Access Accounts are both invited and granted access to Instances\nvia Access Account Instance Association records (see:\n`Msdata.SystAccessAccountInstanceAssocs`) and this\nfunction deletes those records.  This has the effect of revoking the\ninvitation to access an Instance from the Access Account/Credential Type\ncombination.\n\nRecords in any state of invited, accepted, or declined may be revoked/deleted\nusing this function.","ref":"MssubMcp.html#revoke_instance_access/1"},{"type":"function","title":"Parameters - MssubMcp.revoke_instance_access/1","doc":"* `access_account_instance_assoc` - this value may be either the populated\n  `Msdata.SystAccessAccountInstanceAssocs` struct to\n  revoke or the record ID of the record to revoke.","ref":"MssubMcp.html#revoke_instance_access/1-parameters"},{"type":"function","title":"MssubMcp.revoke_instance_access/2","doc":"Revokes the access or invitation to access an Instance from the given Access\nAccount/Credential Type combination, referencing the record by its composite\nkey values.\n\nThis function performs the same action as `revoke_instance_access/1` but\nidentified the record being revoked (deleted) using its composite/candidate\nkey values.","ref":"MssubMcp.html#revoke_instance_access/2"},{"type":"function","title":"Parameters - MssubMcp.revoke_instance_access/2","doc":"* `access_account_id` - the record ID of the Access Account from which the\n  invitation to access is being revoked.\n\n  * `instance_id` - the Instance record ID from which the Access Account had\n  previously been invited to access.","ref":"MssubMcp.html#revoke_instance_access/2-parameters"},{"type":"function","title":"MssubMcp.revoke_password_recovery/1","doc":"Revokes the Recovery Token Authenticator for a previously initiated Password\nCredential recovery.\n\nWhile Recovery Token Authenticators expire of their own accord after a time,\nthey may also explicitly be revoked.  In reality this means simply deleting\nthe Recovery Token Authenticator from the system.\n\nThe return value of this function on successful execution will be the success\ntuple `{:ok, :deleted}`.  If a recovery is not already underway for the\nrequested Access Account, the function will return successfully but will\nindicate that no action took place with a return of `{:ok, :not_found}`.  Any\nother condition is an error condition and the return value will be an error\ntuple indicating the nature of the issue.","ref":"MssubMcp.html#revoke_password_recovery/1"},{"type":"function","title":"Parameters - MssubMcp.revoke_password_recovery/1","doc":"* `access_account_id` - identifies the Access Account for whom the Recovery\n  Token Authenticator should be revoked.  The expected value is the record ID\n  of the Access Account.","ref":"MssubMcp.html#revoke_password_recovery/1-parameters"},{"type":"function","title":"MssubMcp.revoke_perm_role/2","doc":"Revokes a previously granted Permission Role from the given selector.\n\nOn successful execution a success tuple is returned.  If the grant was\nactually deleted this tuple will take the form `{:ok, :deleted}`.  If the\ngrant was not found for the user context identified by the `selector` then the\n`{:ok, :not_found}` tuple will be returned.  Any other outcome is an error\nresulting in an error tuple being returned.","ref":"MssubMcp.html#revoke_perm_role/2"},{"type":"function","title":"Parameters - MssubMcp.revoke_perm_role/2","doc":"* `selector` - this value is a struct which determines the specific\n  implementation of this function to call and which contains the keys/values\n  to use as the unique identifier of the user context from which you are\n  revoking Permission Roles.\n\n  * `perm_role_id` - the record ID value of the Permission Role record which\n  you are revoking from the user context identified by the `selector`.","ref":"MssubMcp.html#revoke_perm_role/2-parameters"},{"type":"function","title":"MssubMcp.revoke_validator_for_identity_id/1","doc":"Revokes a Validation Authenticator (\"Validator\") issued for the requested\nIdentity.\n\nWhile Validators will expire on their own if not confirmed first, there are\ncases where Validators should be revoked prior to that time, such as if the\nValidator communication to the user has been lost and a new Validator needs to\nbe generated.\n\nThe return value is a result tuple which indicates whether or not the\nrevocation happened (`{:ok, :deleted}`), if the Validator was not found\n(`{:ok, :not_found}`), or an error tuple in any other circumstance.","ref":"MssubMcp.html#revoke_validator_for_identity_id/1"},{"type":"function","title":"Parameters - MssubMcp.revoke_validator_for_identity_id/1","doc":"* `target_identity_id` - the record ID of the Identity record which the\n  Validator was meant to validate.  So if the Validator to revoke was for an\n  Email Identity, this value would be the ID of the Email Identity and not the\n  Validation Identity.","ref":"MssubMcp.html#revoke_validator_for_identity_id/1-parameters"},{"type":"function","title":"MssubMcp.set_instance_state/2","doc":"Sets the Instance State of an Instance.","ref":"MssubMcp.html#set_instance_state/2"},{"type":"function","title":"Parameters - MssubMcp.set_instance_state/2","doc":"* `instance` - the current `Msdata.SystInstances` struct\n  representing the Instance to be updated.\n\n  * `instance_state_id` - The record ID of the new Instance State value into\n  which to place the Instance record.","ref":"MssubMcp.html#set_instance_state/2-parameters"},{"type":"function","title":"MssubMcp.set_setting_value/3","doc":"Sets the value of any one setting type for the named setting.","ref":"MssubMcp.html#set_setting_value/3"},{"type":"function","title":"Parameters - MssubMcp.set_setting_value/3","doc":"* `setting_name` - the name of the setting to update with the new value.\n\n  * `setting_type` - sets which of the different available value types is\n    being updated.\n\n  * `setting_value` - is the new value to set on the setting. Note that the\n    setting value must be appropriate for the `setting_type` argument or an\n    error will be raised.","ref":"MssubMcp.html#set_setting_value/3-parameters"},{"type":"function","title":"Examples - MssubMcp.set_setting_value/3","doc":"iex> MssubMcp.set_setting_value(\n    ...>   \"set_example_setting\",\n    ...>   :setting_decimal,\n    ...>   Decimal.new(\"1029.3847\"))\n    :ok","ref":"MssubMcp.html#set_setting_value/3-examples"},{"type":"function","title":"MssubMcp.set_setting_values/2","doc":"Sets one or more of the available setting types for the named setting.\n\nThis function is similar to `set_setting_values/4`, except that multiple\nsetting types can have their values set at the same time.  In addition to the\ntyped setting values, the setting display name and/or user description values\nmay also be set.","ref":"MssubMcp.html#set_setting_values/2"},{"type":"function","title":"Parameters - MssubMcp.set_setting_values/2","doc":"* `setting_name` - the name of the setting to update with the new values.\n\n  * `update_params` - is a map that complies with the\n    `MscmpSystSettings.Types.setting_service_params()` type specification and\n    includes the updates to setting type values, updates to the `display_name`\n    value, and/or updates to the `user_description` value.","ref":"MssubMcp.html#set_setting_values/2-parameters"},{"type":"function","title":"Examples - MssubMcp.set_setting_values/2","doc":"iex> update_values = %{\n    ...>   user_description: \"An example of updating the user description.\",\n    ...>   setting_integer: 6758,\n    ...>   setting_date_range:\n    ...>      %MscmpSystDb.DbTypes.DateRange{\n    ...>        lower: ~D[2022-04-01],\n    ...>        upper: ~D[2022-04-12],\n    ...>        upper_inclusive: true\n    ...>      }\n    ...> }\n    iex> MssubMcp.set_setting_values(\n    ...>   \"set_example_setting\",\n    ...>   update_values)\n    :ok","ref":"MssubMcp.html#set_setting_values/2-examples"},{"type":"function","title":"MssubMcp.start_all_applications/2","doc":"Starts all Applications and each Application's child Instances.\n\nThis function calls the `start_application/3` function for each Application\nconfigured in the system.  See the documentation for `start_application/3`\nfor more information about this function and the available parameters.","ref":"MssubMcp.html#start_all_applications/2"},{"type":"function","title":"MssubMcp.start_application/3","doc":"Starts the requested Application and its child Instances.\n\nFor the requested Application, start a DynamicSupervisor under which to\nsupervise all of the services related to that Application including its child\nInstances.\n\nOnce the Application supervisor is started any child Instances which are in a\nstart-eligible status are started under the Application supervisor.  The\nInstance startup process starts each Instance asynchronously and concurrently.\nThe instance startup process will also upgrade each Instance Datastore to the\ncurrent version of the application, if required.  As such, you should be\nprepared for Application startup to be long running.","ref":"MssubMcp.html#start_application/3"},{"type":"function","title":"Parameters - MssubMcp.start_application/3","doc":"* `application` - either the record ID or the\n  `Msdata.SystApplications` struct representing the\n  Application to start.\n\n  * `startup_options` - a map of values containing the Startup Options\n  obtained from the `MscmpSystOptions` component.\n\n  * `opts` - a Keyword List of optional values used during the initialization\n  process.  The available options include:\n\n    * `max_concurrency` - the maximum number of Instances to start\n    concurrently.  This defaults to the greater of 1 or one quarter of the\n    value returned by `System.schedulers_online/0` floored.\n\n    * other available options are passed to `start_instance/3`.  See the\n    documentation for `start_instance/3` for the options it is able to accept.","ref":"MssubMcp.html#start_application/3-parameters"},{"type":"function","title":"MssubMcp.start_instance/3","doc":"Starts an Instance and places it under the appropriate Application's\nsupervisor.\n\nAn Instance is essentially a tenant environment running a specific\nApplication.  Each environment's runtime characteristics are independent of\nother environments configured to run in the same system.\n\nTo be started the Instance must be in an Instance State of either functional\ntype `instance_states_initialized` or `instance_states_active`.  Trying to\nstart an Instance in other Instance States will result in an error.\n\nNote that we assume that the Application supervisor is already started and is\nready to start child processes.","ref":"MssubMcp.html#start_instance/3"},{"type":"function","title":"Parameters - MssubMcp.start_instance/3","doc":"* `instance` - either the record ID or the\n  `Msdata.SystInstances` struct of the Instance to start.\n\n  * `startup_options` - a map of values containing the Startup Options\n  obtained from the `MscmpSystOptions` component.\n\n  * `opts` - a Keyword List of optional values used during the initialization\n  process.  The available options include:\n\n    * `migrating_state_id` - the record ID of the Instance State to use while\n    the starting Instance is being updated to the most current database\n    definition of the application.  If not provided the currently configured\n    default Instance State for functional type `instance_states_migrating`\n    will be used.\n\n    * `active_state_id` - the record ID of the Instance State to use\n    indicating that the Instance is ready to accept user workloads.  If not\n    provided the currently configured default Instance State for functional\n    type `instance_states_active` will be used.\n\n    * `failure_state_id` - the record ID of the Instance State to use\n    indicating that the Instance startup process has failed and that the\n    Instance is in an inconsistent state.  If not provided the currently\n    configured default Instance State for functional type\n    `instance_states_failure` will be used.\n\n    * `migration_bindings` - this a Keyword List containing values that will\n    be substituted into the migration SQL files used to update a Datastore\n    to the current version of the Application.  Usually, there is no need to\n    provide this option as the most common migration bindings are\n    automatically generated from Instance record data.","ref":"MssubMcp.html#start_instance/3-parameters"},{"type":"function","title":"MssubMcp.start_mcp_service_context/0","doc":"Establishes MCP Subsystem process references in the calling process's process\ndictionary.\n\nDatastore, Enumerations, and Settings services are determined by entries in\nthe executing process's Process Dictionary.  The MCP Subsystem as an OTP\nApplication starts these services under pre-determined local names which are\nin turn set in the Process Dictionary by this function.\n\nThis function is used by processes wishing to set MCP Subsystem services as\nthe long running context spanning multiple function calls by the process.  For\nexample, a GenServer that only every access MCP Subsystem Datastores or\nServices can call this during the initialization process which will live for\nthe life of the GenServer or until they are explicitly unset by some other\ncall.\n\nThe return value of the call provides the caller references to identifiers for\neach of the three previously set target services represented as a tuple:\n\n    {\n       ,\n       ,\n       \n    }\n\nThis value is suitable to pass to `stop_mcp_service_context/1` if the MCP\nSubsystem context setting is only intended to be temporary.","ref":"MssubMcp.html#start_mcp_service_context/0"},{"type":"function","title":"MssubMcp.stop_all_applications/1","doc":"Stops all Applications, Application Supervisors, and their child Instances.\n\nThis function will call `stop_application/2` for each Application configured\nin the system.  For more information about the available options and behaviors\nof Application shutdown, please see the documentation for\n`stop_application/2`.","ref":"MssubMcp.html#stop_all_applications/1"},{"type":"function","title":"MssubMcp.stop_application/2","doc":"Shuts down the Supervisor process of the requested Application and all of its\nchild processes, including Instances.","ref":"MssubMcp.html#stop_application/2"},{"type":"function","title":"Parameters - MssubMcp.stop_application/2","doc":"* `application` - either the record ID or the\n  `Msdata.SystApplications` struct representing the\n  Application to stop.\n\n  * `opts` - a Keyword List of optional values used during the initialization\n  process.  The available options include:\n\n    * `supervisor_shutdown_timeout` - a timeout value used to allow processes\n    supervised by the Application supervisor to shut down cleanly.  By\n    default, this value is set to 60,000ms.\n\n    * Other options available are defined by and passed to the\n    `stop_instance/2` function for Instance shutdown.  See the\n    `stop_instance/2` for full information of the available options.","ref":"MssubMcp.html#stop_application/2-parameters"},{"type":"function","title":"MssubMcp.stop_instance/2","doc":"Stops an Instance.\n\nStopping an Instance shuts down its supervisor and any monitored processes.","ref":"MssubMcp.html#stop_instance/2"},{"type":"function","title":"Parameters - MssubMcp.stop_instance/2","doc":"* `instance` - either the record ID or the\n  `Msdata.SystInstances` struct of the Instance to stop.\n\n  * `opts` - a Keyword List of optional values used during the initialization\n  process.  The available options include:\n\n    * `supervisor_shutdown_timeout` - a timeout value used to allow processes\n    supervised by the Instance supervisor to shut down cleanly.  By default,\n    this value is set to 60,000ms.\n\n    * `db_shutdown_timeout` - a timeout value used to limit the time allowed\n    for a clean shutdown of the database connections used for operating\n    Datastore.  See the documentation for\n    `MscmpSystDb.stop_datastore/2` for more information.","ref":"MssubMcp.html#stop_instance/2-parameters"},{"type":"function","title":"MssubMcp.stop_mcp_service_context/1","doc":"Unsets the MCP Subsystem service references from the process's Process\nDictionary.\n\nThis function unsets the MCP Subsystem service references in one of two ways\ndepending on the argument passed to the function.  If a tuple in the form:\n\n    {\n       ,\n       ,\n       \n    }\n\nis passed, the references in the tuple will be set as the new service context\nfor the process.  This is useful if a previous context existed and only\ntemporary access to the MCP Subsystem context was required (see\n`start_mcp_service_context/0` for the most common source for these values.)\n\nOtherwise the service context values in the Process Dictionary are set to\n`nil` and calls to other contextually sensitive functions will fail until a\nnew service context is set for the process.\n\nThe function simply returns `:ok` once it has stopped the MCP Subsystem\nservice context.","ref":"MssubMcp.html#stop_mcp_service_context/1"},{"type":"function","title":"Parameters - MssubMcp.stop_mcp_service_context/1","doc":"* `replacement_service_names` - an optional tuple of references to the\n  services which are to replace the MCP Subsystem service references being\n  unset by this function.  See the above for the form of the tuple.  If this\n  parameter is omitted, the Process Dictionary references for context services\n  will be set `nil`, meaning no service context aware functions will work\n  properly until a new service context is set.","ref":"MssubMcp.html#stop_mcp_service_context/1-parameters"},{"type":"function","title":"MssubMcp.test_credential/2","doc":"Tests a candidate password against the effective Password Rules for a given\nAccess Account.\n\nPrior to attempting to save a Password Credential, it should be tested for\ncompliance with the Global Password Rules and any Owner Password Rules that\nexist for the Owner of the Access Account.  This function performs that test\nand will return all of the violations detected.  If no issues are detected,\na success tuple with a value of empty list will be returned (`{:ok, []}`).\n\nNote that this function is recommended to run prior to attempting to save a\nPassword Credential, but is not required.  Any function which can save a new\npassword to the database will independently test the candidate password\nagainst the effective Password Rules prior to saving the Credential, erroring\non any invalid password.","ref":"MssubMcp.html#test_credential/2"},{"type":"function","title":"Parameters - MssubMcp.test_credential/2","doc":"* `access_account_id` - the record ID of the Access Account for whom to\n  perform the test.  The applicable Password Rules may derive from the\n  Access Account Owner if the Access Account is in fact owned.\n\n  * `plaintext_pwd` - the candidate Password to test against the rules.","ref":"MssubMcp.html#test_credential/2-parameters"},{"type":"function","title":"Examples - MssubMcp.test_credential/2","doc":"A successful password test.\n\n    iex> {:ok, access_account_id} =\n    ...>   MssubMcp.get_access_account_id_by_name(\"example_accnt\")\n    iex> MssubMcp.test_credential(access_account_id, \"A Passing Password.\")\n    {:ok, []}\n\n  An invalid password test.\n\n    iex> {:ok, access_account_id} =\n    ...>   MssubMcp.get_access_account_id_by_name(\"example_accnt\")\n    iex> MssubMcp.test_credential(access_account_id, \"short\")\n    {:ok, [password_rule_length_min: 8]}","ref":"MssubMcp.html#test_credential/2-examples"},{"type":"function","title":"MssubMcp.update_access_account/2","doc":"Updates the maintainable fields of a given Access Account record.","ref":"MssubMcp.html#update_access_account/2"},{"type":"function","title":"Parameters - MssubMcp.update_access_account/2","doc":"* `access_account` - either the record ID value of the Access Account to\n  update or is the complete `Msdata.SystAccessAccounts`\n  struct representing the before-update state of the Access Account record.\n\n  * `access_account_params` - a map containing those attributes to be changed\n  along with their new values.","ref":"MssubMcp.html#update_access_account/2-parameters"},{"type":"function","title":"Example - MssubMcp.update_access_account/2","doc":"iex> {:ok, target_access_account} =\n    ...>   MssubMcp.get_access_account_by_name(\"example_accnt\")\n    iex> {:ok, updated_access_account} =\n    ...>   MssubMcp.update_access_account(\n    ...>     target_access_account,\n    ...>     %{external_name: \"Updated Example Account Name\"}\n    ...>   )\n    iex> %Msdata.SystAccessAccounts{\n    ...>   external_name: \"Updated Example Account Name\"\n    ...> } = updated_access_account","ref":"MssubMcp.html#update_access_account/2-example"},{"type":"function","title":"MssubMcp.update_api_token_external_name/2","doc":"Updates the External Name value of an existing API Token Identity.\n\nAPI Token Identities permit Access Account holder naming of the Identity as it\nmay be common for an one Access Account to require multiple API Token\nAuthenticators for different purposes.\n\nOn success this function returns a success tuple where the value element of\nthe tuple is the updated `Msdata.SystIdentities` struct.\nOn error, an error tuple is returned.","ref":"MssubMcp.html#update_api_token_external_name/2"},{"type":"function","title":"Parameters - MssubMcp.update_api_token_external_name/2","doc":"* `identity` - either the record ID of the API Token Identity to update or\n  the current-state `Msdata.SystIdentities` struct of\n  that record.\n\n  * `external_name` - the text of the updated External Name value or `nil` to\n  remove the text of an existing non-nil value.","ref":"MssubMcp.html#update_api_token_external_name/2-parameters"},{"type":"function","title":"MssubMcp.update_application/2","doc":"Updates an existing Application record using the provided parameters as new\nvalues.\n\nAllows an Application Subsystem program to update its representative\nApplication record as required.\n\n>##","ref":"MssubMcp.html#update_application/2"},{"type":"function","title":"Note {: .neutral} - MssubMcp.update_application/2","doc":">\n> Note that this function is meant to expose Application record management to\n> the relevant Application Subsystem programs and is not intended for regular\n> management activities by end users.","ref":"MssubMcp.html#update_application/2-note-neutral"},{"type":"function","title":"Parameters - MssubMcp.update_application/2","doc":"* `application` - either a fully populated `Msdata.SystApplications` struct\n  representing the current state of the Application record or the ID of the\n  Application record to update.  This argument is required.\n\n  * `application_params` - a map containing the attributes with updated values\n  for the Application record update operation.  The attributes which may be\n  updated are:\n\n    * `display_name` - a unique, friendly name identifying the Application and\n    for use in user interfaces.  This value may not be set `nil` if it is\n    included.\n\n    * `syst_description` - a user facing description of the Application\n    including any special usage requirements or preconditions.  This attribute\n    may not be set `nil` if it is included.","ref":"MssubMcp.html#update_application/2-parameters"},{"type":"function","title":"Examples - MssubMcp.update_application/2","doc":"Creating a new Application record.\n    iex> target_app_id = MssubMcp.get_application_id_by_name(\"ex_app2\")\n    iex> update_app_params = %{\n    ...>   display_name: \"Example App #2\",\n    ...>   syst_description: \"An updated example application.\"\n    ...> }\n    iex> {:ok, %Msdata.SystApplications{display_name: \"Example App #2\"}} =\n    ...>   MssubMcp.update_application(target_app_id, update_app_params)","ref":"MssubMcp.html#update_application/2-examples"},{"type":"function","title":"MssubMcp.update_application_context/2","doc":"Updates an existing Application Context record.\n\nAllows an Application Subsystem to update its Application Context entries as\npermitted.\n\n>##","ref":"MssubMcp.html#update_application_context/2"},{"type":"function","title":"Note {: .neutral} - MssubMcp.update_application_context/2","doc":">\n> Note that this function is meant to expose Application record management to\n> the relevant Application Subsystem programs and is not intended for regular\n> management activities by end users.","ref":"MssubMcp.html#update_application_context/2-note-neutral"},{"type":"function","title":"Parameters - MssubMcp.update_application_context/2","doc":"* `application_context` - this required parameter may either be the\n  Application Context record ID or the fully populated\n  `Msdata.SystApplicationContexts` struct to update.\n\n  * `application_context_params` - a map of attributes which are to be updated\n  with the new values of those attributes.  The available attributes for\n  updates are:\n\n    * `display_name` - a unique, friendly name identifying the Application\n    Context and for use in user interfaces.  This attribute is required and\n    must be unique in the system.\n\n    * `description` - a description of the Application Context's role in the\n    application and database.  This becomes a comment in the database attached\n    to the database role created for the context.\n\n    * `start_context` - a required boolean value which establishes the default\n    value of derived Instance Context (`Msdata.SystInstanceContexts`)\n    `start_context` settings.  When true, an Instance Context record derived\n    from this Application Context will be, by default, started as active\n    database connections when the parent Instance is started.  False indicates\n    that by default Instance startup will not establish database connections\n    for the context.  This value muse be set `false` for any Application\n    Context defining a Datastore Owner Context or any other Context where the\n    `login_context` is set `false`.","ref":"MssubMcp.html#update_application_context/2-parameters"},{"type":"function","title":"Examples - MssubMcp.update_application_context/2","doc":"Updating an existing Application Context record\n\n    iex> app_context_id =\n    ...>   MssubMcp.get_application_context_id_by_name(\"ex_app2_updctx\")\n    iex> update_params = %{\n    ...>   display_name: \"Updated Ex. App 2 Context\",\n    ...>   description: \"A now updated description\",\n    ...>   start_context: false\n    ...> }\n    iex> {:ok,\n    ...>   %Msdata.SystApplicationContexts{\n    ...>     display_name: \"Updated Ex. App 2 Context\",\n    ...>     description: \"A now updated description\",\n    ...>     start_context: false\n    ...>   }} =\n    ...>   MssubMcp.update_application_context(app_context_id, update_params)","ref":"MssubMcp.html#update_application_context/2-examples"},{"type":"function","title":"MssubMcp.update_global_network_rule/2","doc":"Updates an existing Global Network Rule with new values.\n\nThis function works similar to `create_global_network_rule/1` but updates an\nexisting Global Network Rule record rather than creating a new one.\n\nOn successful update, a result tuple in the form `{:ok,  }` is returned\nwhere the   is the fully populated Data struct of the record just\nupdated.  If an exception is raised this function will return a failure tuple\nin the form of `{:error,  }`.","ref":"MssubMcp.html#update_global_network_rule/2"},{"type":"function","title":"Parameters - MssubMcp.update_global_network_rule/2","doc":"* `global_network_rule` - this value is either a fully populated\n  `Msdata.SystGlobalNetworkRules` struct of an existing\n  Global Network Rule record or the ID of such a record.  If the data struct\n  is provided, Ecto optimistic locking is applied to the update operation.\n\n  * `update_params` - a map representing the values to use when updating the\n  Global Network Rule.  All parameters are optional, with omission meaning\n  that the existing value should retain its current value.  See\n  `t:MscmpSystAuthn.Types.global_network_rule_params/0` for the\n  available attributes.","ref":"MssubMcp.html#update_global_network_rule/2-parameters"},{"type":"function","title":"MssubMcp.update_global_password_rules/1","doc":"Updates the Global Password Rules with new values.\n\nThe Global Password Rules are created at system installation time with a\ndefault and recommended set of values, but these values may be customized as\ndesired any time after installation.\n\nNote that the original Global Password Rules data will be retrieved for use in\nthe update process and that no Ecto optimistic locking will be employed with\nthis update.","ref":"MssubMcp.html#update_global_password_rules/1"},{"type":"function","title":"Parameters - MssubMcp.update_global_password_rules/1","doc":"* `update_params` - a map of the values to use when updating the Global\n  Password Rules record. See\n  `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MssubMcp.html#update_global_password_rules/1-parameters"},{"type":"function","title":"MssubMcp.update_global_password_rules/2","doc":"Updates the Global Password Rules with new values using a caller provided\ndata source record.\n\nThis function works the same as described in `create_update_global_password_rules/1`\nexcept that in this version the caller must also provide a source\ndata struct to act as the basis of the update.  Ecto optimistic locking will\nbe applied to the update process.","ref":"MssubMcp.html#update_global_password_rules/2"},{"type":"function","title":"Parameters - MssubMcp.update_global_password_rules/2","doc":"* `global_password_rules` - a fully populated\n  `Msdata.SystGlobalPasswordRules` record representing\n  the state of the Global Password Rules prior to the change.\n\n  * `update_params` - a map of the values to use when updating the Global\n  Password Rules record. See\n  `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MssubMcp.html#update_global_password_rules/2-parameters"},{"type":"function","title":"MssubMcp.update_instance_network_rule/2","doc":"Updates an existing Instance Network Rule with new values.\n\nThis function works similar to `create_instance_network_rule/2` but updates an\nexisting Instance Network Rule record rather than creating a new one.\n\nOn successful update, a result tuple in the form `{:ok,  }` is returned\nwhere the   is the fully populated Data struct of the record just\nupdated.  If an exception is raised this function will return a failure tuple\nin the form of `{:error,  }`.","ref":"MssubMcp.html#update_instance_network_rule/2"},{"type":"function","title":"Parameters - MssubMcp.update_instance_network_rule/2","doc":"* `instance_network_rule` - this value is either a fully populated\n  `Msdata.SystInstanceNetworkRules` struct of an\n  existing Instance Network Rule record or the ID of such a record.  If the\n  data struct  is provided, Ecto optimistic locking is applied to the update\n  operation.\n\n  * `update_params` - a map representing the values to use when updating the\n  Instance Network Rule.  All parameters are optional, with omission meaning\n  that the existing value should retain its current value.  See\n  `t:MscmpSystAuthn.Types.instance_network_rule_params/0` for the\n  available attributes.","ref":"MssubMcp.html#update_instance_network_rule/2-parameters"},{"type":"function","title":"MssubMcp.update_instance_type/2","doc":"Updates an existing Instance Type record via the `MscmpSystEnums` service.","ref":"MssubMcp.html#update_instance_type/2"},{"type":"function","title":"Parameters - MssubMcp.update_instance_type/2","doc":"* `instance_type_name` - the internal name of the Instance Type to target\n  for updating.\n\n  * `instance_type_params` - the parameters to use when creating the new\n  Instance Type.  All attributes in the parameter map are optional in updating\n  contexts.","ref":"MssubMcp.html#update_instance_type/2-parameters"},{"type":"function","title":"MssubMcp.update_instance_type_context/2","doc":"Updates Instance Type Context default values which are applied to new Instance\nContexts.","ref":"MssubMcp.html#update_instance_type_context/2"},{"type":"function","title":"Parameters - MssubMcp.update_instance_type_context/2","doc":"* `instance_type_context` - this value may either be the record ID of the\n  target Instance Type Context record or a copy of the current\n  `Msdata.SystInstanceTypeContexts` struct representing the\n  target record.\n\n  * `instance_type_context_params` - a map containing those attributes to be\n  updated with their new values.\n\n    * `instance_type_id` - the ID value of the owning Instance Type record.\n    This value is required unless the `instance_type_name` attribute is\n    provided.\n\n    * `instance_type_name` - the internal name value of the owning Instance\n    Type record.  This value required unless the `instance_type_id` value is\n    provided instead.\n\n    * `application_context_id` - the record ID value of the Application\n    Context with which this record is associated.  This value is required\n    unless the `application_context_name` value is provided instead.\n\n    * `application_context_name` -  the internal name value of the Application\n    Context with which this record is associated.  This value is required\n    unless the `application_context_id` value is provided instead.\n\n    * `default_db_pool_size` - the default size of the database connection\n    pool to use for Instances Contexts created for Instances of this Instance\n    Type.  This field defaults to 0 on Instance Type Context creation.","ref":"MssubMcp.html#update_instance_type_context/2-parameters"},{"type":"function","title":"MssubMcp.update_owner/2","doc":"Updates an Owner record.","ref":"MssubMcp.html#update_owner/2"},{"type":"function","title":"Parameters - MssubMcp.update_owner/2","doc":"* `owner` - This value must either by the record ID of an existing Owner\n  record or the `Msdata.SystOwners` struct representing an\n  existing owner.\n\n  * `update_params` - a map of Owner record attributes to be updated.  For\n  update operations only those attributes to be updates must be provided.\n\n    * `internal_name` - a predetermined unique identifier for the Owner\n    record for use in programmatic contexts.  This attribute must be unique in\n    the system and may not be nil.\n\n    * `display_name` - a unique, friendly name identifying the owner and for\n    use in user interfaces.  This attribute must be unique in the system and\n    may not be nil.\n\n    * `owner_state_id` - the record ID value of the new Owner State of the\n    Owner record.  Note that if this attribute is provided, but is set nil,\n    an error will result.","ref":"MssubMcp.html#update_owner/2-parameters"},{"type":"function","title":"MssubMcp.update_owner_network_rule/2","doc":"Updates an existing Owner Network Rule with new values.\n\nThis function works similar to `create_owner_network_rule/2` but updates an\nexisting Owner Network Rule record rather than creating a new one.\n\nOn successful update, a result tuple in the form `{:ok,  }` is returned\nwhere the   is the fully populated Data struct of the record just\nupdated.  If an exception is raised this function will return a failure tuple\nin the form of `{:error,  }`.","ref":"MssubMcp.html#update_owner_network_rule/2"},{"type":"function","title":"Parameters - MssubMcp.update_owner_network_rule/2","doc":"* `owner_network_rule` - this value is either a fully populated\n  `Msdata.SystOwnerNetworkRules` struct of an existing\n  Owner Network Rule record or the ID of such a record.  If the data struct\n  is provided, Ecto optimistic locking is applied to the update operation.\n\n  * `update_params` - a map representing the values to use when updating the\n  Owner Network Rule.  All parameters are optional, with omission meaning\n  that the existing value should retain its current value.  See\n  `t:MscmpSystAuthn.Types.owner_network_rule_params/0` for the\n  available attributes.","ref":"MssubMcp.html#update_owner_network_rule/2-parameters"},{"type":"function","title":"MssubMcp.update_owner_password_rules/2","doc":"Updates the Owner Password Rules with new values.\n\nAfter creation, Owner Password Rules may be updated with new values as might\nmeet the specific needs of the Owner.","ref":"MssubMcp.html#update_owner_password_rules/2"},{"type":"function","title":"Parameters - MssubMcp.update_owner_password_rules/2","doc":"* `owner` - the record ID of the Owner for whom the Password Rules are\n  being updated or the fully populated data struct representing the current\n  Owner Password Rules.  Note that if the data struct is provided Ecto\n  optimistic locking will be in effect.\n\n  * `update_params` - a map of the values to use when updating the Owner\n  Password Rules record. See\n  `t:MscmpSystAuthn.Types.password_rule_params/0` for details\n  regarding the available attributes.","ref":"MssubMcp.html#update_owner_password_rules/2-parameters"},{"type":"function","title":"MssubMcp.update_session/3","doc":"Replaces the Session Data of the named Session record with the Session Data\nprovided.\n\nAs with other kinds of interactions with the Session, updating the Session\ndata will also update the expiration date/time.\n\nAttempting to update the Session Data of an already expired Session will\nbe treated as attempting to update a not found record.","ref":"MssubMcp.html#update_session/3"},{"type":"function","title":"Parameters - MssubMcp.update_session/3","doc":"* `session_name` - the Session Name that was generated by `create_session/2`\n  at Session create time.  This argument is required.\n\n  * `session_data` - the updated Session Data which replaces the existing\n  Session Data.  Currently the expectation is that this value will be any\n  arbitrary `Map`.  This argument is required.\n\n  * `opts` - a Keyword List of optional parameters.  The available parameters\n  are:\n\n    * `expires_after` - the number of seconds for which the session will be\n    considered valid.  The default value for this setting via this API is the\n    current value of the MCP integer setting `mssub_mcp_session_expiration`; \n    by default that value is 3,600 seconds (1 hour).","ref":"MssubMcp.html#update_session/3-parameters"},{"type":"function","title":"Examples - MssubMcp.update_session/3","doc":"Updating a Session with new data and resetting the expiration date/time to\n30 minutes from update time.\n\n    iex> MssubMcp.update_session(\"example_update_session\", %{updated_key: \"updated_value\"},\n    ...>   expires_after: 1800)\n    :ok\n    iex> MssubMcp.get_session(\"example_update_session\")\n    {:ok, %{\"updated_key\" => \"updated_value\"}}\n\nAttempting to update an already expired Session returns the not found value.\n\n    iex> MssubMcp.update_session(\"example_expired_session\", %{updated_key: \"updated_value\"})\n    {:ok, :not_found}","ref":"MssubMcp.html#update_session/3-examples"},{"type":"function","title":"MssubMcp.verify_password_rules/2","doc":"Compares a \"Test\" set of Password Rules against a \"Standard\" set of Password\nRules and reports on which of the \"Test\" Rules are considered less stringent\nthan the \"Standard\" Rules.\n\nThe primary use case for this function is to test how Owner Password Rules\n(\"Test\" Rules) compare against the Global Password Rules (\"Standard\" Rules),\nbut the function can compare any two rules.\n\nThe return value of this function is wrapped in a result tuple. A result of\n`{:ok,  }` is returned on success and an error tuple in the\nform of `{:error,  }` is returned on error.  The ` `\nvalue is a Keyword List where each tuple's key represents the rule violated\nand the tuple's value is the required value for that rule; whether the\nrequired value is a minimum or maximum depends on the nature of the specific\nrule being reported.","ref":"MssubMcp.html#verify_password_rules/2"},{"type":"function","title":"Parameters - MssubMcp.verify_password_rules/2","doc":"* `test_rules` - a Password Rule which will be tested against the value\n  of the `standard_rules`.  Where the `test_rules` are less stringent than the\n  `standard_rules`, a violation is reported in the result.\n\n  * `standard_rules` - the \"Standard\" against which the `test_rules` are\n  judged.  This parameter is optional and when nil the Global Password\n  Rule is retrieved and used as the default \"Standard\" Rules.  Otherwise\n  either a generic `t:MscmpSystAuthn.Types.PasswordRules.t/0` value\n  or a populated `Msdata.SystGlobalPasswordRules` data\n  struct may be provided.","ref":"MssubMcp.html#verify_password_rules/2-parameters"},{"type":"function","title":"MssubMcp.verify_password_rules!/2","doc":"Compares a \"Test\" set of Password Rules against a \"Standard\" set of Password\nRules and reports on which of the \"Test\" Rules are considered less stringent\nthan the \"Standard\" Rules, raising on error.\n\nThis function works the same as `verify_password_rules/2` except that any\nerrors cause an exception to be raised.","ref":"MssubMcp.html#verify_password_rules!/2"},{"type":"function","title":"Parameters - MssubMcp.verify_password_rules!/2","doc":"* `test_rules` - a Password Rule which will be tested against the value\n  of the `standard_rules`.  Where the `test_rules` are less stringent than the\n  `standard_rules`, a violation is reported in the result.\n\n  * `standard_rules` - the \"Standard\" against which the `test_rules` are\n  judged.  This parameter is optional and when nil the Global Password\n  Rule is retrieved and used as the default \"Standard\" Rules.  Otherwise\n  either a generic `t:MscmpSystAuthn.Types.PasswordRules.t/0` value\n  or a populated `Msdata.SystGlobalPasswordRules` data\n  struct may be provided.","ref":"MssubMcp.html#verify_password_rules!/2-parameters"}],"content_type":"text/markdown"}