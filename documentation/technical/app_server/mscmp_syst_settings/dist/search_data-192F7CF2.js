searchData={"items":[{"type":"module","title":"DevSupport","doc":"","ref":"DevSupport.html"},{"type":"function","title":"DevSupport.drop_database/2","doc":"","ref":"DevSupport.html#drop_database/2"},{"type":"function","title":"DevSupport.get_datastore_options/1","doc":"","ref":"DevSupport.html#get_datastore_options/1"},{"type":"function","title":"DevSupport.load_database/2","doc":"","ref":"DevSupport.html#load_database/2"},{"type":"function","title":"DevSupport.start_dev_environment/1","doc":"","ref":"DevSupport.html#start_dev_environment/1"},{"type":"function","title":"DevSupport.stop_dev_environment/0","doc":"","ref":"DevSupport.html#stop_dev_environment/0"},{"type":"module","title":"MscmpSystSettings","doc":"A user options configuration management service.\n\nThe Settings Service provides caching and management functions for user\nconfigurable options which govern how the application operates.  Multiple\nSettings Service instances may be in operation depending on the needs of the\napplication; for example, in the case of multi-tenancy, each tenant will have\nits own instance of the Setting Service running since each tenant's needs of\nthe application may unique.\n\nOn startup, the Settings Service creates an in memory cache and populates the\ncache from the database.  Inquiries for settings are then served from the\ncache rather than the database as needed.  Operations which change the\nSettings data are written to the database and then updated in the cache.\n\nSettings maintained by this service may be changed by users at any time while\nthe application is running.  Therefore, any logic depending on the Settings\nfrom this service should be written as to be insensitive to such changes.\nLogic should avoid multiple retrievals of the same setting during any one\ntransaction.","ref":"MscmpSystSettings.html"},{"type":"function","title":"MscmpSystSettings.child_spec/1","doc":"Returns a child specification for the Settings Service.","ref":"MscmpSystSettings.html#child_spec/1"},{"type":"function","title":"Parameters - MscmpSystSettings.child_spec/1","doc":"* `opts` - A keyword list of options.  See the `Options` section for\n    details.","ref":"MscmpSystSettings.html#child_spec/1-parameters"},{"type":"function","title":"Options - MscmpSystSettings.child_spec/1","doc":"* `:debug` (`t:boolean/0`) - If true, the GenServer backing the Settings Service will be started in\n  debug mode.\n\n* `:timeout` (`t:timeout/0`) - Timeout value for the start_link call. The default value is `:infinity`.\n\n* `:hibernate_after` (`t:timeout/0`) - If present, the GenServer process awaits any message for the specified\n  time before hibernating.  The timeout value is expressed in Milliseconds.\n\n* `:datastore_context_name` (`t:GenServer.name/0 or `nil`) - Specifies the name of the Datastore Context to be used by the Settings\n  Service.\n\n* `:service_name` (`t:GenServer.name/0 or `nil`) - The name to use for the GenServer backing this specific Settings Service\n  instance.","ref":"MscmpSystSettings.html#child_spec/1-options"},{"type":"function","title":"Examples - MscmpSystSettings.child_spec/1","doc":"iex> MscmpSystSettings.child_spec(\n    ...>   service_name: MyApp.SettingsService,\n    ...>   datastore_context_name: MyApp.DatastoreContext)\n    %{\n      id: MscmpSystSettings.Runtime.Service,\n      start:\n        {MscmpSystSettings,\n         :start_link,\n         [MyApp.SettingsService, MyApp.DatastoreContext, [timeout: :infinity]]},\n    }","ref":"MscmpSystSettings.html#child_spec/1-examples"},{"type":"function","title":"MscmpSystSettings.create_setting/1","doc":"Creates a new user defined setting.\n\nThis function creates a setting which is automatically marked as being user\ndefined.  User created settings such as those created by this function are the\nonly kind of settings which may be deleted via `delete_setting/2`.","ref":"MscmpSystSettings.html#create_setting/1"},{"type":"function","title":"Parameters - MscmpSystSettings.create_setting/1","doc":"* `creation_params`a map defining the new settings record.  The map must\n    contain the following keys:\n\n    * `internal_name` - This is the unique value which represents the name of\n      the setting and is used for latter lookup of setting values.  This key\n      should be suitable for programmatic references to the setting.\n\n    * `display_name` - A unique value used to display the setting name in user\n      interface contexts.\n\n    * `user_description` - A user visible description of the setting including\n      information describing how the setting is used in the application and\n      directions for correct usage.  Currently, the description must be at least\n      6 characters long.\n\n    other allowed values, such as the setting values themselves, are also\n    permitted here, but not required.","ref":"MscmpSystSettings.html#create_setting/1-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.create_setting/1","doc":"iex> new_setting = %{\n    ...>   internal_name: \"create_example_setting\",\n    ...>   display_name: \"Create Example Setting\",\n    ...>   user_description: \"An example of setting creation.\",\n    ...>   setting_integer: 9876\n    ...> }\n    iex> MscmpSystSettings.create_setting(new_setting)\n    :ok","ref":"MscmpSystSettings.html#create_setting/1-examples"},{"type":"function","title":"MscmpSystSettings.delete_setting/1","doc":"Deletes the named user defined setting from the system.\n\nNote that this function cannot be used to delete a system defined setting.\nTrying to do so will result in a error being raised.","ref":"MscmpSystSettings.html#delete_setting/1"},{"type":"function","title":"Parameters - MscmpSystSettings.delete_setting/1","doc":"* `setting_name` - the name of the setting should be deleted.","ref":"MscmpSystSettings.html#delete_setting/1-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.delete_setting/1","doc":"iex> MscmpSystSettings.delete_setting(\"delete_example_setting\")\n    :ok","ref":"MscmpSystSettings.html#delete_setting/1-examples"},{"type":"function","title":"MscmpSystSettings.get_setting_value/2","doc":"Retrieves the value of the given type for the requested setting.","ref":"MscmpSystSettings.html#get_setting_value/2"},{"type":"function","title":"Parameters - MscmpSystSettings.get_setting_value/2","doc":"* `setting_name` - the name of the setting for which to retrieve a value.\n\n* `setting_type` - the type of value which to return.","ref":"MscmpSystSettings.html#get_setting_value/2-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.get_setting_value/2","doc":"iex> MscmpSystSettings.get_setting_value(\n    ...>   \"get_example_setting\",\n    ...>   :setting_decimal_range)\n    %MscmpSystDb.DbTypes.DecimalRange{\n      lower: Decimal.new(\"1.1\"),\n      upper: Decimal.new(\"99.99\"),\n      lower_inclusive: true,\n      upper_inclusive: false\n    }","ref":"MscmpSystSettings.html#get_setting_value/2-examples"},{"type":"function","title":"MscmpSystSettings.get_setting_values/1","doc":"Retrieves all values associated with the requested setting.","ref":"MscmpSystSettings.html#get_setting_values/1"},{"type":"function","title":"Parameters - MscmpSystSettings.get_setting_values/1","doc":"* `setting_name` - the name of the setting for which to retrieve values.\n\nThe successful return of this function is an instance of the\n`Msdata.SystSettings` struct containing the values requested.","ref":"MscmpSystSettings.html#get_setting_values/1-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.get_setting_values/1","doc":"iex> MscmpSystSettings.get_setting_values(\"get_example_setting\")","ref":"MscmpSystSettings.html#get_setting_values/1-examples"},{"type":"function","title":"MscmpSystSettings.get_settings_service/0","doc":"Retrieve the current specific Settings Service name in effect for the process.\n\nThis function returns the name of the Settings Service that has been using the\n`put_settings_service/1` function to override the default Settings Service\nassociated with the Instance Name. If no specific Settings Service name has\nbeen set, this function will return `nil`.","ref":"MscmpSystSettings.html#get_settings_service/0"},{"type":"function","title":"Examples - MscmpSystSettings.get_settings_service/0","doc":"Retrieving a specific Settings Service name:\n\n    iex> MscmpSystSettings.put_settings_service(:\"MscmpSystSettings.TestSupportService\")\n    ...> MscmpSystSettings.get_settings_service()\n    :\"MscmpSystSettings.TestSupportService\"\n\n  Retrieving a specific Settings Service name when no value is currently set\n  for the process:\n\n    iex> MscmpSystSettings.put_settings_service(nil)\n    ...> MscmpSystSettings.get_settings_service()\n    nil","ref":"MscmpSystSettings.html#get_settings_service/0-examples"},{"type":"function","title":"MscmpSystSettings.list_all_settings/0","doc":"Retrieves all values for all settings.\n\nThis function returns all other setting metadata, such as the records' IDs,\ndescriptions, etc.","ref":"MscmpSystSettings.html#list_all_settings/0"},{"type":"function","title":"Examples - MscmpSystSettings.list_all_settings/0","doc":"iex> MscmpSystSettings.list_all_settings()","ref":"MscmpSystSettings.html#list_all_settings/0-examples"},{"type":"function","title":"MscmpSystSettings.put_settings_service/1","doc":"Establishes the currently active Settings Service instance for the current\nprocess.","ref":"MscmpSystSettings.html#put_settings_service/1"},{"type":"function","title":"Parameters - MscmpSystSettings.put_settings_service/1","doc":"* `settings_service_name` - the canonical name of the specific Settings\n  Service to access.  When this function is called with a non-nil argument,\n  calls to Settings related functions will make use of the Settings Service\n  specified here.  Setting this value to `nil` will clear the currently\n  active Settings Service for the process.  Any calls to Settings related\n  functions will fail until a new Settings Service is designated for the\n  process using this function with a non-nil argument.","ref":"MscmpSystSettings.html#put_settings_service/1-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.put_settings_service/1","doc":"Setting a specific Settings Service name:\n\n    iex> MscmpSystSettings.put_settings_service(:\"MscmpSystSettings.TestSupportService\")\n    ...> MscmpSystSettings.get_settings_service()\n    :\"MscmpSystSettings.TestSupportService\"\n\n  Clearing a previously set specific Service Name:\n\n    iex> MscmpSystSettings.put_settings_service(nil)\n    ...> MscmpSystSettings.get_settings_service()\n    nil","ref":"MscmpSystSettings.html#put_settings_service/1-examples"},{"type":"function","title":"MscmpSystSettings.refresh_from_database/0","doc":"Refreshes the cached settings values from the database.\n\nCalling this function causes the existing cached settings to be purged from\nthe cache and the cache to be repopulated from the database using the\ndatastore context provided to `start_link/1`.","ref":"MscmpSystSettings.html#refresh_from_database/0"},{"type":"function","title":"Examples - MscmpSystSettings.refresh_from_database/0","doc":"iex> MscmpSystSettings.refresh_from_database()\n    :ok","ref":"MscmpSystSettings.html#refresh_from_database/0-examples"},{"type":"function","title":"MscmpSystSettings.set_setting_value/3","doc":"Sets the value of any one setting type for the named setting.","ref":"MscmpSystSettings.html#set_setting_value/3"},{"type":"function","title":"Parameters - MscmpSystSettings.set_setting_value/3","doc":"* `setting_name` - the name of the setting to update with the new value.\n\n  * `setting_type` - sets which of the different available value types is\n    being updated.\n\n  * `setting_value` - is the new value to set on the setting. Note that the\n    setting value must be appropriate for the `setting_type` argument or an\n    error will be raised.","ref":"MscmpSystSettings.html#set_setting_value/3-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.set_setting_value/3","doc":"iex> MscmpSystSettings.set_setting_value(\n    ...>   \"set_example_setting\",\n    ...>   :setting_decimal,\n    ...>   Decimal.new(\"1029.3847\"))\n    :ok","ref":"MscmpSystSettings.html#set_setting_value/3-examples"},{"type":"function","title":"MscmpSystSettings.set_setting_values/2","doc":"Sets one or more of the available setting types for the named setting.\n\nThis function is similar to `set_setting_values/4`, except that multiple\nsetting types can have their values set at the same time.  In addition to the\ntyped setting values, the setting display name and/or user description values\nmay also be set.","ref":"MscmpSystSettings.html#set_setting_values/2"},{"type":"function","title":"Parameters - MscmpSystSettings.set_setting_values/2","doc":"* `setting_name` - the name of the setting to update with the new values.\n\n  * `update_params` - is a map that complies with the\n    `t:MscmpSystSettings.Types.setting_params/0` type specification and\n    includes the updates to setting type values, updates to the `display_name`\n    value, and/or updates to the `user_description` value.","ref":"MscmpSystSettings.html#set_setting_values/2-parameters"},{"type":"function","title":"Examples - MscmpSystSettings.set_setting_values/2","doc":"iex> update_values = %{\n    ...>   user_description: \"An example of updating the user description.\",\n    ...>   setting_integer: 6758,\n    ...>   setting_date_range:\n    ...>      %MscmpSystDb.DbTypes.DateRange{\n    ...>        lower: ~D[2022-04-01],\n    ...>        upper: ~D[2022-04-12],\n    ...>        upper_inclusive: true\n    ...>      }\n    ...> }\n    iex> MscmpSystSettings.set_setting_values(\n    ...>   \"set_example_setting\",\n    ...>   update_values)\n    :ok","ref":"MscmpSystSettings.html#set_setting_values/2-examples"},{"type":"function","title":"MscmpSystSettings.start_link/3","doc":"Starts an instance of the Settings Service.\n\nStarting the service establishes the required processes and pre-populates the\nservice cache with data from the database.  Most other functions in this\nmodule require that the service is started prior to use and will fail if the\nservice is not started.","ref":"MscmpSystSettings.html#start_link/3"},{"type":"function","title":"Parameters - MscmpSystSettings.start_link/3","doc":"* `service_name` - The name of the Settings Service.\n\n  * `datastore_context_name` - The name of the Datastore Context to be used by\n    the Settings Service.\n\n  * `opts` - Options for the Settings Service. See the Options section below\n    for more information.","ref":"MscmpSystSettings.html#start_link/3-parameters"},{"type":"function","title":"Options - MscmpSystSettings.start_link/3","doc":"* `:debug` (`t:boolean/0`) - If true, the GenServer backing the Settings Service will be started in\n  debug mode.\n\n* `:timeout` (`t:timeout/0`) - Timeout value for the start_link call. The default value is `:infinity`.\n\n* `:hibernate_after` (`t:timeout/0`) - If present, the GenServer process awaits any message for the specified\n  time before hibernating.  The timeout value is expressed in Milliseconds.","ref":"MscmpSystSettings.html#start_link/3-options"},{"type":"function","title":"MscmpSystSettings.terminate_settings_service/0","doc":"Terminates a running instance of the settings service.","ref":"MscmpSystSettings.html#terminate_settings_service/0"},{"type":"function","title":"Examples - MscmpSystSettings.terminate_settings_service/0","doc":"> MscmpSystSettings.terminate_settings_service()\n    :ok","ref":"MscmpSystSettings.html#terminate_settings_service/0-examples"},{"type":"module","title":"Msdata.SystSettings","doc":"The primary data structure for applications settings data.\n\nDefined in `MscmpSystSettings`.","ref":"Msdata.SystSettings.html"},{"type":"function","title":"Msdata.SystSettings.changeset/3","doc":"Produces a changeset used to create or update a Settings record.\n\nThe `change_params` argument defines the attributes to be used in maintaining\na Settings record.  Of the allowed fields, the following are required for\ncreation:\n\n  * `internal_name` - A unique key which is intended for programmatic usage\n    by the application and other applications which make use of the data.\n\n  * `display_name` - A unique key for the purposes of presentation to users\n    in user interfaces, reporting, etc.\n\n  * `user_description` - A description of the setting including its use cases\n    and any limits or restrictions.","ref":"Msdata.SystSettings.html#changeset/3"},{"type":"function","title":"Options - Msdata.SystSettings.changeset/3","doc":"* `:min_internal_name_length` (`t:pos_integer/0`) - Sets the minimum grapheme length of internal_name values. The default value is `6`.\n\n* `:max_internal_name_length` (`t:pos_integer/0`) - Sets the maximum grapheme length of internal_name values. The default value is `64`.\n\n* `:min_display_name_length` (`t:pos_integer/0`) - Sets the minimum grapheme length of display_name values. The default value is `6`.\n\n* `:max_display_name_length` (`t:pos_integer/0`) - Sets the maximum grapheme length of display_name values. The default value is `64`.\n\n* `:min_user_description_length` (`t:pos_integer/0`) - Sets the minimum grapheme length of user_description values. The default value is `6`.\n\n* `:max_user_description_length` (`t:pos_integer/0`) - Sets the maximum grapheme length of user_description values. The default value is `1000`.","ref":"Msdata.SystSettings.html#changeset/3-options"},{"type":"type","title":"Msdata.SystSettings.t/0","doc":"","ref":"Msdata.SystSettings.html#t:t/0"},{"type":"module","title":"MscmpSystSettings.Types","doc":"Types used by Settings service module.","ref":"MscmpSystSettings.Types.html"},{"type":"type","title":"MscmpSystSettings.Types.service_name/0","doc":"The valid forms of service name acceptable to identify the Settings service.\n\nWhen the service name is an atom, it is assumed to be a registered name using\nthe default Elixir name registration process.  When the service name is a\nString, you must also identify a valid registry with which the name will be\nregistered.  Finally, if the value is `nil`, the service will be started\nwithout a name and you are responsible for using the returned PID for later\naccesses of the service.","ref":"MscmpSystSettings.Types.html#t:service_name/0"},{"type":"type","title":"MscmpSystSettings.Types.setting_name/0","doc":"Identification of each unique Setting managed by the Settings Service instance.","ref":"MscmpSystSettings.Types.html#t:setting_name/0"},{"type":"type","title":"MscmpSystSettings.Types.setting_params/0","doc":"A map definition describing what specific key/value pairs are available for\npassing as SystSettings changeset parameters.","ref":"MscmpSystSettings.Types.html#t:setting_params/0"},{"type":"type","title":"MscmpSystSettings.Types.setting_types/0","doc":"Data types of values accepted by any individual setting record.  Note that any\none setting record may set values for one or more of these types concurrently.","ref":"MscmpSystSettings.Types.html#t:setting_types/0"}],"content_type":"text/markdown","producer":{"name":"ex_doc","version":[48,46,51,52,46,50]}}